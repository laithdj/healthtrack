{
  "x-generator": "NSwag v11.19.0.0 (NJsonSchema v9.10.72.0 (Newtonsoft.Json v9.0.0.0))",
  "swagger": "2.0",
  "info": {
    "title": "Core API HTTP backend.",
    "description": "This provides HTTP endpoints for configuring the Core API.",
    "version": "v1"
  },
  "host": "",
  "schemes": [
    "http"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/api/activitylog/addorupdate": {
      "post": {
        "tags": [
          "ActivityLog"
        ],
        "operationId": "ActivityLog_AddOrUpdateActivityLog",
        "parameters": [
          {
            "name": "value",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AddOrUpdateActivityLog"
            },
            "x-nullable": true
          }
        ],
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/APIResponseOfAddOrUpdateActivityLogResult"
            }
          }
        }
      }
    },
    "/api/admission/addorupdate": {
      "post": {
        "tags": [
          "Admission"
        ],
        "operationId": "Admission_AddOrUpdateAdmission",
        "parameters": [
          {
            "name": "value",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AddOrUpdateAdmission"
            },
            "x-nullable": true
          }
        ],
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/APIResponseOfAddOrUpdateAdmissionResult"
            }
          }
        }
      }
    },
    "/api/admission/cancel": {
      "post": {
        "tags": [
          "Admission"
        ],
        "operationId": "Admission_CancelAdmission",
        "parameters": [
          {
            "name": "value",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CancelAdmission"
            },
            "x-nullable": true
          }
        ],
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/APIResponseOfCancelAdmissionResult"
            }
          }
        }
      }
    },
    "/api/admission/move": {
      "post": {
        "tags": [
          "Admission"
        ],
        "operationId": "Admission_MoveAdmissionOntoPatient",
        "parameters": [
          {
            "name": "value",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/MoveAdmissionOntoPatient"
            },
            "x-nullable": true
          }
        ],
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/APIResponseOfMoveAdmissionOntoPatientResult"
            }
          }
        }
      }
    },
    "/api/alert/addorupdatealert": {
      "post": {
        "tags": [
          "Alert"
        ],
        "operationId": "Alert_AddOrUpdateAlert",
        "parameters": [
          {
            "name": "value",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AddOrUpdateAlert"
            },
            "x-nullable": true
          }
        ],
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/APIResponseOfAddOrUpdateAlertResult"
            }
          }
        }
      }
    },
    "/api/alert/delete": {
      "post": {
        "tags": [
          "Alert"
        ],
        "operationId": "Alert_DeleteAlert",
        "parameters": [
          {
            "name": "value",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DeleteAlert"
            },
            "x-nullable": true
          }
        ],
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/APIResponseOfDeleteAlertResult"
            }
          }
        }
      }
    },
    "/api/alert/finddefinition": {
      "post": {
        "tags": [
          "Alert"
        ],
        "operationId": "Alert_FindAlertDefinition",
        "parameters": [
          {
            "name": "value",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/FindAlertDefinition"
            },
            "x-nullable": true
          }
        ],
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/APIResponseOfFindAlertDefinitionResult"
            }
          }
        }
      }
    },
    "/api/AnnotationTools/Get": {
      "get": {
        "tags": [
          "AnnotationTools"
        ],
        "operationId": "AnnotationTools_Get",
        "parameters": [
          {
            "type": "string",
            "name": "formDisplay",
            "in": "query",
            "required": true,
            "x-nullable": true
          },
          {
            "type": "integer",
            "name": "recordSubCategory",
            "in": "query",
            "required": true,
            "format": "int32",
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/APIResponseOfIEnumerableOfAnnotationToolDO"
            }
          }
        }
      }
    },
    "/api/AnnotationTools/Save": {
      "post": {
        "tags": [
          "AnnotationTools"
        ],
        "operationId": "AnnotationTools_Save",
        "parameters": [
          {
            "name": "annotationTools",
            "in": "body",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/AnnotationToolDO"
              }
            },
            "x-nullable": true
          },
          {
            "type": "string",
            "name": "userId",
            "in": "query",
            "required": true,
            "x-nullable": true
          },
          {
            "type": "string",
            "name": "formDisplay",
            "in": "query",
            "required": true,
            "x-nullable": true
          },
          {
            "type": "integer",
            "name": "recordSubCategory",
            "in": "query",
            "required": true,
            "format": "int32",
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/APIResponseOfIEnumerableOfAnnotationToolDO"
            }
          }
        }
      }
    },
    "/api/AssetManagement/GetTransaction": {
      "get": {
        "tags": [
          "AssetDevice"
        ],
        "operationId": "AssetDevice_GetTransaction",
        "parameters": [
          {
            "type": "integer",
            "name": "transactionId",
            "in": "query",
            "required": true,
            "format": "int32",
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/APIResponseOfEquipmentTransactionDO"
            }
          }
        }
      }
    },
    "/api/AssetManagement/GetPatientTransactions": {
      "get": {
        "tags": [
          "AssetDevice"
        ],
        "operationId": "AssetDevice_GetPatientTransactions",
        "parameters": [
          {
            "type": "integer",
            "name": "patientId",
            "in": "query",
            "required": true,
            "format": "int32",
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/APIResponseOfListOfEquipmentTransactionDO"
            }
          }
        }
      }
    },
    "/api/AssetManagement/UpdateTransaction": {
      "post": {
        "tags": [
          "AssetDevice"
        ],
        "operationId": "AssetDevice_UpdateTransaction",
        "parameters": [
          {
            "name": "transaction",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/EquipmentTransactionDO"
            },
            "x-nullable": true
          },
          {
            "type": "string",
            "name": "userPkId",
            "in": "query",
            "required": true,
            "format": "guid",
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/APIResponseOfEquipmentTransactionDO"
            }
          }
        }
      }
    },
    "/api/AssetManagement/CreateTransaction": {
      "post": {
        "tags": [
          "AssetDevice"
        ],
        "operationId": "AssetDevice_CreateTransaction",
        "parameters": [
          {
            "name": "transaction",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/EquipmentTransactionDO"
            },
            "x-nullable": true
          },
          {
            "type": "string",
            "name": "userPkId",
            "in": "query",
            "required": true,
            "format": "guid",
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/APIResponseOfEquipmentTransactionDO"
            }
          }
        }
      }
    },
    "/api/AssetManagement/DeleteTransaction": {
      "post": {
        "tags": [
          "AssetDevice"
        ],
        "operationId": "AssetDevice_DeleteTransaction",
        "parameters": [
          {
            "type": "integer",
            "name": "transactionId",
            "in": "query",
            "required": true,
            "format": "int32",
            "x-nullable": false
          },
          {
            "type": "string",
            "name": "userPkId",
            "in": "query",
            "required": true,
            "format": "guid",
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/APIResponseOfDeleteTransactionResponseDO"
            }
          }
        }
      }
    },
    "/api/AssetManagement/GetAvailableEquipment": {
      "get": {
        "tags": [
          "AssetDevice"
        ],
        "operationId": "AssetDevice_GetAvailableEquipment",
        "parameters": [
          {
            "type": "integer",
            "name": "masterCategory",
            "in": "query",
            "required": true,
            "format": "int32",
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/APIResponseOfListOfAssetDeviceDO"
            }
          }
        }
      }
    },
    "/api/AssetManagement/GetAllEquipment": {
      "get": {
        "tags": [
          "AssetDevice"
        ],
        "operationId": "AssetDevice_GetAllEquipment",
        "parameters": [
          {
            "type": "integer",
            "name": "masterCategory",
            "in": "query",
            "required": true,
            "format": "int32",
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/APIResponseOfListOfAssetDeviceDO"
            }
          }
        }
      }
    },
    "/api/AssetManagement/GetEquipment": {
      "get": {
        "tags": [
          "AssetDevice"
        ],
        "operationId": "AssetDevice_GetEquipment",
        "parameters": [
          {
            "type": "integer",
            "name": "equipmentId",
            "in": "query",
            "required": true,
            "format": "int32",
            "x-nullable": false
          },
          {
            "type": "integer",
            "name": "masterCategory",
            "in": "query",
            "required": true,
            "format": "int32",
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/APIResponseOfAssetDeviceDO"
            }
          }
        }
      }
    },
    "/api/AssetManagement/CreateEquipment": {
      "post": {
        "tags": [
          "AssetDevice"
        ],
        "operationId": "AssetDevice_CreateEquipment",
        "parameters": [
          {
            "name": "device",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AssetDeviceDO"
            },
            "x-nullable": true
          },
          {
            "type": "string",
            "name": "userPkId",
            "in": "query",
            "required": true,
            "format": "guid",
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/APIResponseOfAssetDeviceDO"
            }
          }
        }
      }
    },
    "/api/AssetManagement/SaveEquipment": {
      "post": {
        "tags": [
          "AssetDevice"
        ],
        "operationId": "AssetDevice_SaveEquipment",
        "parameters": [
          {
            "name": "device",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AssetDeviceDO"
            },
            "x-nullable": true
          },
          {
            "type": "string",
            "name": "userPkId",
            "in": "query",
            "required": true,
            "format": "guid",
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/APIResponseOfAssetDeviceDO"
            }
          }
        }
      }
    },
    "/api/AssetManagement/DeleteEquipment": {
      "post": {
        "tags": [
          "AssetDevice"
        ],
        "operationId": "AssetDevice_DeleteEquipment",
        "parameters": [
          {
            "type": "integer",
            "name": "assetId",
            "in": "query",
            "required": true,
            "format": "int32",
            "x-nullable": false
          },
          {
            "type": "string",
            "name": "userPkId",
            "in": "query",
            "required": true,
            "format": "guid",
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/APIResponseOfAssetDeviceDO"
            }
          }
        }
      }
    },
    "/api/AssetManagement/SearchEquipment": {
      "post": {
        "tags": [
          "AssetDevice"
        ],
        "operationId": "AssetDevice_SearchEquipment",
        "parameters": [
          {
            "name": "criteria",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PAPManagementSearchDO"
            },
            "x-nullable": true
          },
          {
            "type": "integer",
            "name": "masterCategory",
            "in": "query",
            "required": true,
            "format": "int32",
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/APIResponseOfListOfAssetDeviceDO"
            }
          }
        }
      }
    },
    "/api/AssetManagement/SearchTransactionsByEquipment": {
      "post": {
        "tags": [
          "AssetDevice"
        ],
        "operationId": "AssetDevice_SearchTransactionsByEquipment",
        "parameters": [
          {
            "name": "criteria",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PAPManagementSearchDO"
            },
            "x-nullable": true
          }
        ],
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/APIResponseOfListOfEquipmentTransactionDO"
            }
          }
        }
      }
    },
    "/api/AssetManagement/SearchTransactions": {
      "post": {
        "tags": [
          "AssetDevice"
        ],
        "operationId": "AssetDevice_SearchTransactions",
        "parameters": [
          {
            "name": "criteria",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PAPManagementSearchDO"
            },
            "x-nullable": true
          }
        ],
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/APIResponseOfListOfEquipmentTransactionDO"
            }
          }
        }
      }
    },
    "/api/AssetManagement/GetEquipmentTypes": {
      "get": {
        "tags": [
          "AssetDevice"
        ],
        "operationId": "AssetDevice_GetEquipmentTypes",
        "parameters": [
          {
            "type": "integer",
            "name": "masterCategory",
            "in": "query",
            "required": true,
            "format": "int32",
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/APIResponseOfListOfInventoryCategoryDO"
            }
          }
        }
      }
    },
    "/api/AssetManagement/GetManufacturers": {
      "get": {
        "tags": [
          "AssetDevice"
        ],
        "operationId": "AssetDevice_GetManufacturers",
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/APIResponseOfListOfInventoryCompanyDO"
            }
          }
        }
      }
    },
    "/api/AssetManagement/GetModels": {
      "get": {
        "tags": [
          "AssetDevice"
        ],
        "operationId": "AssetDevice_GetModels",
        "parameters": [
          {
            "type": "integer",
            "name": "masterCategory",
            "in": "query",
            "required": true,
            "format": "int32",
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/APIResponseOfListOfPAPSearchModel"
            }
          }
        }
      }
    },
    "/api/AssetManagement/GetFundingSources": {
      "get": {
        "tags": [
          "AssetDevice"
        ],
        "operationId": "AssetDevice_GetFundingSources",
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/APIResponseOfListOfPAPFundingSource"
            }
          }
        }
      }
    },
    "/api/AssetManagement/GetPaymentStatuses": {
      "get": {
        "tags": [
          "AssetDevice"
        ],
        "operationId": "AssetDevice_GetPaymentStatuses",
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/APIResponseOfListOfPAPPaymentStatus"
            }
          }
        }
      }
    },
    "/api/AssetManagement/GetEquipmentLastLoanedPatient": {
      "get": {
        "tags": [
          "AssetDevice"
        ],
        "operationId": "AssetDevice_GetEquipmentLastLoanedPatient",
        "parameters": [
          {
            "type": "integer",
            "name": "equipmentId",
            "in": "query",
            "required": true,
            "format": "int32",
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/APIResponseOfAssetLastLoanedPatient"
            }
          }
        }
      }
    },
    "/api/AssetManagement/GetDetailsForCompanies": {
      "post": {
        "tags": [
          "AssetDevice"
        ],
        "operationId": "AssetDevice_GetDetailsForCompanies",
        "parameters": [
          {
            "name": "companyIDs",
            "in": "body",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int32"
              }
            },
            "x-nullable": true
          }
        ],
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/APIResponseOfListOfInventoryCompanyDetailsDO"
            }
          }
        }
      }
    },
    "/api/AssetManagement/CreateInventoryCategory": {
      "post": {
        "tags": [
          "AssetManagementInventory"
        ],
        "operationId": "AssetManagementInventory_CreateInventoryCategory",
        "parameters": [
          {
            "name": "category",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/InventoryCategoryDO"
            },
            "x-nullable": true
          },
          {
            "type": "string",
            "name": "userId",
            "in": "query",
            "required": true,
            "x-nullable": true
          }
        ],
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/APIResponseOfInventoryCategoryDO"
            }
          }
        }
      }
    },
    "/api/AssetManagement/CreateInventoryProduct": {
      "post": {
        "tags": [
          "AssetManagementInventory"
        ],
        "operationId": "AssetManagementInventory_CreateInventoryProduct",
        "parameters": [
          {
            "name": "product",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/InventoryProductDO"
            },
            "x-nullable": true
          },
          {
            "type": "string",
            "name": "userId",
            "in": "query",
            "required": true,
            "x-nullable": true
          }
        ],
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/APIResponseOfInventoryProductDO"
            }
          }
        }
      }
    },
    "/api/AssetManagement/UpdateInventoryCategory": {
      "post": {
        "tags": [
          "AssetManagementInventory"
        ],
        "operationId": "AssetManagementInventory_UpdateInventoryCategory",
        "parameters": [
          {
            "name": "category",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/InventoryCategoryDO"
            },
            "x-nullable": true
          },
          {
            "type": "string",
            "name": "userId",
            "in": "query",
            "required": true,
            "x-nullable": true
          }
        ],
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/APIResponseOfInventoryCategoryDO"
            }
          }
        }
      }
    },
    "/api/AssetManagement/UpdateInventoryProduct": {
      "post": {
        "tags": [
          "AssetManagementInventory"
        ],
        "operationId": "AssetManagementInventory_UpdateInventoryProduct",
        "parameters": [
          {
            "name": "product",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/InventoryProductDO"
            },
            "x-nullable": true
          },
          {
            "type": "string",
            "name": "userId",
            "in": "query",
            "required": true,
            "x-nullable": true
          }
        ],
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/APIResponseOfInventoryProductDO"
            }
          }
        }
      }
    },
    "/api/AssetManagement/GetInventoryCategory": {
      "get": {
        "tags": [
          "AssetManagementInventory"
        ],
        "operationId": "AssetManagementInventory_GetInventoryCategory",
        "parameters": [
          {
            "type": "integer",
            "name": "categoryId",
            "in": "query",
            "required": true,
            "format": "int32",
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/APIResponseOfInventoryCategoryDO"
            }
          }
        }
      }
    },
    "/api/AssetManagement/GetInventoryProduct": {
      "get": {
        "tags": [
          "AssetManagementInventory"
        ],
        "operationId": "AssetManagementInventory_GetInventoryProduct",
        "parameters": [
          {
            "type": "integer",
            "name": "productId",
            "in": "query",
            "required": true,
            "format": "int32",
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/APIResponseOfInventoryProductDO"
            }
          }
        }
      }
    },
    "/api/AssetManagement/GetAllInventoryCategory": {
      "get": {
        "tags": [
          "AssetManagementInventory"
        ],
        "operationId": "AssetManagementInventory_GetAllInventoryCategory",
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/APIResponseOfListOfInventoryCategoryDO"
            }
          }
        }
      }
    },
    "/api/AssetManagement/GetAllInventoryProduct": {
      "get": {
        "tags": [
          "AssetManagementInventory"
        ],
        "operationId": "AssetManagementInventory_GetAllInventoryProduct",
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/APIResponseOfListOfInventoryProductDO"
            }
          }
        }
      }
    },
    "/api/AssetManagement/GetAllInventoryCompanies": {
      "get": {
        "tags": [
          "AssetManagementInventory"
        ],
        "operationId": "AssetManagementInventory_GetAllInventoryCompanies",
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/APIResponseOfListOfInventoryCompanyDO"
            }
          }
        }
      }
    },
    "/api/AssetManagement/GetAllInventoryCategoryClosures": {
      "get": {
        "tags": [
          "AssetManagementInventory"
        ],
        "operationId": "AssetManagementInventory_GetAllInventoryCategoryClosures",
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/APIResponseOfListOfInventoryCategoryClosureDO"
            }
          }
        }
      }
    },
    "/api/AssetManagement/GetInventoryProductCategory": {
      "post": {
        "tags": [
          "AssetManagementInventory"
        ],
        "operationId": "AssetManagementInventory_GetInventoryProductCategory",
        "parameters": [
          {
            "name": "product",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/InventoryProductDO"
            },
            "x-nullable": true
          }
        ],
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/APIResponseOfListOfInventoryProductCategoryDO"
            }
          }
        }
      }
    },
    "/api/AssetManagement/DeleteInventoryCategory": {
      "post": {
        "tags": [
          "AssetManagementInventory"
        ],
        "operationId": "AssetManagementInventory_DeleteInventoryCategory",
        "parameters": [
          {
            "name": "category",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/InventoryCategoryDO"
            },
            "x-nullable": true
          },
          {
            "type": "string",
            "name": "userId",
            "in": "query",
            "required": true,
            "x-nullable": true
          }
        ],
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/APIResponseOfInventoryCategoryDO"
            }
          }
        }
      }
    },
    "/api/AssetManagement/DeleteInventoryProduct": {
      "post": {
        "tags": [
          "AssetManagementInventory"
        ],
        "operationId": "AssetManagementInventory_DeleteInventoryProduct",
        "parameters": [
          {
            "type": "integer",
            "name": "productId",
            "in": "query",
            "required": true,
            "format": "int32",
            "x-nullable": false
          },
          {
            "type": "string",
            "name": "userId",
            "in": "query",
            "required": true,
            "x-nullable": true
          }
        ],
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/APIResponseOfInventoryProductDO"
            }
          }
        }
      }
    },
    "/api/AssetManagement/SearchInventoryProduct": {
      "post": {
        "tags": [
          "AssetManagementInventory"
        ],
        "operationId": "AssetManagementInventory_SearchInventoryProduct",
        "parameters": [
          {
            "name": "searchTerm",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/InventoryProductFilterDO"
            },
            "x-nullable": true
          }
        ],
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/APIResponseOfListOfInventoryProductDO"
            }
          }
        }
      }
    },
    "/api/AssetManagement/SearchInventoryCategories": {
      "post": {
        "tags": [
          "AssetManagementInventory"
        ],
        "operationId": "AssetManagementInventory_SearchInventoryCategories",
        "parameters": [
          {
            "name": "searchTerm",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/InventoryCategoryFilterDO"
            },
            "x-nullable": true
          }
        ],
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/APIResponseOfListOfInventoryCategoryDO"
            }
          }
        }
      }
    },
    "/api/billworksheet/getfiltered": {
      "post": {
        "tags": [
          "BillWorksheet"
        ],
        "operationId": "BillWorksheet_GetFilteredWorksheetItems",
        "parameters": [
          {
            "name": "filter",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/BookingFilter"
            },
            "x-nullable": true
          }
        ],
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/APIResponseOfListOfBillWorksheetItem"
            }
          }
        }
      }
    },
    "/api/billworksheet/load": {
      "post": {
        "tags": [
          "BillWorksheet"
        ],
        "operationId": "BillWorksheet_GetWorksheetClaimsFromBookings",
        "parameters": [
          {
            "name": "filter",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/BookingFilter"
            },
            "x-nullable": true
          },
          {
            "type": "string",
            "name": "userPkId",
            "in": "query",
            "required": true,
            "format": "guid",
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/APIResponseOfListOfBillWorksheetItem"
            }
          }
        }
      }
    },
    "/api/billworksheet/servicesUpdate": {
      "post": {
        "tags": [
          "BillWorksheet"
        ],
        "operationId": "BillWorksheet_UpdateServicesForWorksheetClaim",
        "parameters": [
          {
            "name": "services",
            "in": "body",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/BillWorksheetItem"
              }
            },
            "x-nullable": true
          },
          {
            "type": "string",
            "name": "userPkId",
            "in": "query",
            "required": true,
            "format": "guid",
            "x-nullable": false
          },
          {
            "type": "boolean",
            "name": "setPatientNoCharge",
            "in": "query",
            "required": true,
            "x-nullable": false
          },
          {
            "type": "boolean",
            "name": "setInsurerNoCharge",
            "in": "query",
            "required": true,
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/APIResponseOfListOfBillWorksheetItem"
            }
          }
        }
      }
    },
    "/api/billworksheet/DeleteWorksheetClaim": {
      "post": {
        "tags": [
          "BillWorksheet"
        ],
        "operationId": "BillWorksheet_DeleteWorksheetClaim",
        "parameters": [
          {
            "type": "integer",
            "name": "claimId",
            "in": "query",
            "required": true,
            "format": "int32",
            "x-nullable": false
          },
          {
            "type": "string",
            "name": "userPkId",
            "in": "query",
            "required": true,
            "format": "guid",
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/APIResponseOfInt32"
            }
          }
        }
      }
    },
    "/api/billworksheet/DeleteService": {
      "post": {
        "tags": [
          "BillWorksheet"
        ],
        "operationId": "BillWorksheet_DeleteService",
        "parameters": [
          {
            "type": "integer",
            "name": "serviceId",
            "in": "query",
            "required": true,
            "format": "int32",
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/APIResponseOfBoolean"
            }
          }
        }
      }
    },
    "/api/billworksheet/getServicesForClaim": {
      "post": {
        "tags": [
          "BillWorksheet"
        ],
        "operationId": "BillWorksheet_GetServicesForClaim",
        "parameters": [
          {
            "type": "integer",
            "name": "bookingId",
            "in": "query",
            "required": true,
            "format": "int32",
            "x-nullable": false
          },
          {
            "type": "string",
            "name": "userPkId",
            "in": "query",
            "required": true,
            "format": "guid",
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/APIResponseOfListOfBillWorksheetItem"
            }
          }
        }
      }
    },
    "/api/billworksheet/CreateServiceForItemNum": {
      "post": {
        "tags": [
          "BillWorksheet"
        ],
        "operationId": "BillWorksheet_CreateServiceForItemNum",
        "parameters": [
          {
            "type": "integer",
            "name": "claimId",
            "in": "query",
            "required": true,
            "format": "int32",
            "x-nullable": false
          },
          {
            "type": "string",
            "name": "serviceCode",
            "in": "query",
            "required": true,
            "x-nullable": true
          },
          {
            "type": "integer",
            "name": "feeTableId",
            "in": "query",
            "required": true,
            "format": "int32",
            "x-nullable": false
          },
          {
            "type": "number",
            "name": "coverPercentage",
            "in": "query",
            "required": true,
            "format": "double",
            "x-nullable": true
          }
        ],
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/APIResponseOfBillWorksheetItem"
            }
          }
        }
      }
    },
    "/api/billworksheet/UpdateHealthFund": {
      "post": {
        "tags": [
          "BillWorksheet"
        ],
        "operationId": "BillWorksheet_UpdateHealthFund",
        "parameters": [
          {
            "type": "integer",
            "name": "claimId",
            "in": "query",
            "required": true,
            "format": "int32",
            "x-nullable": false
          },
          {
            "type": "integer",
            "name": "patientId",
            "in": "query",
            "required": true,
            "format": "int32",
            "x-nullable": false
          },
          {
            "type": "string",
            "name": "userPkId",
            "in": "query",
            "required": true,
            "format": "guid",
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/APIResponseOfUpdateHealthfundResponse"
            }
          }
        }
      }
    },
    "/api/billworksheet/UpdateStatus": {
      "post": {
        "tags": [
          "BillWorksheet"
        ],
        "operationId": "BillWorksheet_UpdateClaimStatus",
        "parameters": [
          {
            "type": "integer",
            "name": "claimId",
            "in": "query",
            "required": true,
            "format": "int32",
            "x-nullable": false
          },
          {
            "type": "string",
            "name": "status",
            "in": "query",
            "required": true,
            "x-nullable": true
          },
          {
            "type": "string",
            "name": "userPkId",
            "in": "query",
            "required": true,
            "format": "guid",
            "x-nullable": false
          },
          {
            "type": "string",
            "name": "method",
            "in": "query",
            "required": true,
            "x-nullable": true
          }
        ],
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/APIResponseOfListOfBillWorksheetItem"
            }
          }
        }
      }
    },
    "/api/billworksheet/Audit": {
      "post": {
        "tags": [
          "BillWorksheet"
        ],
        "operationId": "BillWorksheet_GetAuditInfoForClaim",
        "parameters": [
          {
            "type": "integer",
            "name": "claimId",
            "in": "query",
            "required": true,
            "format": "int32",
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/APIResponseOfBillWorksheetAuditInfo"
            }
          }
        }
      }
    },
    "/api/billworksheet/Services": {
      "post": {
        "tags": [
          "BillWorksheet"
        ],
        "operationId": "BillWorksheet_GetServicesList",
        "parameters": [
          {
            "type": "integer",
            "name": "feeTableId",
            "in": "query",
            "required": true,
            "format": "int32",
            "x-nullable": true
          }
        ],
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/APIResponseOfFeeTableBillItems"
            }
          }
        }
      }
    },
    "/api/booking/get": {
      "get": {
        "tags": [
          "Booking"
        ],
        "operationId": "Booking_GetBooking",
        "parameters": [
          {
            "type": "integer",
            "name": "bookingId",
            "in": "query",
            "required": true,
            "format": "int32",
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/AddBookingApiRequestParams"
            }
          }
        }
      }
    },
    "/api/booking/add": {
      "post": {
        "tags": [
          "Booking"
        ],
        "operationId": "Booking_AddBooking",
        "parameters": [
          {
            "name": "value",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AddBookingApiRequestParams"
            },
            "x-nullable": true
          }
        ],
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/APIResponseOfString"
            }
          }
        }
      }
    },
    "/api/booking/findmapping": {
      "post": {
        "tags": [
          "Booking"
        ],
        "operationId": "Booking_FindHealthTrackBooking",
        "parameters": [
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/FindHealthTrackBookingRequestParameters"
            },
            "x-nullable": true
          }
        ],
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/APIResponseOfNullableOfInt32"
            }
          }
        }
      }
    },
    "/api/booking/addorupdatebookingmapping": {
      "post": {
        "tags": [
          "Booking"
        ],
        "operationId": "Booking_AddOrUpdateBookingMapping",
        "parameters": [
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AddOrUpdateBookingMappingRequestParams"
            },
            "x-nullable": true
          }
        ],
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/APIResponseOfString"
            }
          }
        }
      }
    },
    "/api/bookingmapping/get": {
      "post": {
        "tags": [
          "Booking"
        ],
        "operationId": "Booking_GetBookingMapping",
        "parameters": [
          {
            "name": "value",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GetBookingMapping"
            },
            "x-nullable": true
          }
        ],
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/APIResponseOfGetBookingMappingResult"
            }
          }
        }
      }
    },
    "/api/bookingtype/getallrequestable": {
      "post": {
        "tags": [
          "BookingType"
        ],
        "operationId": "BookingType_GetAllRequestableBookingTypes",
        "parameters": [
          {
            "name": "value",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GetAllRequestableBookingTypes"
            },
            "x-nullable": true
          }
        ],
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/APIResponseOfGetAllRequestableBookingTypesResult"
            }
          }
        }
      }
    },
    "/api/ClinicalRecord/FetchNormalisedResults": {
      "post": {
        "tags": [
          "CardiacCT"
        ],
        "operationId": "CardiacCT_FetchResultsForRecord",
        "parameters": [
          {
            "type": "integer",
            "name": "containerId",
            "in": "query",
            "required": true,
            "format": "int64",
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/APIResponseOfCardiacContainerDO"
            }
          }
        }
      }
    },
    "/api/ClinicalRecord/SaveResultsForRecord": {
      "post": {
        "tags": [
          "CardiacCT"
        ],
        "operationId": "CardiacCT_SaveResultsForRecord",
        "parameters": [
          {
            "name": "results",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CardiacContainerDO"
            },
            "x-nullable": true
          },
          {
            "type": "string",
            "name": "username",
            "in": "query",
            "required": true,
            "x-nullable": true
          }
        ],
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/APIResponseOfCardiacContainerDO"
            }
          }
        }
      }
    },
    "/api/ClinicalRecord/CreateNewRecord": {
      "post": {
        "tags": [
          "CardiacCT"
        ],
        "operationId": "CardiacCT_CreateNewRecord",
        "parameters": [
          {
            "type": "string",
            "name": "testDate",
            "in": "query",
            "required": true,
            "format": "date-time",
            "x-nullable": false
          },
          {
            "type": "integer",
            "name": "patientId",
            "in": "query",
            "required": true,
            "format": "int32",
            "x-nullable": false
          },
          {
            "type": "integer",
            "name": "locationId",
            "in": "query",
            "required": true,
            "format": "int32",
            "x-nullable": false
          },
          {
            "type": "string",
            "name": "username",
            "in": "query",
            "required": true,
            "x-nullable": true
          }
        ],
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/APIResponseOfCardiacContainerDO"
            }
          }
        }
      }
    },
    "/api/ClinicalRecord/DeleteCardiacCTRecord": {
      "post": {
        "tags": [
          "CardiacCT"
        ],
        "operationId": "CardiacCT_DeleteCardiacCTRecord",
        "parameters": [
          {
            "type": "integer",
            "name": "containerId",
            "in": "query",
            "required": true,
            "format": "int64",
            "x-nullable": false
          },
          {
            "type": "integer",
            "name": "CVersion",
            "in": "query",
            "required": true,
            "format": "byte",
            "x-nullable": false
          },
          {
            "type": "string",
            "name": "username",
            "in": "query",
            "required": true,
            "x-nullable": true
          }
        ],
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/APIResponseOfBoolean"
            }
          }
        }
      }
    },
    "/api/ClinicalRecord/FetchReportForRecord": {
      "post": {
        "tags": [
          "CardiacCT"
        ],
        "operationId": "CardiacCT_FetchReportForRecord",
        "parameters": [
          {
            "type": "integer",
            "name": "containerId",
            "in": "query",
            "required": true,
            "format": "int64",
            "x-nullable": false
          },
          {
            "type": "integer",
            "name": "cversion",
            "in": "query",
            "required": true,
            "format": "byte",
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/APIResponseOfFullStructuredReportDO"
            }
          }
        }
      }
    },
    "/api/ClinicalRecord/SaveReportForRecord": {
      "post": {
        "tags": [
          "CardiacCT"
        ],
        "operationId": "CardiacCT_SaveReportForRecord",
        "parameters": [
          {
            "name": "report",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/FullStructuredReportDO"
            },
            "x-nullable": true
          }
        ],
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/APIResponseOfFullStructuredReportDO"
            }
          }
        }
      }
    },
    "/api/ClinicalRecords/GetClinicalRecords": {
      "get": {
        "tags": [
          "ClinicalRecord"
        ],
        "operationId": "ClinicalRecord_GetClinicalRecord",
        "parameters": [
          {
            "type": "integer",
            "name": "clinicalRecordId",
            "in": "query",
            "required": true,
            "format": "int32",
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/APIResponseOfClinicalRecordDto"
            }
          }
        }
      }
    },
    "/api/SmartText/Init": {
      "post": {
        "tags": [
          "SmartText"
        ],
        "operationId": "SmartText_SmartTextInit",
        "parameters": [
          {
            "type": "string",
            "name": "formDisplay",
            "in": "query",
            "required": true,
            "x-nullable": true
          },
          {
            "type": "integer",
            "name": "recordSubCategory",
            "in": "query",
            "required": true,
            "format": "int32",
            "x-nullable": false
          },
          {
            "type": "integer",
            "name": "doctorId",
            "in": "query",
            "required": true,
            "format": "int32",
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/APIResponseOfSmartTextBundle"
            }
          }
        }
      }
    },
    "/api/SmartText/SaveTemplate": {
      "post": {
        "tags": [
          "SmartText"
        ],
        "operationId": "SmartText_SaveSmartTextTemplate",
        "parameters": [
          {
            "name": "template",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SmartTextTemplate"
            },
            "x-nullable": true
          }
        ],
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/APIResponseOfSmartTextTemplate"
            }
          }
        }
      }
    },
    "/api/SmartText/DeleteTemplate": {
      "post": {
        "tags": [
          "SmartText"
        ],
        "operationId": "SmartText_DeleteSmartTextTemplate",
        "parameters": [
          {
            "type": "integer",
            "name": "templateId",
            "in": "query",
            "required": true,
            "format": "int32",
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/APIResponseOfBoolean"
            }
          }
        }
      }
    },
    "/api/SmartText/SavePackage": {
      "post": {
        "tags": [
          "SmartText"
        ],
        "operationId": "SmartText_SaveSmartTextPackage",
        "parameters": [
          {
            "name": "smartTextPackage",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SmartTextPackage"
            },
            "x-nullable": true
          }
        ],
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/APIResponseOfBoolean"
            }
          }
        }
      }
    },
    "/api/SmartText/SaveTemplateList": {
      "post": {
        "tags": [
          "SmartText"
        ],
        "operationId": "SmartText_SaveSmartTextTemplateList",
        "parameters": [
          {
            "name": "templateList",
            "in": "body",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/SmartTextTemplateDisplayOrder"
              }
            },
            "x-nullable": true
          },
          {
            "type": "string",
            "name": "formDisplay",
            "in": "query",
            "required": true,
            "x-nullable": true
          },
          {
            "type": "integer",
            "name": "recordSubCategory",
            "in": "query",
            "required": true,
            "format": "int32",
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/APIResponseOfListOfSmartTextTemplateDisplayOrder"
            }
          }
        }
      }
    },
    "/api/SmartText/GetReferenceIdList": {
      "post": {
        "tags": [
          "SmartText"
        ],
        "operationId": "SmartText_GetReferenceIdList",
        "parameters": [
          {
            "type": "string",
            "name": "medGroup",
            "in": "query",
            "required": true,
            "x-nullable": true
          },
          {
            "type": "string",
            "name": "medArea",
            "in": "query",
            "required": true,
            "x-nullable": true
          }
        ],
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/APIResponseOfListOfReferenceIDDO"
            }
          }
        }
      }
    },
    "/api/SmartText/GetLetterTagValues": {
      "post": {
        "tags": [
          "SmartText"
        ],
        "operationId": "SmartText_GetLetterTagValues",
        "parameters": [
          {
            "name": "tags",
            "in": "body",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "x-nullable": true
          }
        ],
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/APIResponseOfListOfHMSLetterTemplateTagValue"
            }
          }
        }
      }
    },
    "/api/Shared/GetInchesFromCentimeters": {
      "get": {
        "tags": [
          "UnitConversion"
        ],
        "operationId": "UnitConversion_GetInchesFromCentimeters",
        "parameters": [
          {
            "type": "number",
            "name": "centimeters",
            "in": "query",
            "required": true,
            "format": "double",
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/APIResponseOfSingle"
            }
          }
        }
      }
    },
    "/api/Shared/GetCentimetersFromInches": {
      "get": {
        "tags": [
          "UnitConversion"
        ],
        "operationId": "UnitConversion_GetCentimetersFromInches",
        "parameters": [
          {
            "type": "number",
            "name": "inches",
            "in": "query",
            "required": true,
            "format": "double",
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/APIResponseOfSingle"
            }
          }
        }
      }
    },
    "/api/Shared/GetPoundsFromGrams": {
      "get": {
        "tags": [
          "UnitConversion"
        ],
        "operationId": "UnitConversion_GetPoundsFromGrams",
        "parameters": [
          {
            "type": "integer",
            "name": "grams",
            "in": "query",
            "required": true,
            "format": "int32",
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/APIResponseOfSingle"
            }
          }
        }
      }
    },
    "/api/Shared/GetGramsFromPounds": {
      "get": {
        "tags": [
          "UnitConversion"
        ],
        "operationId": "UnitConversion_GetGramsFromPounds",
        "parameters": [
          {
            "type": "number",
            "name": "pounds",
            "in": "query",
            "required": true,
            "format": "double",
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/APIResponseOfSingle"
            }
          }
        }
      }
    },
    "/api/Shared/GetBSAWithMosteller": {
      "get": {
        "tags": [
          "UnitConversion"
        ],
        "operationId": "UnitConversion_GetBSAWithMosteller",
        "parameters": [
          {
            "type": "number",
            "name": "height",
            "in": "query",
            "required": true,
            "format": "double",
            "x-nullable": false
          },
          {
            "type": "integer",
            "name": "weight",
            "in": "query",
            "required": true,
            "format": "int32",
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/APIResponseOfSingle"
            }
          }
        }
      }
    },
    "/api/Shared/CalculateBMI": {
      "get": {
        "tags": [
          "UnitConversion"
        ],
        "operationId": "UnitConversion_CalculateBMI",
        "parameters": [
          {
            "type": "number",
            "name": "height",
            "in": "query",
            "required": true,
            "format": "double",
            "x-nullable": false
          },
          {
            "type": "number",
            "name": "weight",
            "in": "query",
            "required": true,
            "format": "double",
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/APIResponseOfDouble"
            }
          }
        }
      }
    },
    "/api/Shared/GetBMIDescription": {
      "get": {
        "tags": [
          "UnitConversion"
        ],
        "operationId": "UnitConversion_GetBMIDescription",
        "parameters": [
          {
            "type": "number",
            "name": "bmi",
            "in": "query",
            "required": true,
            "format": "double",
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/APIResponseOfString"
            }
          }
        }
      }
    },
    "/api/ClinicalRecordManagement/GetRecordClassifications": {
      "get": {
        "tags": [
          "RecordClassifications"
        ],
        "operationId": "RecordClassifications_GetRecordClassifications",
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/APIResponseOfIEnumerableOfRecordClassification"
            }
          }
        }
      }
    },
    "/api/ClinicalRecordManagement/UpdateRecordClassifications": {
      "post": {
        "tags": [
          "RecordClassifications"
        ],
        "operationId": "RecordClassifications_UpdateRecordClassifications",
        "parameters": [
          {
            "name": "classifications",
            "in": "body",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/RecordClassification"
              }
            },
            "x-nullable": true
          }
        ],
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/APIResponseOfRecordClassificationOf"
            }
          }
        }
      }
    },
    "/api/ClinicalRecordManagement/GetGroupUsers": {
      "get": {
        "tags": [
          "RecordClassifications"
        ],
        "operationId": "RecordClassifications_GetGroupUsers",
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/APIResponseOfIEnumerableOfString"
            }
          }
        }
      }
    },
    "/api/ClinicalRecordManagement/GetBillingGroups": {
      "get": {
        "tags": [
          "RecordClassifications"
        ],
        "operationId": "RecordClassifications_GetBillingGroups",
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/APIResponseOfIEnumerableOfString"
            }
          }
        }
      }
    },
    "/api/codingselection/addorupdate": {
      "post": {
        "tags": [
          "CodingSelection"
        ],
        "operationId": "CodingSelection_AddOrUpdateCodingSelection",
        "parameters": [
          {
            "name": "value",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AddOrUpdateCodingSelection"
            },
            "x-nullable": true
          }
        ],
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/APIResponseOfAddOrUpdateCodingSelectionResult"
            }
          }
        }
      }
    },
    "/api/codingselection/remove": {
      "post": {
        "tags": [
          "CodingSelection"
        ],
        "operationId": "CodingSelection_RemoveCodingSelection",
        "parameters": [
          {
            "name": "value",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RemoveCodingSelection"
            },
            "x-nullable": true
          }
        ],
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/APIResponseOfRemoveCodingSelectionResult"
            }
          }
        }
      }
    },
    "/api/company/get": {
      "get": {
        "tags": [
          "Company"
        ],
        "operationId": "Company_GetCompany",
        "parameters": [
          {
            "type": "integer",
            "name": "companyID",
            "in": "query",
            "required": true,
            "format": "int32",
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/APIResponseOfCompanyRequestParams"
            }
          }
        }
      }
    },
    "/api/companies/healthfunds": {
      "get": {
        "tags": [
          "Company"
        ],
        "operationId": "Company_GetHealthFunds",
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/APIResponseOfCompanyDOOf"
            }
          }
        }
      }
    },
    "/api/company/getbyhl7mappingid": {
      "get": {
        "tags": [
          "Company"
        ],
        "operationId": "Company_GetCompanyByHL7MappingID",
        "parameters": [
          {
            "type": "string",
            "name": "hl7MappingId",
            "in": "query",
            "required": true,
            "x-nullable": true
          }
        ],
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/APIResponseOfCompanyRequestParams"
            }
          }
        }
      }
    },
    "/api/company/find": {
      "post": {
        "tags": [
          "Company"
        ],
        "operationId": "Company_FindCompany",
        "parameters": [
          {
            "name": "value",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/FindCompany"
            },
            "x-nullable": true
          }
        ],
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/APIResponseOfFindCompanyResult"
            }
          }
        }
      }
    },
    "/api/company/getall": {
      "post": {
        "tags": [
          "Company"
        ],
        "operationId": "Company_GetAllCompanies",
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/APIResponseOfListOfCompanyDO"
            }
          }
        }
      }
    },
    "/api/ContractFees/{id}": {
      "get": {
        "tags": [
          "ContractFees"
        ],
        "operationId": "ContractFees_GetContracts",
        "parameters": [
          {
            "type": "integer",
            "name": "id",
            "in": "path",
            "required": true,
            "format": "int32",
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/APIResponseOfIEnumerableOfContractFeeDO"
            }
          }
        }
      }
    },
    "/api/contracts/getContracts": {
      "post": {
        "tags": [
          "Contracts"
        ],
        "operationId": "Contracts_GetContracts",
        "parameters": [
          {
            "name": "contractsSearch",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ContractsSearch"
            },
            "x-nullable": true
          }
        ],
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/APIResponseOfIEnumerableOfContractDO"
            }
          }
        }
      }
    },
    "/api/contracts/getContract": {
      "get": {
        "tags": [
          "Contracts"
        ],
        "operationId": "Contracts_GetContract",
        "parameters": [
          {
            "type": "integer",
            "name": "id",
            "in": "query",
            "required": true,
            "format": "int32",
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/APIResponseOfContractDO"
            }
          }
        }
      }
    },
    "/api/Contracts": {
      "post": {
        "tags": [
          "Contracts"
        ],
        "operationId": "Contracts_SaveContract",
        "parameters": [
          {
            "name": "updatedContract",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ContractDO"
            },
            "x-nullable": true
          }
        ],
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/APIResponseOfContractDO"
            }
          }
        }
      }
    },
    "/api/Contracts/{id}": {
      "delete": {
        "tags": [
          "Contracts"
        ],
        "operationId": "Contracts_DeleteContract",
        "parameters": [
          {
            "type": "integer",
            "name": "id",
            "in": "path",
            "required": true,
            "format": "int32",
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "schema": {
              "type": "file"
            }
          }
        }
      }
    },
    "/api/Dashboard/GetAllDashboards": {
      "get": {
        "tags": [
          "Dashboard"
        ],
        "operationId": "Dashboard_GetAllDashboards",
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/APIResponseOfListOfDashboardDO"
            }
          }
        }
      }
    },
    "/api/Dashboard/GetDashboard": {
      "get": {
        "tags": [
          "Dashboard"
        ],
        "operationId": "Dashboard_GetDashboard",
        "parameters": [
          {
            "type": "integer",
            "name": "dashboardId",
            "in": "query",
            "required": true,
            "format": "int32",
            "x-nullable": false
          },
          {
            "type": "string",
            "name": "userName",
            "in": "query",
            "required": true,
            "x-nullable": true
          },
          {
            "type": "integer",
            "name": "doctorId",
            "in": "query",
            "required": true,
            "format": "int32",
            "x-nullable": true
          }
        ],
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/APIResponseOfDashboardDO"
            }
          }
        }
      }
    },
    "/api/Dashboard/SaveDashboard": {
      "post": {
        "tags": [
          "Dashboard"
        ],
        "operationId": "Dashboard_SaveDashboard",
        "parameters": [
          {
            "name": "dashboard",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DashboardDO"
            },
            "x-nullable": true
          },
          {
            "type": "string",
            "name": "userPkId",
            "in": "query",
            "required": true,
            "format": "guid",
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/APIResponseOfDashboardDO"
            }
          }
        }
      }
    },
    "/api/Dashboard/UpdateDashboard": {
      "post": {
        "tags": [
          "Dashboard"
        ],
        "operationId": "Dashboard_UpdateDashboard",
        "parameters": [
          {
            "name": "dashboard",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DashboardDO"
            },
            "x-nullable": true
          },
          {
            "type": "string",
            "name": "userPkId",
            "in": "query",
            "required": true,
            "format": "guid",
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/APIResponseOfDashboardDO"
            }
          }
        }
      }
    },
    "/api/Dashboard/RenameDashboard": {
      "post": {
        "tags": [
          "Dashboard"
        ],
        "operationId": "Dashboard_RenameDashboard",
        "parameters": [
          {
            "type": "integer",
            "name": "id",
            "in": "query",
            "required": true,
            "format": "int32",
            "x-nullable": false
          },
          {
            "type": "string",
            "name": "name",
            "in": "query",
            "required": true,
            "x-nullable": true
          },
          {
            "type": "string",
            "name": "userPkId",
            "in": "query",
            "required": true,
            "format": "guid",
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/APIResponseOfBoolean"
            }
          }
        }
      }
    },
    "/api/Dashboard/DeleteDashboard": {
      "post": {
        "tags": [
          "Dashboard"
        ],
        "operationId": "Dashboard_DeleteDashboard",
        "parameters": [
          {
            "type": "integer",
            "name": "id",
            "in": "query",
            "required": true,
            "format": "int32",
            "x-nullable": false
          },
          {
            "type": "string",
            "name": "userPkId",
            "in": "query",
            "required": true,
            "format": "guid",
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/APIResponseOfBoolean"
            }
          }
        }
      }
    },
    "/api/Dashboard/GetUriForDashboard": {
      "get": {
        "tags": [
          "Dashboard"
        ],
        "operationId": "Dashboard_GetUriForDashboard",
        "parameters": [
          {
            "type": "integer",
            "name": "dashboardId",
            "in": "query",
            "required": true,
            "format": "int32",
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/APIResponseOfString"
            }
          }
        }
      }
    },
    "/api/departments/getall": {
      "get": {
        "tags": [
          "Department"
        ],
        "operationId": "Department_GetAll",
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/APIResponseOfGetDepartmentsResult"
            }
          }
        }
      }
    },
    "/api/import/ready": {
      "post": {
        "tags": [
          "Import"
        ],
        "operationId": "Import_CheckReady",
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "schema": {
              "type": "file"
            }
          }
        }
      }
    },
    "/api/import/file": {
      "post": {
        "tags": [
          "Import"
        ],
        "operationId": "Import_ImportFile",
        "parameters": [
          {
            "name": "value",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ImportFile"
            },
            "x-nullable": true
          }
        ],
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/APIResponseOfImportFileResponse"
            }
          }
        }
      }
    },
    "/api/doctor/getinternaldoctoridfromprovidernumber": {
      "post": {
        "tags": [
          "Doctor"
        ],
        "operationId": "Doctor_GetInternalDoctorIDFromProviderNumber",
        "parameters": [
          {
            "name": "value",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GetInternalDoctorIDFromProviderNumberRequest"
            },
            "x-nullable": true
          }
        ],
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/APIResponseOfGetInternalDoctorIDFromProviderNumberResult"
            }
          }
        }
      }
    },
    "/api/Doctor/GetAll": {
      "get": {
        "tags": [
          "Doctor"
        ],
        "operationId": "Doctor_GetAllDoctors",
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/APIResponseOfListOfDoctorDO"
            }
          }
        }
      }
    },
    "/api/Doctor/GetAtLocation": {
      "post": {
        "tags": [
          "Doctor"
        ],
        "operationId": "Doctor_GetAllDoctorsForLocation",
        "parameters": [
          {
            "type": "integer",
            "name": "locationId",
            "in": "query",
            "required": true,
            "format": "int32",
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/APIResponseOfListOfDoctorDO"
            }
          }
        }
      }
    },
    "/api/Doctor/GetDoctorList": {
      "get": {
        "tags": [
          "Doctor"
        ],
        "operationId": "Doctor_GetAllDoctorListItems",
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/APIResponseOfListOfDoctorListItem"
            }
          }
        }
      }
    },
    "/api/doctor/find": {
      "post": {
        "tags": [
          "Doctor"
        ],
        "operationId": "Doctor_FindDoctor",
        "parameters": [
          {
            "name": "value",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/FindDoctor"
            },
            "x-nullable": true
          }
        ],
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/APIResponseOfFindDoctorResult"
            }
          }
        }
      }
    },
    "/api/EquipmentRoster/Get": {
      "post": {
        "tags": [
          "EquipmentRostering"
        ],
        "operationId": "EquipmentRostering_GetEquipmentRosters",
        "parameters": [
          {
            "type": "integer",
            "name": "locationId",
            "in": "query",
            "required": true,
            "format": "int32",
            "x-nullable": false
          },
          {
            "type": "integer",
            "name": "roomId",
            "in": "query",
            "required": true,
            "format": "int32",
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/APIResponseOfEquipmentRosterResource"
            }
          }
        }
      }
    },
    "/api/EquipmentRoster/Save": {
      "post": {
        "tags": [
          "EquipmentRostering"
        ],
        "operationId": "EquipmentRostering_SaveEquipmentRoster",
        "parameters": [
          {
            "name": "equipmentRoster",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/EquipmentRosterDO"
            },
            "x-nullable": true
          },
          {
            "type": "string",
            "name": "user",
            "in": "query",
            "required": true,
            "format": "guid",
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/APIResponseOfSaveEquipmentRosterResult"
            }
          }
        }
      }
    },
    "/api/EquipmentRoster/AvailableResources": {
      "post": {
        "tags": [
          "EquipmentRostering"
        ],
        "operationId": "EquipmentRostering_GetAvailableEquipmentResources",
        "parameters": [
          {
            "type": "string",
            "name": "requestDate",
            "in": "query",
            "required": true,
            "format": "date-time",
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/APIResponseOfListOfResourceDO"
            }
          }
        }
      }
    },
    "/api/EquipmentRoster/AllResources": {
      "get": {
        "tags": [
          "EquipmentRostering"
        ],
        "operationId": "EquipmentRostering_GetAllEquipmentResources",
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/APIResponseOfListOfResourceDO"
            }
          }
        }
      }
    },
    "/api/EquipmentRoster/Delete": {
      "post": {
        "tags": [
          "EquipmentRostering"
        ],
        "operationId": "EquipmentRostering_DeleteEquipmentRoster",
        "parameters": [
          {
            "type": "integer",
            "name": "equipmentRosterId",
            "in": "query",
            "required": true,
            "format": "int32",
            "x-nullable": false
          },
          {
            "type": "string",
            "name": "userGuid",
            "in": "query",
            "required": true,
            "format": "guid",
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/APIResponseOfInt32"
            }
          }
        }
      }
    },
    "/api/contracts/getgroups": {
      "post": {
        "tags": [
          "Groups"
        ],
        "operationId": "Groups_GetGroups",
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/GroupDO"
              }
            }
          }
        }
      }
    },
    "/api/shared/GetProperties": {
      "post": {
        "tags": [
          "HMSProperty"
        ],
        "operationId": "HMSProperty_GetProperties",
        "parameters": [
          {
            "name": "propNames",
            "in": "body",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "x-nullable": true
          }
        ],
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/APIResponseOfListOfHMSPropertyDO"
            }
          }
        }
      }
    },
    "/api/shared/GetSmartTextStyle": {
      "get": {
        "tags": [
          "HMSProperty"
        ],
        "operationId": "HMSProperty_GetSmartTextStyleProperties",
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/APIResponseOfListOfSmartTextStyleProperty"
            }
          }
        }
      }
    },
    "/ImageTemplateFiles": {
      "get": {
        "tags": [
          "ImageTemplateFiles"
        ],
        "operationId": "ImageTemplateFiles_Get",
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/APIResponseOfStringOf"
            }
          }
        }
      }
    },
    "/api/ImageTemplateFiles": {
      "post": {
        "tags": [
          "ImageTemplateFiles"
        ],
        "operationId": "ImageTemplateFiles_UploadFiles",
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "schema": {
              "type": "file"
            }
          }
        }
      }
    },
    "/api/imagetemplates/getImageTemplates": {
      "get": {
        "tags": [
          "ImageTemplates"
        ],
        "operationId": "ImageTemplates_GetTemplates",
        "parameters": [
          {
            "type": "string",
            "name": "formDisplay",
            "in": "query",
            "required": true,
            "x-nullable": true
          },
          {
            "type": "integer",
            "name": "recordSubCategory",
            "in": "query",
            "required": true,
            "format": "int32",
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/APIResponseOfIEnumerableOfImageTemplateDO"
            }
          }
        }
      }
    },
    "/api/imagetemplates/updateImageTemplates": {
      "post": {
        "tags": [
          "ImageTemplates"
        ],
        "operationId": "ImageTemplates_UpdateImageTemplates",
        "parameters": [
          {
            "name": "updatedImageTemplates",
            "in": "body",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ImageTemplateDO"
              }
            },
            "x-nullable": true
          },
          {
            "type": "string",
            "name": "userName",
            "in": "query",
            "required": true,
            "x-nullable": true
          },
          {
            "type": "string",
            "name": "formDisplay",
            "in": "query",
            "required": true,
            "x-nullable": true
          },
          {
            "type": "integer",
            "name": "recordSubCategory",
            "in": "query",
            "required": true,
            "format": "int32",
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/APIResponseOfImageTemplateDOOf"
            }
          }
        }
      }
    },
    "/api/indications/getallindications": {
      "post": {
        "tags": [
          "Indications"
        ],
        "operationId": "Indications_GetAllIndications",
        "parameters": [
          {
            "name": "value",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GetAllIndications"
            },
            "x-nullable": true
          }
        ],
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/APIResponseOfGetAllIndicationsResult"
            }
          }
        }
      }
    },
    "/api/internaldoctor/getall": {
      "post": {
        "tags": [
          "InternalDoctors"
        ],
        "operationId": "InternalDoctors_GetAllInternalDoctors",
        "parameters": [
          {
            "name": "value",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GetAllInternalDoctorsParams"
            },
            "x-nullable": true
          }
        ],
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/APIResponseOfGetAllInternalDoctorsResult"
            }
          }
        }
      }
    },
    "/api/contracts/itemNumbers": {
      "get": {
        "tags": [
          "ItemFees"
        ],
        "operationId": "ItemFees_GetCategoryItemNumbers",
        "parameters": [
          {
            "type": "string",
            "name": "id",
            "in": "query",
            "required": true,
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/APIResponseOfFeeItemNumberOf"
            }
          }
        }
      }
    },
    "/api/LicencedFeature": {
      "get": {
        "tags": [
          "LicencedFeature"
        ],
        "operationId": "LicencedFeature_GetLicensedFeatures",
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/APIResponseOfAllLicensedFeatureDataDO"
            }
          }
        }
      }
    },
    "/api/LicencedFeature/{id}": {
      "get": {
        "tags": [
          "LicencedFeature"
        ],
        "operationId": "LicencedFeature_GetLicensedFeature",
        "parameters": [
          {
            "type": "integer",
            "name": "id",
            "in": "path",
            "required": true,
            "format": "int32",
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/APIResponseOfLicensedFeatureDO"
            }
          }
        }
      }
    },
    "/dummy": {
      "get": {
        "tags": [
          "LicencedFeature"
        ],
        "operationId": "LicencedFeature_GetWorkListDeviceDO",
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/WorkListDeviceDO"
            }
          }
        }
      }
    },
    "/api/licensedfeature/saveworklistdevice": {
      "post": {
        "tags": [
          "LicencedFeature"
        ],
        "operationId": "LicencedFeature_SaveWorklistDevice",
        "parameters": [
          {
            "name": "updatedDevice",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/WorkListDeviceDO"
            },
            "x-nullable": true
          }
        ],
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/APIResponseOfWorkListDeviceDO"
            }
          }
        }
      }
    },
    "/api/licensedfeature/getdicomworklist": {
      "post": {
        "tags": [
          "LicencedFeature"
        ],
        "operationId": "LicencedFeature_GetDicomWorklist",
        "parameters": [
          {
            "type": "string",
            "name": "aeTitle",
            "in": "query",
            "required": true,
            "x-nullable": true
          }
        ],
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/APIResponseOfIEnumerableOfDicomWorklistItemDO"
            }
          }
        }
      }
    },
    "/api/list/getalllistitems": {
      "post": {
        "tags": [
          "List"
        ],
        "operationId": "List_GetAllListItems",
        "parameters": [
          {
            "name": "value",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GetAllListItems"
            },
            "x-nullable": true
          }
        ],
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/APIResponseOfGetAllListItemsResult"
            }
          }
        }
      }
    },
    "/api/list/getlists": {
      "post": {
        "tags": [
          "List"
        ],
        "operationId": "List_FetchResultsForRecord",
        "parameters": [
          {
            "name": "listDefs",
            "in": "body",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ListDefDO"
              }
            },
            "x-nullable": true
          }
        ],
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/APIResponseOfListOfListDO"
            }
          }
        }
      }
    },
    "/api/Location/All": {
      "post": {
        "tags": [
          "Location"
        ],
        "operationId": "Location_GetAllLocations",
        "parameters": [
          {
            "name": "value",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GetAllLocationParams"
            },
            "x-nullable": true
          }
        ],
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/APIResponseOfGetAllLocationResult"
            }
          }
        }
      }
    },
    "/api/Location/AllRooms": {
      "post": {
        "tags": [
          "Location"
        ],
        "operationId": "Location_GetAllLocationRooms",
        "parameters": [
          {
            "name": "locationId",
            "in": "body",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/APIResponseOfLocationRoomsResult"
            }
          }
        }
      }
    },
    "/api/Location/LocationRooms": {
      "get": {
        "tags": [
          "Location"
        ],
        "operationId": "Location_GetLocationRooms",
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/APIResponseOfListOfLocationRoomDO"
            }
          }
        }
      }
    },
    "/api/Location/Hospital": {
      "post": {
        "tags": [
          "Location"
        ],
        "operationId": "Location_GetHospitalLocations",
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/APIResponseOfListOfLocationInfo"
            }
          }
        }
      }
    },
    "/api/log/messages": {
      "post": {
        "tags": [
          "Log"
        ],
        "operationId": "Log_Messages",
        "parameters": [
          {
            "name": "events",
            "in": "body",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ClientLogEvent"
              }
            },
            "x-nullable": true
          }
        ],
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "schema": {
              "type": "file"
            }
          }
        }
      }
    },
    "/api/resultsmapping/lungfunction/addorupdatedataraw": {
      "post": {
        "tags": [
          "LungFunctionDataRaw"
        ],
        "operationId": "LungFunctionDataRaw_AddOrUpdateDataRaw",
        "parameters": [
          {
            "name": "value",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AddOrUpdateResultsMapping_LungFunctionDataRaw"
            },
            "x-nullable": true
          }
        ],
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/APIResponseOfAddOrUpdateResultsMapping_LungFunctionDataRawResult"
            }
          }
        }
      }
    },
    "/api/note/addorupdatenote": {
      "post": {
        "tags": [
          "Note"
        ],
        "operationId": "Note_AddOrUpdateNote",
        "parameters": [
          {
            "name": "value",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AddOrUpdateNote"
            },
            "x-nullable": true
          }
        ],
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/APIResponseOfAddOrUpdateNoteResult"
            }
          }
        }
      }
    },
    "/api/NZBilling/GetUserManagedFeeTables": {
      "get": {
        "tags": [
          "NZBilling"
        ],
        "operationId": "NZBilling_GetUserManagedFeeTables",
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/APIResponseOfListOfNZBillingFeeTableDO"
            }
          }
        }
      }
    },
    "/api/NZBilling/GetFeeTable": {
      "get": {
        "tags": [
          "NZBilling"
        ],
        "operationId": "NZBilling_GetUserManagedFeeTable",
        "parameters": [
          {
            "type": "integer",
            "name": "fee_table_id",
            "in": "query",
            "required": true,
            "format": "int32",
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/APIResponseOfNZBillingFeeTableDO"
            }
          }
        }
      }
    },
    "/api/NZBilling/UpdateFeeTable": {
      "post": {
        "tags": [
          "NZBilling"
        ],
        "operationId": "NZBilling_UpdateFeeTable",
        "parameters": [
          {
            "name": "table",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/NZBillingFeeTableDO"
            },
            "x-nullable": true
          },
          {
            "type": "string",
            "name": "userID",
            "in": "query",
            "required": true,
            "x-nullable": true
          }
        ],
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/APIResponseOfNZBillingFeeTableDO"
            }
          }
        }
      }
    },
    "/api/NZBilling/CreatFeeTable": {
      "post": {
        "tags": [
          "NZBilling"
        ],
        "operationId": "NZBilling_CreatFeeTable",
        "parameters": [
          {
            "name": "table",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/NZBillingFeeTableDO"
            },
            "x-nullable": true
          },
          {
            "type": "string",
            "name": "userID",
            "in": "query",
            "required": true,
            "x-nullable": true
          }
        ],
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/APIResponseOfNZBillingFeeTableDO"
            }
          }
        }
      }
    },
    "/api/NZBilling/DeleteFeeTable": {
      "get": {
        "tags": [
          "NZBilling"
        ],
        "operationId": "NZBilling_DeleteFeeTable",
        "parameters": [
          {
            "type": "integer",
            "name": "table",
            "in": "query",
            "required": true,
            "format": "int32",
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/APIResponseOfInt32"
            }
          }
        }
      }
    },
    "/api/NZBilling/TestFeeForDeletion": {
      "get": {
        "tags": [
          "NZBilling"
        ],
        "operationId": "NZBilling_TestFeeForDeletion",
        "parameters": [
          {
            "name": "table",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/NZBillingFeeTableDO"
            },
            "x-nullable": true
          }
        ],
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/APIResponseOfListOfString"
            }
          }
        }
      }
    },
    "/api/NZBilling/GetFeesForTable": {
      "get": {
        "tags": [
          "NZBilling"
        ],
        "operationId": "NZBilling_GetFeesForTable",
        "parameters": [
          {
            "type": "integer",
            "name": "tableId",
            "in": "query",
            "required": true,
            "format": "int32",
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/APIResponseOfListOfNZBillingFeeDO"
            }
          }
        }
      }
    },
    "/api/NZBilling/GetFee": {
      "get": {
        "tags": [
          "NZBilling"
        ],
        "operationId": "NZBilling_GetFee",
        "parameters": [
          {
            "type": "integer",
            "name": "tableId",
            "in": "query",
            "required": true,
            "format": "int32",
            "x-nullable": false
          },
          {
            "type": "string",
            "name": "itemNum",
            "in": "query",
            "required": true,
            "x-nullable": true
          }
        ],
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/APIResponseOfNZBillingFeeDO"
            }
          }
        }
      }
    },
    "/api/NZBilling/UpdateFee": {
      "post": {
        "tags": [
          "NZBilling"
        ],
        "operationId": "NZBilling_UpdateFee",
        "parameters": [
          {
            "name": "fee",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/NZBillingFeeDO"
            },
            "x-nullable": true
          },
          {
            "type": "string",
            "name": "existingItemNum",
            "in": "query",
            "required": true,
            "x-nullable": true
          },
          {
            "type": "integer",
            "name": "existingTableId",
            "in": "query",
            "required": true,
            "format": "int32",
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/APIResponseOfNZBillingFeeDO"
            }
          }
        }
      }
    },
    "/api/NZBilling/CreateFee": {
      "post": {
        "tags": [
          "NZBilling"
        ],
        "operationId": "NZBilling_CreateFee",
        "parameters": [
          {
            "name": "fee",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/NZBillingFeeDO"
            },
            "x-nullable": true
          }
        ],
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/APIResponseOfNZBillingFeeDO"
            }
          }
        }
      }
    },
    "/api/NZBilling/DeleteFee": {
      "post": {
        "tags": [
          "NZBilling"
        ],
        "operationId": "NZBilling_DeleteFee",
        "parameters": [
          {
            "name": "fee",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/NZBillingFeeDO"
            },
            "x-nullable": true
          }
        ],
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/APIResponseOfNZBillingFeeDO"
            }
          }
        }
      }
    },
    "/api/NZBilling/CheckItemExists": {
      "get": {
        "tags": [
          "NZBilling"
        ],
        "operationId": "NZBilling_CheckItemExists",
        "parameters": [
          {
            "type": "string",
            "name": "itemNum",
            "in": "query",
            "required": true,
            "x-nullable": true
          }
        ],
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/APIResponseOfBoolean"
            }
          }
        }
      }
    },
    "/api/oos/get": {
      "get": {
        "tags": [
          "OccasionOfService"
        ],
        "operationId": "OccasionOfService_GetOccasionOfServiceEntry",
        "parameters": [
          {
            "type": "integer",
            "name": "osID",
            "in": "query",
            "required": true,
            "format": "int32",
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/OS_EntryParams"
            }
          }
        }
      }
    },
    "/api/oosmember/get": {
      "get": {
        "tags": [
          "OccasionOfService"
        ],
        "operationId": "OccasionOfService_GetOccasionOfServiceMembers",
        "parameters": [
          {
            "type": "integer",
            "name": "osID",
            "in": "query",
            "required": true,
            "format": "int32",
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/OS_MemberParams"
              }
            }
          }
        }
      }
    },
    "/api/oos/find": {
      "post": {
        "tags": [
          "OccasionOfService"
        ],
        "operationId": "OccasionOfService_FindIncomingOrderByVisitNumber",
        "parameters": [
          {
            "name": "value",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/FindOccasionOfService"
            },
            "x-nullable": true
          }
        ],
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/APIResponseOfFindOccasionOfServiceResult"
            }
          }
        }
      }
    },
    "/api/oos/addorupdateentry": {
      "post": {
        "tags": [
          "OccasionOfService"
        ],
        "operationId": "OccasionOfService_AddOrUpdateOccasionOfServiceEntry",
        "parameters": [
          {
            "name": "value",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AddOrUpdateOccasionOfServiceEntry"
            },
            "x-nullable": true
          }
        ],
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/APIResponseOfAddOrUpdateOccasionOfServiceEntryResult"
            }
          }
        }
      }
    },
    "/api/oos/addorupdatemember": {
      "post": {
        "tags": [
          "OccasionOfService"
        ],
        "operationId": "OccasionOfService_AddOrUpdateOccasionOfServiceMember",
        "parameters": [
          {
            "name": "value",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AddOrUpdateOccasionOfServiceMember"
            },
            "x-nullable": true
          }
        ],
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/APIResponseOfAddOrUpdateOccasionOfServiceMemberResult"
            }
          }
        }
      }
    },
    "/api/OnlineBooking/GetBookingTypeList": {
      "get": {
        "tags": [
          "OnlineBooking"
        ],
        "operationId": "OnlineBooking_GetBookingTypeList",
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/APIResponseOfListOfBookingTypeListDO"
            }
          }
        }
      }
    },
    "/api/OnlineBooking/GetDoctorsList": {
      "get": {
        "tags": [
          "OnlineBooking"
        ],
        "operationId": "OnlineBooking_GetDoctorsList",
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/APIResponseOfListOfDoctorsListDO"
            }
          }
        }
      }
    },
    "/api/OnlineBooking/GetLocationsList": {
      "get": {
        "tags": [
          "OnlineBooking"
        ],
        "operationId": "OnlineBooking_GetLocationsList",
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/APIResponseOfListOfLocationsListDO"
            }
          }
        }
      }
    },
    "/api/order/findincomingorderbyordernumber": {
      "post": {
        "tags": [
          "Order"
        ],
        "operationId": "Order_FindIncomingOrderByOrderNumber",
        "parameters": [
          {
            "name": "value",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/FindIncomingHeaderByOrderNumber"
            },
            "x-nullable": true
          }
        ],
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/APIResponseOfFindIncomingHeaderByOrderNumberResult"
            }
          }
        }
      }
    },
    "/api/order/findincomingorderbyvisitnumber": {
      "post": {
        "tags": [
          "Order"
        ],
        "operationId": "Order_FindIncomingOrderByVisitNumber",
        "parameters": [
          {
            "name": "value",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/FindIncomingHeaderByVisitNumber"
            },
            "x-nullable": true
          }
        ],
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/APIResponseOfFindIncomingHeaderByVisitNumberResult"
            }
          }
        }
      }
    },
    "/api/order/getorder": {
      "post": {
        "tags": [
          "Order"
        ],
        "operationId": "Order_GetIncomingOrder",
        "parameters": [
          {
            "name": "value",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GetIncomingOrder"
            },
            "x-nullable": true
          }
        ],
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/APIResponseOfGetIncomingOrderResult"
            }
          }
        }
      }
    },
    "/api/order/addorupdateorder": {
      "post": {
        "tags": [
          "Order"
        ],
        "operationId": "Order_AddOrUpdateIncomingOrder",
        "parameters": [
          {
            "name": "value",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AddOrUpdateIncomingOrder"
            },
            "x-nullable": true
          }
        ],
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/APIResponseOfAddOrUpdateIncomingOrderResult"
            }
          }
        }
      }
    },
    "/api/order/getheader": {
      "post": {
        "tags": [
          "Order"
        ],
        "operationId": "Order_GetIncomingHeader",
        "parameters": [
          {
            "name": "value",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GetIncomingHeader"
            },
            "x-nullable": true
          }
        ],
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/APIResponseOfGetIncomingHeaderResult"
            }
          }
        }
      }
    },
    "/api/order/addorupdateheader": {
      "post": {
        "tags": [
          "Order"
        ],
        "operationId": "Order_AddOrUpdateIncomingHeader",
        "parameters": [
          {
            "name": "value",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AddOrUpdateIncomingHeader"
            },
            "x-nullable": true
          }
        ],
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/APIResponseOfAddOrUpdateIncomingHeaderResult"
            }
          }
        }
      }
    },
    "/api/order/getorderobx": {
      "post": {
        "tags": [
          "Order"
        ],
        "operationId": "Order_GetIncomingOrderOBX",
        "parameters": [
          {
            "name": "value",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GetIncomingOrder_OBX"
            },
            "x-nullable": true
          }
        ],
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/APIResponseOfGetIncomingOrder_OBXResult"
            }
          }
        }
      }
    },
    "/api/order/addorupdateorderobx": {
      "post": {
        "tags": [
          "Order"
        ],
        "operationId": "Order_AddOrUpdateIncomingOrder_OBX",
        "parameters": [
          {
            "name": "value",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AddOrUpdateIncomingOrder_OBX"
            },
            "x-nullable": true
          }
        ],
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/APIResponseOfAddOrUpdateIncomingOrder_OBXResult"
            }
          }
        }
      }
    },
    "/api/patientconnect/PatientPrograms": {
      "get": {
        "tags": [
          "PatientPrograms"
        ],
        "operationId": "PatientPrograms_GetPatientPrograms",
        "parameters": [
          {
            "type": "integer",
            "name": "patientId",
            "in": "query",
            "required": true,
            "format": "int32",
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/APIResponseOfIEnumerableOfPatientProgram"
            }
          }
        }
      }
    },
    "/api/patientconnect/PatientPrograms/save": {
      "post": {
        "tags": [
          "PatientPrograms"
        ],
        "operationId": "PatientPrograms_SavePatientProgram",
        "parameters": [
          {
            "name": "patientProgram",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PatientProgram"
            },
            "x-nullable": true
          },
          {
            "type": "string",
            "name": "userId",
            "in": "query",
            "required": true,
            "x-nullable": true
          }
        ],
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/APIResponseOfPatientProgram"
            }
          }
        }
      }
    },
    "/api/patientconnect/PatientPrograms/delete": {
      "post": {
        "tags": [
          "PatientPrograms"
        ],
        "operationId": "PatientPrograms_DeletePatientProgram",
        "parameters": [
          {
            "name": "patientProgram",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PatientProgram"
            },
            "x-nullable": true
          },
          {
            "type": "string",
            "name": "userId",
            "in": "query",
            "required": true,
            "x-nullable": true
          }
        ],
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/APIResponseOfInt32"
            }
          }
        }
      }
    },
    "/api/patientconnect/connectstatuses": {
      "get": {
        "tags": [
          "PatientPrograms"
        ],
        "operationId": "PatientPrograms_GetConnectStatuses",
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/APIResponseOfIEnumerableOfConnectStatusDO"
            }
          }
        }
      }
    },
    "/api/patientconnect/PatientPrograms/completecycle": {
      "post": {
        "tags": [
          "PatientPrograms"
        ],
        "operationId": "PatientPrograms_PatientProgramCompleteCycle",
        "parameters": [
          {
            "name": "patientProgram",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PatientProgram"
            },
            "x-nullable": true
          },
          {
            "type": "string",
            "name": "userId",
            "in": "query",
            "required": true,
            "x-nullable": true
          }
        ],
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/APIResponseOfPatientProgram"
            }
          }
        }
      }
    },
    "/api/PCAction/{id}": {
      "get": {
        "tags": [
          "PCAction"
        ],
        "operationId": "PCAction_Get",
        "parameters": [
          {
            "type": "integer",
            "name": "id",
            "in": "path",
            "required": true,
            "format": "int32",
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/APIResponseOfActionDO"
            }
          }
        }
      }
    },
    "/api/patientconnect/practicewide": {
      "post": {
        "tags": [
          "PCPracticeWide"
        ],
        "operationId": "PCPracticeWide_GetAllPatientConnects",
        "parameters": [
          {
            "name": "filter",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PatientConnectFilterDO"
            },
            "x-nullable": true
          }
        ],
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/APIResponseOfIEnumerableOfPracticeWideConnectDO"
            }
          }
        }
      }
    },
    "/api/patientconnect/practicewide/save": {
      "post": {
        "tags": [
          "PCPracticeWide"
        ],
        "operationId": "PCPracticeWide_SavePatientConnect",
        "parameters": [
          {
            "name": "patientConnect",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PracticeWideConnectDO"
            },
            "x-nullable": true
          },
          {
            "type": "string",
            "name": "userId",
            "in": "query",
            "required": true,
            "x-nullable": true
          }
        ],
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/APIResponseOfBoolean"
            }
          }
        }
      }
    },
    "/api/patientconnect/practicewide/nextaction": {
      "post": {
        "tags": [
          "PCPracticeWide"
        ],
        "operationId": "PCPracticeWide_NextActionPatientConnects",
        "parameters": [
          {
            "name": "batch",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PracticeWideBatchDO"
            },
            "x-nullable": true
          },
          {
            "type": "string",
            "name": "userId",
            "in": "query",
            "required": true,
            "x-nullable": true
          }
        ],
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/APIResponseOfIEnumerableOfPracticeWideConnectDO"
            }
          }
        }
      }
    },
    "/api/patientconnect/practicewide/processmaxcount": {
      "get": {
        "tags": [
          "PCPracticeWide"
        ],
        "operationId": "PCPracticeWide_GetProcessMaxiumCount",
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/APIResponseOfInt32"
            }
          }
        }
      }
    },
    "/api/patientconnect/practicewide/batchcomplete": {
      "post": {
        "tags": [
          "PCPracticeWide"
        ],
        "operationId": "PCPracticeWide_BatchCompleteCycles",
        "parameters": [
          {
            "name": "batch",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PracticeWideBatchDO"
            },
            "x-nullable": true
          },
          {
            "type": "string",
            "name": "userId",
            "in": "query",
            "required": true,
            "x-nullable": true
          }
        ],
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/APIResponseOfIEnumerableOfPracticeWideConnectDO"
            }
          }
        }
      }
    },
    "/api/patientconnect/practicewide/getbatches": {
      "post": {
        "tags": [
          "PCPracticeWide"
        ],
        "operationId": "PCPracticeWide_GetPatientConnectBatches",
        "parameters": [
          {
            "name": "filter",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/BatchFilterDO"
            },
            "x-nullable": true
          }
        ],
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/APIResponseOfIEnumerableOfPatientConnectBatchDO"
            }
          }
        }
      }
    },
    "/api/patientconnect/practicewide/getbatchusernames": {
      "get": {
        "tags": [
          "PCPracticeWide"
        ],
        "operationId": "PCPracticeWide_GetBatchUserNames",
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/APIResponseOfIEnumerableOfString"
            }
          }
        }
      }
    },
    "/api/patientconnect/practicewide/getconnectsbybatchid": {
      "post": {
        "tags": [
          "PCPracticeWide"
        ],
        "operationId": "PCPracticeWide_GetPatientConnectByBatchId",
        "parameters": [
          {
            "type": "integer",
            "name": "batchId",
            "in": "query",
            "required": true,
            "format": "int32",
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/APIResponseOfIEnumerableOfPracticeWideConnectDO"
            }
          }
        }
      }
    },
    "/api/patientconnect/practicewide/fromdate": {
      "get": {
        "tags": [
          "PCPracticeWide"
        ],
        "operationId": "PCPracticeWide_GetOldestNextConnectDue",
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/APIResponseOfDateTime"
            }
          }
        }
      }
    },
    "/api/PCPrograms": {
      "get": {
        "tags": [
          "PCPrograms"
        ],
        "operationId": "PCPrograms_GetPrograms",
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/APIResponseOfIEnumerableOfProgramDO"
            }
          }
        }
      },
      "post": {
        "tags": [
          "PCPrograms"
        ],
        "operationId": "PCPrograms_SaveProgram",
        "parameters": [
          {
            "name": "updatedProgram",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ProgramDO"
            },
            "x-nullable": true
          }
        ],
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/APIResponseOfProgramDO"
            }
          }
        }
      }
    },
    "/api/patientconnect/getReferralPrograms": {
      "get": {
        "tags": [
          "PCPrograms"
        ],
        "operationId": "PCPrograms_GetReferralPrograms",
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/APIResponseOfIEnumerableOfProgramDO"
            }
          }
        }
      }
    },
    "/api/patientconnect/getenabledprograms": {
      "get": {
        "tags": [
          "PCPrograms"
        ],
        "operationId": "PCPrograms_GetEnabledPrograms",
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/APIResponseOfIEnumerableOfProgramDO"
            }
          }
        }
      }
    },
    "/api/patientconnect/getprogramsoftype": {
      "get": {
        "tags": [
          "PCPrograms"
        ],
        "operationId": "PCPrograms_GetProgramsListOfType",
        "parameters": [
          {
            "type": "integer",
            "name": "type",
            "in": "query",
            "required": true,
            "format": "int32",
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/APIResponseOfIEnumerableOfProgramListItemDO"
            }
          }
        }
      }
    },
    "/api/PCPrograms/{id}": {
      "get": {
        "tags": [
          "PCPrograms"
        ],
        "operationId": "PCPrograms_GetProgramDefinition",
        "parameters": [
          {
            "type": "integer",
            "name": "id",
            "in": "path",
            "required": true,
            "format": "int32",
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/APIResponseOfProgramDO"
            }
          }
        }
      }
    },
    "/api/patientconnect/pcmangementdata/deleteprogram": {
      "post": {
        "tags": [
          "PCPrograms"
        ],
        "operationId": "PCPrograms_DeleteProgram",
        "parameters": [
          {
            "name": "deleteProgram",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ProgramDO"
            },
            "x-nullable": true
          }
        ],
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/APIResponseOfInt32"
            }
          }
        }
      }
    },
    "/api.patientconnect/getpatientconnecttypes": {
      "get": {
        "tags": [
          "PCPrograms"
        ],
        "operationId": "PCPrograms_GetPatientConnectTypes",
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/APIResponseOfIEnumerableOfProgramTypeDO"
            }
          }
        }
      }
    },
    "/api/patientconnect/pcmangementdata": {
      "get": {
        "tags": [
          "PCPrograms"
        ],
        "operationId": "PCPrograms_GetPcManagementData",
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/APIResponseOfPcManagementDO"
            }
          }
        }
      }
    },
    "/api/patientconnect/getbookingtypes": {
      "get": {
        "tags": [
          "PCPrograms"
        ],
        "operationId": "PCPrograms_GetBookingTypes",
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/APIResponseOfIEnumerableOfSelectedBookingTypeDO"
            }
          }
        }
      }
    },
    "/api/patientconnect/getsmstemplates": {
      "get": {
        "tags": [
          "PCPrograms"
        ],
        "operationId": "PCPrograms_GetPatientConnectSMSTemplates",
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/APIResponseOfIEnumerableOfString"
            }
          }
        }
      }
    },
    "/api/patientconnect/getlettertemplates": {
      "get": {
        "tags": [
          "PCPrograms"
        ],
        "operationId": "PCPrograms_GetPatientConnectLetterTemplates",
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/APIResponseOfIEnumerableOfLetterTemplateDO"
            }
          }
        }
      }
    },
    "/api/patientconnect/getemailtemplates": {
      "get": {
        "tags": [
          "PCPrograms"
        ],
        "operationId": "PCPrograms_GetPatientConnectEmailTemplates",
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/APIResponseOfIEnumerableOfString"
            }
          }
        }
      }
    },
    "/api/patientconnect/getreplycontentlist": {
      "get": {
        "tags": [
          "PCPrograms"
        ],
        "operationId": "PCPrograms_GetPatientConnectReplyList",
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/APIResponseOfIEnumerableOfListItemDO"
            }
          }
        }
      }
    },
    "/api/patientconnect/connectseffected": {
      "get": {
        "tags": [
          "PCPrograms"
        ],
        "operationId": "PCPrograms_GetConnectsEffectedByProgramChange",
        "parameters": [
          {
            "type": "integer",
            "name": "programId",
            "in": "query",
            "required": true,
            "format": "int32",
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/APIResponseOfEffectedConnectsOnProgramDO"
            }
          }
        }
      }
    },
    "/api/patientconnect/getpatientsonprogram": {
      "post": {
        "tags": [
          "PCPrograms"
        ],
        "operationId": "PCPrograms_GetPatientsOnProgram",
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PatientProgramOnProgramQuery"
            },
            "x-nullable": true
          }
        ],
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/APIResponseOfPatientProgramOnProgramResponse"
            }
          }
        }
      }
    },
    "/api/patientconnect/getpatientsonprogramcount": {
      "post": {
        "tags": [
          "PCPrograms"
        ],
        "operationId": "PCPrograms_GetActivePatientConnectsCount",
        "parameters": [
          {
            "type": "integer",
            "name": "programId",
            "in": "query",
            "required": true,
            "format": "int32",
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/APIResponseOfInt32"
            }
          }
        }
      }
    },
    "/api/patientconnect/getpatientsmovingtoprogramalreadyon": {
      "post": {
        "tags": [
          "PCPrograms"
        ],
        "operationId": "PCPrograms_GetPatientsMovingToProgramAlreadyOn",
        "parameters": [
          {
            "type": "integer",
            "name": "programIdCurrent",
            "in": "query",
            "required": true,
            "format": "int32",
            "x-nullable": false
          },
          {
            "type": "integer",
            "name": "programIdMoving",
            "in": "query",
            "required": true,
            "format": "int32",
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/APIResponseOfInt32"
            }
          }
        }
      }
    },
    "/api/patientconnect/movepatientstoanotherprogram": {
      "post": {
        "tags": [
          "PCPrograms"
        ],
        "operationId": "PCPrograms_MovePatientsToAnotherProgram",
        "parameters": [
          {
            "name": "movingConnects",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/MovingConnectsDO"
            },
            "x-nullable": true
          }
        ],
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/APIResponseOfInt32"
            }
          }
        }
      }
    },
    "/api/patientconnect/getmovingpatientsteps": {
      "post": {
        "tags": [
          "PCPrograms"
        ],
        "operationId": "PCPrograms_GetMovingPatientSteps",
        "parameters": [
          {
            "type": "integer",
            "name": "programIdCurrent",
            "in": "query",
            "required": true,
            "format": "int32",
            "x-nullable": false
          },
          {
            "type": "integer",
            "name": "programIdMoving",
            "in": "query",
            "required": true,
            "format": "int32",
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/APIResponseOfMovingConnectsDO"
            }
          }
        }
      }
    },
    "/api/patientconnect/replycontent": {
      "post": {
        "tags": [
          "ReplyContent"
        ],
        "operationId": "ReplyContent_GetReplyContent",
        "parameters": [
          {
            "name": "filter",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ReplyContentFilterDO"
            },
            "x-nullable": true
          }
        ],
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/APIResponseOfIEnumerableOfReplyContentDO"
            }
          }
        }
      }
    },
    "/api/patientconnect/updateReplyContent": {
      "post": {
        "tags": [
          "ReplyContent"
        ],
        "operationId": "ReplyContent_UpdateReplyContent",
        "parameters": [
          {
            "name": "replyContent",
            "in": "body",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ReplyContentDO"
              }
            },
            "x-nullable": true
          },
          {
            "type": "string",
            "name": "username",
            "in": "query",
            "required": true,
            "x-nullable": true
          }
        ],
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/APIResponseOfBoolean"
            }
          }
        }
      }
    },
    "/api/patient/get": {
      "get": {
        "tags": [
          "Patient"
        ],
        "operationId": "Patient_GetPatient",
        "parameters": [
          {
            "type": "integer",
            "name": "patientId",
            "in": "query",
            "required": true,
            "format": "int32",
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/AddPatientApiRequestParams"
            }
          }
        }
      }
    },
    "/api/patient/add": {
      "post": {
        "tags": [
          "Patient"
        ],
        "operationId": "Patient_AddPatient",
        "parameters": [
          {
            "name": "value",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AddPatientApiRequestParams"
            },
            "x-nullable": true
          }
        ],
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/APIResponseOfString"
            }
          }
        }
      }
    },
    "/api/patient/addalias": {
      "post": {
        "tags": [
          "Patient"
        ],
        "operationId": "Patient_AddPatientAlias",
        "parameters": [
          {
            "name": "value",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AddPatientAliasRequestParams"
            },
            "x-nullable": true
          }
        ],
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/APIResponseOfString"
            }
          }
        }
      }
    },
    "/api/patient/getdoctorregisternumberfromprovidernumber": {
      "post": {
        "tags": [
          "Patient"
        ],
        "operationId": "Patient_getdoctorid",
        "parameters": [
          {
            "name": "value",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GetDoctorRegisterNumberFromProviderNumberApiRequestParams"
            },
            "x-nullable": true
          }
        ],
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/APIResponseOfString"
            }
          }
        }
      }
    },
    "/api/patient/getlistitem": {
      "post": {
        "tags": [
          "Patient"
        ],
        "operationId": "Patient_GetListItem",
        "parameters": [
          {
            "name": "value",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GetListItem"
            },
            "x-nullable": true
          }
        ],
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/APIResponseOfGetListItemResult"
            }
          }
        }
      }
    },
    "/api/patient/getnote": {
      "post": {
        "tags": [
          "Patient"
        ],
        "operationId": "Patient_GetPatientNote",
        "parameters": [
          {
            "name": "value",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GetPatientNote"
            },
            "x-nullable": true
          }
        ],
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/APIResponseOfGetPatientNoteResult"
            }
          }
        }
      }
    },
    "/api/patient/gethl7itemmapping": {
      "post": {
        "tags": [
          "Patient"
        ],
        "operationId": "Patient_hl7item",
        "parameters": [
          {
            "name": "value",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GetHL7ItemMappingApiRequestParams"
            },
            "x-nullable": true
          }
        ],
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/APIResponseOfString"
            }
          }
        }
      }
    },
    "/api/patient/merge": {
      "post": {
        "tags": [
          "Patient"
        ],
        "operationId": "Patient_Merge",
        "parameters": [
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AddPatientMergeRequest"
            },
            "x-nullable": true
          }
        ],
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/APIResponseOfString"
            }
          }
        }
      }
    },
    "/api/patient/unmerge": {
      "post": {
        "tags": [
          "Patient"
        ],
        "operationId": "Patient_UnMerge",
        "parameters": [
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UnMergeHealthTrackPatientRequestParams"
            },
            "x-nullable": true
          }
        ],
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/APIResponseOfString"
            }
          }
        }
      }
    },
    "/api/patient/nextofkin": {
      "post": {
        "tags": [
          "Patient"
        ],
        "operationId": "Patient_AddNextOfKin",
        "parameters": [
          {
            "name": "value",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/NextOfKinApiRequestParams"
            },
            "x-nullable": true
          }
        ],
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/APIResponseOfString"
            }
          }
        }
      }
    },
    "/api/patient/addorupdatepatientmapping": {
      "post": {
        "tags": [
          "Patient"
        ],
        "operationId": "Patient_AddOrUpdatePatientMapping",
        "parameters": [
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AddOrUpdatePatientMapping"
            },
            "x-nullable": true
          }
        ],
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/APIResponseOfString"
            }
          }
        }
      }
    },
    "/api/patient/movemrnontopatient": {
      "post": {
        "tags": [
          "Patient"
        ],
        "operationId": "Patient_MoveMRNOntoPatient",
        "parameters": [
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/MoveMRNOntoPatient"
            },
            "x-nullable": true
          }
        ],
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/APIResponseOfString"
            }
          }
        }
      }
    },
    "/api/patient/address": {
      "post": {
        "tags": [
          "Patient"
        ],
        "operationId": "Patient_GetPatientAddresses",
        "parameters": [
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GetPatientAddressesRequestParams"
            },
            "x-nullable": true
          }
        ],
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/APIResponseOfAddressResponseOf"
            }
          }
        }
      }
    },
    "/api/patient/addorupdateaddress": {
      "post": {
        "tags": [
          "Patient"
        ],
        "operationId": "Patient_AddOrUpdatePatientAddress",
        "parameters": [
          {
            "name": "address",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AddressResponse"
            },
            "x-nullable": true
          }
        ],
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/APIResponseOfString"
            }
          }
        }
      }
    },
    "/api/patient/getexternalfeed": {
      "post": {
        "tags": [
          "Patient"
        ],
        "operationId": "Patient_GetExternalFeed",
        "parameters": [
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GetExternalFeedRequestParams"
            },
            "x-nullable": true
          }
        ],
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/APIResponseOfExternal_Feed_ConfigResponse"
            }
          }
        }
      }
    },
    "/api/patient/getgroupedfeeds": {
      "post": {
        "tags": [
          "Patient"
        ],
        "operationId": "Patient_GetGroupedFeeds",
        "parameters": [
          {
            "name": "value",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GetGroupedFeeds"
            },
            "x-nullable": true
          }
        ],
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/APIResponseOfExternal_Feed_ConfigResponseOf"
            }
          }
        }
      }
    },
    "/api/patient/findpatient": {
      "post": {
        "tags": [
          "Patient"
        ],
        "operationId": "Patient_FindHealthTrackPatient",
        "parameters": [
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/FindHealthTrackPatientParameters"
            },
            "x-nullable": true
          }
        ],
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/APIResponseOfNullableOfInt32"
            }
          }
        }
      }
    },
    "/api/patient/findpatientmapping": {
      "post": {
        "tags": [
          "Patient"
        ],
        "operationId": "Patient_FindHealthTrackPatientMapping",
        "parameters": [
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/FindHealthTrackPatientMappingRequestParams"
            },
            "x-nullable": true
          }
        ],
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/APIResponseOfHL7_PatientMappingResponse"
            }
          }
        }
      }
    },
    "/api/patient/findpatientmappingnovalidation": {
      "post": {
        "tags": [
          "Patient"
        ],
        "operationId": "Patient_FindHealthTrackPatientMappingNoValidation",
        "parameters": [
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/FindHealthTrackPatientMappingRequestParams"
            },
            "x-nullable": true
          }
        ],
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/APIResponseOfHL7_PatientMappingResponse"
            }
          }
        }
      }
    },
    "/api/admissions/get": {
      "get": {
        "tags": [
          "Patient"
        ],
        "operationId": "Patient_GetAdmission",
        "parameters": [
          {
            "type": "integer",
            "name": "admissionId",
            "in": "query",
            "required": true,
            "format": "int32",
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/AddAdmissionsApiRequestParams"
            }
          }
        }
      }
    },
    "/api/patientmembershipcard/addorupdate": {
      "post": {
        "tags": [
          "PatientMembershipCard"
        ],
        "operationId": "PatientMembershipCard_AddOrUpdatePatientMembershipCard",
        "parameters": [
          {
            "name": "value",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AddOrUpdatePatientMembershipCard"
            },
            "x-nullable": true
          }
        ],
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/APIResponseOfAddOrUpdatePatientMembershipCardResult"
            }
          }
        }
      }
    },
    "/api/patientsearch": {
      "post": {
        "tags": [
          "PatientSearch"
        ],
        "operationId": "PatientSearch_PatientSearch",
        "parameters": [
          {
            "name": "value",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PatientSearch"
            },
            "x-nullable": true
          }
        ],
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/APIResponseOfPatientSearchResult"
            }
          }
        }
      }
    },
    "/api/QuestionnaireInstance/FetchInstance": {
      "get": {
        "tags": [
          "QuestionnaireInstance"
        ],
        "operationId": "QuestionnaireInstance_FetchInstance",
        "parameters": [
          {
            "type": "integer",
            "name": "instanceId",
            "in": "query",
            "required": true,
            "format": "int32",
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/APIResponseOfQuestionnaireInstanceDO"
            }
          }
        }
      }
    },
    "/api/QuestionnaireInstance/SaveInstance": {
      "post": {
        "tags": [
          "QuestionnaireInstance"
        ],
        "operationId": "QuestionnaireInstance_SaveInstance",
        "parameters": [
          {
            "name": "instance",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/QuestionnaireInstanceDO"
            },
            "x-nullable": true
          },
          {
            "type": "boolean",
            "name": "isCreateNew",
            "in": "query",
            "required": true,
            "x-nullable": false
          },
          {
            "type": "string",
            "name": "username",
            "in": "query",
            "required": true,
            "x-nullable": true
          }
        ],
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/APIResponseOfQuestionnaireInstanceDO"
            }
          }
        }
      }
    },
    "/api/QuestionnaireTemplate/FetchTemplate": {
      "get": {
        "tags": [
          "QuestionnaireTemplate"
        ],
        "operationId": "QuestionnaireTemplate_FetchTemplate",
        "parameters": [
          {
            "type": "integer",
            "name": "templateId",
            "in": "query",
            "required": true,
            "format": "int32",
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/APIResponseOfQuestionnaireTemplateDO"
            }
          }
        }
      }
    },
    "/api/QuestionnaireTemplate/ListTemplates": {
      "get": {
        "tags": [
          "QuestionnaireTemplate"
        ],
        "operationId": "QuestionnaireTemplate_ListTemplates",
        "parameters": [
          {
            "type": "integer",
            "name": "templateType",
            "in": "query",
            "required": true,
            "format": "int32",
            "x-nullable": true
          }
        ],
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/APIResponseOfListOfQuestionnaireTemplateDO"
            }
          }
        }
      }
    },
    "/api/QuestionnaireTemplate/SaveTemplate": {
      "post": {
        "tags": [
          "QuestionnaireTemplate"
        ],
        "operationId": "QuestionnaireTemplate_SaveTemplate",
        "parameters": [
          {
            "name": "template",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/QuestionnaireTemplateDO"
            },
            "x-nullable": true
          },
          {
            "type": "boolean",
            "name": "isCreateNew",
            "in": "query",
            "required": true,
            "x-nullable": false
          },
          {
            "type": "string",
            "name": "username",
            "in": "query",
            "required": true,
            "x-nullable": true
          }
        ],
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/APIResponseOfQuestionnaireTemplateDO"
            }
          }
        }
      }
    },
    "/api/QuestionnaireTemplate/DeleteTemplate": {
      "post": {
        "tags": [
          "QuestionnaireTemplate"
        ],
        "operationId": "QuestionnaireTemplate_DeleteTemplate",
        "parameters": [
          {
            "type": "integer",
            "name": "templateId",
            "in": "query",
            "required": true,
            "format": "int32",
            "x-nullable": false
          },
          {
            "type": "string",
            "name": "username",
            "in": "query",
            "required": true,
            "x-nullable": true
          }
        ],
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/APIResponseOfQuestionnaireTemplateDO"
            }
          }
        }
      }
    },
    "/api/QuestionnaireTemplate/FetchTemplateSubRecordTypes": {
      "get": {
        "tags": [
          "QuestionnaireTemplate"
        ],
        "operationId": "QuestionnaireTemplate_FetchTemplateSubRecordTypes",
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/APIResponseOfTemplateSubRecordTypesResponse"
            }
          }
        }
      }
    },
    "/api/QuestionnaireTemplate": {
      "post": {
        "tags": [
          "QuestionnaireTemplate"
        ],
        "operationId": "QuestionnaireTemplate_FetchTemplateSubRecordType",
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/SRTypeTitleCombo"
              }
            }
          }
        }
      }
    },
    "/api/referringdoctor/getall": {
      "post": {
        "tags": [
          "ReferringDoctor"
        ],
        "operationId": "ReferringDoctor_GetReferringDoctors",
        "parameters": [
          {
            "name": "value",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GetAllReferringDoctors"
            },
            "x-nullable": true
          }
        ],
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/APIResponseOfGetAllReferringDoctorsResult"
            }
          }
        }
      }
    },
    "/api/referringdoctor/addorupdate": {
      "post": {
        "tags": [
          "ReferringDoctor"
        ],
        "operationId": "ReferringDoctor_AddOrUpdateReferringDoctor",
        "parameters": [
          {
            "name": "value",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AddOrUpdateReferringDoctor"
            },
            "x-nullable": true
          }
        ],
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/APIResponseOfAddOrUpdateReferringDoctorResult"
            }
          }
        }
      }
    },
    "/api/request/add": {
      "post": {
        "tags": [
          "Request"
        ],
        "operationId": "Request_AddNewRequest",
        "parameters": [
          {
            "name": "value",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AddNewRequest"
            },
            "x-nullable": true
          }
        ],
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/APIResponseOfAddNewRequestResult"
            }
          }
        }
      }
    },
    "/api/request/find": {
      "post": {
        "tags": [
          "Request"
        ],
        "operationId": "Request_FindRequest",
        "parameters": [
          {
            "name": "value",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/FindRequest"
            },
            "x-nullable": true
          }
        ],
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/APIResponseOfFindRequestResult"
            }
          }
        }
      }
    },
    "/api/roles/getall": {
      "get": {
        "tags": [
          "Roles"
        ],
        "operationId": "Roles_GetAllRoles",
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/APIResponseOfRoleDOOf"
            }
          }
        }
      }
    },
    "/api/roles/updateall": {
      "post": {
        "tags": [
          "Roles"
        ],
        "operationId": "Roles_UpdateAllRoles",
        "parameters": [
          {
            "name": "roles",
            "in": "body",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/RoleDO"
              }
            },
            "x-nullable": true
          }
        ],
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/APIResponseOfBoolean"
            }
          }
        }
      }
    },
    "/api/roles/staffRoleLocation": {
      "post": {
        "tags": [
          "Roles"
        ],
        "operationId": "Roles_GetAllStaffForRolesAtLocations",
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GetStaffForRolesLocationsRequest"
            },
            "x-nullable": true
          }
        ],
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/APIResponseOfListOfStaffDO"
            }
          }
        }
      }
    },
    "/api/RosterTemplate/Init": {
      "get": {
        "tags": [
          "RosterTemplate"
        ],
        "operationId": "RosterTemplate_Init",
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/APIResponseOfRosterTemplateInit"
            }
          }
        }
      }
    },
    "/api/RosterTemplate/GetTemplates": {
      "post": {
        "tags": [
          "RosterTemplate"
        ],
        "operationId": "RosterTemplate_GetTemplatesForSet",
        "parameters": [
          {
            "type": "integer",
            "name": "setId",
            "in": "query",
            "required": true,
            "format": "int32",
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/APIResponseOfListOfRosterTemplateDO"
            }
          }
        }
      }
    },
    "/api/RosterTemplate/AddSet": {
      "post": {
        "tags": [
          "RosterTemplate"
        ],
        "operationId": "RosterTemplate_AddNewRosterTemplateSet",
        "parameters": [
          {
            "type": "string",
            "name": "setName",
            "in": "query",
            "required": true,
            "x-nullable": true
          },
          {
            "type": "integer",
            "name": "cycleLength",
            "in": "query",
            "required": true,
            "format": "int32",
            "x-nullable": false
          },
          {
            "type": "string",
            "name": "userPkId",
            "in": "query",
            "required": true,
            "x-nullable": true
          }
        ],
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/APIResponseOfRosterTemplateSetDO"
            }
          }
        }
      }
    },
    "/api/RosterTemplate/DuplicateSet": {
      "post": {
        "tags": [
          "RosterTemplate"
        ],
        "operationId": "RosterTemplate_DuplicateRosterTemplateSet",
        "parameters": [
          {
            "type": "integer",
            "name": "duplicateSetId",
            "in": "query",
            "required": true,
            "format": "int32",
            "x-nullable": false
          },
          {
            "type": "string",
            "name": "setName",
            "in": "query",
            "required": true,
            "x-nullable": true
          },
          {
            "type": "integer",
            "name": "cycleLength",
            "in": "query",
            "required": true,
            "format": "int32",
            "x-nullable": false
          },
          {
            "type": "string",
            "name": "userPkId",
            "in": "query",
            "required": true,
            "x-nullable": true
          }
        ],
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/APIResponseOfRosterTemplateSetDO"
            }
          }
        }
      }
    },
    "/api/RosterTemplate/UpdateSet": {
      "post": {
        "tags": [
          "RosterTemplate"
        ],
        "operationId": "RosterTemplate_UpdateRosterTemplateSet",
        "parameters": [
          {
            "name": "templateSet",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RosterTemplateSetDO"
            },
            "x-nullable": true
          },
          {
            "type": "string",
            "name": "userPkId",
            "in": "query",
            "required": true,
            "x-nullable": true
          }
        ],
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/APIResponseOfRosterTemplateSetDO"
            }
          }
        }
      }
    },
    "/api/RosterTemplate/DeleteSet": {
      "post": {
        "tags": [
          "RosterTemplate"
        ],
        "operationId": "RosterTemplate_DeleteRosterTemplateSet",
        "parameters": [
          {
            "type": "integer",
            "name": "setId",
            "in": "query",
            "required": true,
            "format": "int32",
            "x-nullable": false
          },
          {
            "type": "string",
            "name": "userPkId",
            "in": "query",
            "required": true,
            "x-nullable": true
          }
        ],
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/APIResponseOfBoolean"
            }
          }
        }
      }
    },
    "/api/RosterTemplate/SaveTemplates": {
      "post": {
        "tags": [
          "RosterTemplate"
        ],
        "operationId": "RosterTemplate_SaveRosterTemplates",
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RosterTemplatesSaveRequest"
            },
            "x-nullable": true
          }
        ],
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/APIResponseOfRosterTemplatesSaveResult"
            }
          }
        }
      }
    },
    "/api/RosterTemplate/Apply": {
      "post": {
        "tags": [
          "RosterTemplate"
        ],
        "operationId": "RosterTemplate_ApplyTemplates",
        "parameters": [
          {
            "type": "integer",
            "name": "setId",
            "in": "query",
            "required": true,
            "format": "int32",
            "x-nullable": false
          },
          {
            "type": "string",
            "name": "fromDate",
            "in": "query",
            "required": true,
            "format": "date-time",
            "x-nullable": false
          },
          {
            "type": "string",
            "name": "toDate",
            "in": "query",
            "required": true,
            "format": "date-time",
            "x-nullable": false
          },
          {
            "type": "boolean",
            "name": "includePublicHolidays",
            "in": "query",
            "required": true,
            "x-nullable": false
          },
          {
            "type": "string",
            "name": "userPkId",
            "in": "query",
            "required": true,
            "x-nullable": true
          },
          {
            "type": "string",
            "name": "userName",
            "in": "query",
            "required": true,
            "x-nullable": true
          },
          {
            "type": "integer",
            "name": "licenseUserId",
            "in": "query",
            "required": true,
            "format": "int32",
            "x-nullable": false
          },
          {
            "type": "integer",
            "name": "cycleLength",
            "in": "query",
            "required": true,
            "format": "int32",
            "x-nullable": false
          },
          {
            "type": "integer",
            "name": "startFromDay",
            "in": "query",
            "required": true,
            "format": "int32",
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/APIResponseOfBoolean"
            }
          }
        }
      }
    },
    "/api/RosterTemplate/Delete": {
      "post": {
        "tags": [
          "RosterTemplate"
        ],
        "operationId": "RosterTemplate_DeleteTemplates",
        "parameters": [
          {
            "type": "integer",
            "name": "setId",
            "in": "query",
            "required": true,
            "format": "int32",
            "x-nullable": false
          },
          {
            "type": "string",
            "name": "fromDate",
            "in": "query",
            "required": true,
            "format": "date-time",
            "x-nullable": false
          },
          {
            "type": "string",
            "name": "toDate",
            "in": "query",
            "required": true,
            "format": "date-time",
            "x-nullable": false
          },
          {
            "type": "boolean",
            "name": "powerDelete",
            "in": "query",
            "required": true,
            "x-nullable": false
          },
          {
            "type": "integer",
            "name": "licenseUserId",
            "in": "query",
            "required": true,
            "format": "int32",
            "x-nullable": false
          },
          {
            "type": "string",
            "name": "userPkId",
            "in": "query",
            "required": true,
            "x-nullable": true
          }
        ],
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/APIResponseOfBoolean"
            }
          }
        }
      }
    },
    "/api/RosterTemplate/GetRoster": {
      "post": {
        "tags": [
          "RosterTemplate"
        ],
        "operationId": "RosterTemplate_GetRoster",
        "parameters": [
          {
            "type": "integer",
            "name": "roster_ID",
            "in": "query",
            "required": true,
            "format": "int32",
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/APIResponseOfRosterBookingDO"
            }
          }
        }
      }
    },
    "/api/RosterTemplate/SplitRoster": {
      "post": {
        "tags": [
          "RosterTemplate"
        ],
        "operationId": "RosterTemplate_SplitRoster",
        "parameters": [
          {
            "type": "integer",
            "name": "roster_ID",
            "in": "query",
            "required": true,
            "format": "int32",
            "x-nullable": false
          },
          {
            "type": "string",
            "name": "newEndTime",
            "in": "query",
            "required": true,
            "format": "date-time",
            "x-nullable": false
          },
          {
            "type": "integer",
            "name": "newDuration",
            "in": "query",
            "required": true,
            "format": "int32",
            "x-nullable": false
          },
          {
            "type": "string",
            "name": "user",
            "in": "query",
            "required": true,
            "x-nullable": true
          },
          {
            "type": "boolean",
            "name": "pushEndTime",
            "in": "query",
            "required": true,
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/APIResponseOfBoolean"
            }
          }
        }
      }
    },
    "/api/token/getData": {
      "post": {
        "tags": [
          "SingleSignOn"
        ],
        "operationId": "SingleSignOn_GetDataForToken",
        "parameters": [
          {
            "name": "value",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RetrieveDataForToken"
            },
            "x-nullable": true
          }
        ],
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/APIResponseOfRetrieveDataForTokenResult"
            }
          }
        }
      }
    },
    "/api/task/addorupdate": {
      "post": {
        "tags": [
          "Task"
        ],
        "operationId": "Task_AddOrUpdateTask",
        "parameters": [
          {
            "name": "value",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AddOrUpdateTask"
            },
            "x-nullable": true
          }
        ],
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/APIResponseOfAddOrUpdateTaskResult"
            }
          }
        }
      }
    },
    "/api/status": {
      "get": {
        "tags": [
          "Test"
        ],
        "operationId": "Test_Status",
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "schema": {
              "type": "file"
            }
          }
        }
      }
    },
    "/api/test": {
      "get": {
        "tags": [
          "Test"
        ],
        "operationId": "Test_Test",
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "schema": {
              "type": "file"
            }
          }
        }
      }
    },
    "/api/testexception": {
      "get": {
        "tags": [
          "Test"
        ],
        "operationId": "Test_TestApiException",
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "schema": {
              "type": "file"
            }
          }
        }
      }
    },
    "/api/Triage/GetTriageBooking": {
      "get": {
        "tags": [
          "Triage"
        ],
        "operationId": "Triage_GetTriageBooking",
        "parameters": [
          {
            "type": "integer",
            "name": "bookingId",
            "in": "query",
            "required": true,
            "format": "int32",
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/APIResponseOfTriageBookingDO"
            }
          }
        }
      }
    },
    "/api/Triage/GetPurposes": {
      "post": {
        "tags": [
          "Triage"
        ],
        "operationId": "Triage_GetPurposes",
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/APIResponseOfListOfBookingTypeDO"
            }
          }
        }
      }
    },
    "/api/Triage/GetWorkflowSteps": {
      "get": {
        "tags": [
          "Triage"
        ],
        "operationId": "Triage_GetWorkflowSteps",
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/APIResponseOfListOfString"
            }
          }
        }
      }
    },
    "/api/Triage/GetTriageOptions": {
      "get": {
        "tags": [
          "Triage"
        ],
        "operationId": "Triage_GetTriageOptions",
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/APIResponseOfListOfTriageOptionDO"
            }
          }
        }
      }
    },
    "/api/Triage/GetReferrals": {
      "post": {
        "tags": [
          "Triage"
        ],
        "operationId": "Triage_GetReferrals",
        "parameters": [
          {
            "name": "booking",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TriageBookingDO"
            },
            "x-nullable": true
          }
        ],
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/APIResponseOfListOfTriageReferralDO"
            }
          }
        }
      }
    },
    "/api/Triage/GetLocationsAndDoctors": {
      "post": {
        "tags": [
          "Triage"
        ],
        "operationId": "Triage_GetLocationsAndDoctors",
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/APIResponseOfListOfLocationWithDoctors"
            }
          }
        }
      }
    },
    "/api/Triage/GetAssociates": {
      "post": {
        "tags": [
          "Triage"
        ],
        "operationId": "Triage_GetAssociates",
        "parameters": [
          {
            "type": "integer",
            "name": "locationId",
            "in": "query",
            "required": true,
            "format": "int32",
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/APIResponseOfListOfStaffDO"
            }
          }
        }
      }
    },
    "/api/Triage/SaveTriageAppointment": {
      "post": {
        "tags": [
          "Triage"
        ],
        "operationId": "Triage_SaveTriageBookingAppointment",
        "parameters": [
          {
            "name": "triageBookingAppointment",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TriageBookingAppointmentDO"
            },
            "x-nullable": true
          },
          {
            "type": "string",
            "name": "UserId",
            "in": "query",
            "required": true,
            "x-nullable": true
          }
        ],
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/APIResponseOfTriageBookingAppointmentDO"
            }
          }
        }
      }
    },
    "/api/Triage/GetTriageAppointment": {
      "get": {
        "tags": [
          "Triage"
        ],
        "operationId": "Triage_GetTriageAppointment",
        "parameters": [
          {
            "type": "integer",
            "name": "appointmentId",
            "in": "query",
            "required": true,
            "format": "int32",
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/APIResponseOfTriageBookingAppointmentDO"
            }
          }
        }
      }
    },
    "/api/Triage/UpdateTriageAppointment": {
      "post": {
        "tags": [
          "Triage"
        ],
        "operationId": "Triage_UpdateTriageBookingAppointment",
        "parameters": [
          {
            "name": "triageBookingAppointment",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TriageBookingAppointmentDO"
            },
            "x-nullable": true
          },
          {
            "type": "string",
            "name": "UserId",
            "in": "query",
            "required": true,
            "x-nullable": true
          }
        ],
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/APIResponseOfTriageBookingAppointmentDO"
            }
          }
        }
      }
    },
    "/api/Triage/DeleteTriageAppointment": {
      "post": {
        "tags": [
          "Triage"
        ],
        "operationId": "Triage_DeleteTriageBookingAppointment",
        "parameters": [
          {
            "type": "integer",
            "name": "appointmentId",
            "in": "query",
            "required": true,
            "format": "int32",
            "x-nullable": false
          },
          {
            "type": "string",
            "name": "UserId",
            "in": "query",
            "required": true,
            "x-nullable": true
          }
        ],
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/APIResponseOfTriageBookingAppointmentDO"
            }
          }
        }
      }
    },
    "/api/triagebooking/addorupdate": {
      "post": {
        "tags": [
          "TriageBooking"
        ],
        "operationId": "TriageBooking_FindIncomingOrderByOrderNumber",
        "parameters": [
          {
            "name": "value",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AddOrUpdateTriageBooking"
            },
            "x-nullable": true
          }
        ],
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/APIResponseOfAddOrUpdateTriageBookingResult"
            }
          }
        }
      }
    },
    "/api/windowlayout": {
      "get": {
        "tags": [
          "WindowLayout"
        ],
        "operationId": "WindowLayout_GetLayout",
        "parameters": [
          {
            "type": "string",
            "name": "token",
            "in": "query",
            "x-nullable": true
          },
          {
            "type": "string",
            "name": "url",
            "in": "query",
            "x-nullable": true
          },
          {
            "type": "string",
            "name": "screenPrefix",
            "in": "query",
            "x-nullable": true
          },
          {
            "type": "string",
            "name": "correlationID",
            "in": "query",
            "x-nullable": true
          }
        ],
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/APIResponseOfGetWindowLayoutResponse"
            }
          }
        }
      },
      "post": {
        "tags": [
          "WindowLayout"
        ],
        "operationId": "WindowLayout_SaveLayout",
        "parameters": [
          {
            "name": "value",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AddOrUpdateWindowLayout"
            },
            "x-nullable": true
          }
        ],
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/APIResponseOfAddOrUpdateWindowLayoutResponse"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "AddOrUpdateActivityLog": {
      "type": "object",
      "additionalProperties": false,
      "allOf": [
        {
          "$ref": "#/definitions/AddOrUpdateActivityLogParams"
        }
      ]
    },
    "AddOrUpdateActivityLogParams": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "id"
      ],
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "correlation_ID": {
          "type": "string"
        },
        "correlation_Type": {
          "type": "string"
        },
        "dateOccurred": {
          "type": "string",
          "format": "date-time"
        },
        "feed_ID": {
          "type": "integer",
          "format": "int32"
        },
        "raw_Patient_Firstname": {
          "type": "string"
        },
        "raw_Patient_DOB": {
          "type": "string"
        },
        "raw_Patient_AssigningAuthority": {
          "type": "string"
        },
        "raw_Patient_Identifier": {
          "type": "string"
        },
        "raw_Patient_Surname": {
          "type": "string"
        },
        "matched_HealthTrack_Patient_ID": {
          "type": "integer",
          "format": "int32"
        },
        "action": {
          "type": "string"
        },
        "message": {
          "type": "string"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/BaseRequestParams"
        }
      ]
    },
    "BaseRequestParams": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "propertiesToClear": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/CorrelatableRequestParams"
        }
      ]
    },
    "CorrelatableRequestParams": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "correlationID": {
          "type": "string"
        }
      }
    },
    "APIResponseOfAddOrUpdateActivityLogResult": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "data": {
          "$ref": "#/definitions/AddOrUpdateActivityLogResult"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ProvideErrorMessage"
        }
      ]
    },
    "AddOrUpdateActivityLogResult": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "id"
      ],
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ProvideErrorMessage"
        }
      ]
    },
    "ProvideErrorMessage": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "errorMessage": {
          "type": "string"
        }
      }
    },
    "AddOrUpdateAdmission": {
      "type": "object",
      "additionalProperties": false,
      "allOf": [
        {
          "$ref": "#/definitions/AddOrUpdateAdmissionParams"
        }
      ]
    },
    "AddOrUpdateAdmissionParams": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "patient_ID",
        "feed_ID"
      ],
      "properties": {
        "mO_Admitting": {
          "type": "integer",
          "format": "int32"
        },
        "mO_Consultant": {
          "type": "integer",
          "format": "int32"
        },
        "mO_Surgeon": {
          "type": "integer",
          "format": "int32"
        },
        "modeOfSeparation": {
          "type": "integer",
          "format": "byte"
        },
        "nonCertifiedDays": {
          "type": "integer"
        },
        "palliativeCareDays": {
          "type": "integer",
          "format": "int32"
        },
        "palliativeCareStatusCode": {
          "type": "integer",
          "format": "byte"
        },
        "hospitalBillingComplete": {
          "type": "boolean"
        },
        "patient_ID": {
          "type": "integer",
          "format": "int32"
        },
        "phiscoCountryOfBirth": {
          "type": "integer",
          "format": "int32"
        },
        "phiscoHealthInsuranceStatus": {
          "type": "integer",
          "format": "byte"
        },
        "phiscoLanguageSpokenAtHome": {
          "type": "integer",
          "format": "int32"
        },
        "preAdmissionAssessmentComplete": {
          "type": "boolean"
        },
        "readmissionWithin28Days": {
          "type": "integer",
          "format": "byte"
        },
        "referral_ID": {
          "type": "integer",
          "format": "int32"
        },
        "paymentModel": {
          "type": "string"
        },
        "mO_Attending": {
          "type": "integer",
          "format": "int32"
        },
        "hospitalStayBillingComplete": {
          "type": "boolean"
        },
        "invoiceToFeeContract": {
          "type": "integer",
          "format": "int32"
        },
        "mentalHealthLegalStatus": {
          "type": "integer",
          "format": "byte"
        },
        "mechanicalVentilationHrs": {
          "type": "integer"
        },
        "leaveDays": {
          "type": "integer"
        },
        "reportingComplete": {
          "type": "boolean"
        },
        "isTransferred": {
          "type": "boolean"
        },
        "iscState": {
          "type": "integer",
          "format": "byte"
        },
        "invoiceTo": {
          "type": "integer",
          "format": "int32"
        },
        "iscPaymentStatusOnSeparation": {
          "type": "integer",
          "format": "byte"
        },
        "iscLanguageSpokenAtHome": {
          "type": "integer",
          "format": "byte"
        },
        "iscIndigenousOrigin": {
          "type": "integer",
          "format": "byte"
        },
        "iscHealthInsuranceStatus": {
          "type": "integer",
          "format": "byte"
        },
        "iscDateOfFirstProcedure": {
          "type": "string",
          "format": "date-time"
        },
        "iscCountryOfBirth": {
          "type": "integer",
          "format": "int32"
        },
        "invoiceToFundCompany": {
          "type": "integer",
          "format": "int32"
        },
        "iscMaritalStatus": {
          "type": "integer",
          "format": "byte"
        },
        "sameDayStatus": {
          "type": "integer",
          "format": "byte"
        },
        "totalPsychiatricCareDays": {
          "type": "integer"
        },
        "submission_Status": {
          "type": "string"
        },
        "sourceOfReferral": {
          "type": "integer",
          "format": "byte"
        },
        "userLastModified_Discharge": {
          "type": "string"
        },
        "surgeonType": {
          "type": "string"
        },
        "svB_ChargeAmount": {
          "type": "number",
          "format": "decimal"
        },
        "svB_ChargeRaisedCde": {
          "type": "string"
        },
        "svB_FromDate": {
          "type": "string",
          "format": "date-time"
        },
        "svB_NumberOfDays": {
          "type": "integer"
        },
        "svB_ServiceCode": {
          "type": "string"
        },
        "svB_ServiceCodeTypeCode": {
          "type": "string"
        },
        "svB_ToDate": {
          "type": "string",
          "format": "date-time"
        },
        "totalHospitalChargeAmount": {
          "type": "number",
          "format": "decimal"
        },
        "totalMedicalChargeAmount": {
          "type": "number",
          "format": "decimal"
        },
        "hospitalBillingClass": {
          "type": "string"
        },
        "urgencyOfAdmission": {
          "type": "integer",
          "format": "byte"
        },
        "userCreated_admission": {
          "type": "string"
        },
        "userCreated_Discharge": {
          "type": "string"
        },
        "userLastModified_admission": {
          "type": "string"
        },
        "hosp_TransferFrom": {
          "type": "string"
        },
        "dischargeIntention": {
          "type": "integer",
          "format": "byte"
        },
        "hosp_MRN": {
          "type": "string"
        },
        "consultingMOType": {
          "type": "string"
        },
        "compensationClaimCde": {
          "type": "integer",
          "format": "byte"
        },
        "codingComplete": {
          "type": "boolean"
        },
        "claimTypeCde": {
          "type": "string"
        },
        "attendingMOType": {
          "type": "string"
        },
        "adT_Ward": {
          "type": "integer",
          "format": "int32"
        },
        "adT_Unit": {
          "type": "integer",
          "format": "int32"
        },
        "hosp_MRN_Alt": {
          "type": "string"
        },
        "adT_Hospital_ID": {
          "type": "integer",
          "format": "int32"
        },
        "adT_Class": {
          "type": "integer",
          "format": "int32"
        },
        "adT_Bed": {
          "type": "string"
        },
        "contiguousClaimCode": {
          "type": "string"
        },
        "admittingMOType": {
          "type": "string"
        },
        "admission_State": {
          "type": "integer",
          "format": "byte"
        },
        "admission_Procedure_Description": {
          "type": "string"
        },
        "admission_Procedure_Code": {
          "type": "integer",
          "format": "int32"
        },
        "admission_Notes": {
          "type": "string"
        },
        "admission_Indication_Description": {
          "type": "string"
        },
        "admission_Indication_Code": {
          "type": "integer",
          "format": "int32"
        },
        "admission_Diagnosis_Description": {
          "type": "string"
        },
        "admission_Diagnosis_Code": {
          "type": "integer",
          "format": "int32"
        },
        "admission_Complications": {
          "type": "integer",
          "format": "int32"
        },
        "accommodation": {
          "type": "integer",
          "format": "byte"
        },
        "admissionType": {
          "type": "integer",
          "format": "byte"
        },
        "createdByUser": {
          "type": "boolean"
        },
        "adT_Status": {
          "type": "integer",
          "format": "int32"
        },
        "dateCreated_admission": {
          "type": "string",
          "format": "date-time"
        },
        "hosp_AdmissionNum": {
          "type": "string"
        },
        "fundedBy": {
          "type": "integer",
          "format": "byte"
        },
        "date_ExpectedDischarge": {
          "type": "string",
          "format": "date-time"
        },
        "facilityContractStatusCode": {
          "type": "integer",
          "format": "byte"
        },
        "episodeTypeCode": {
          "type": "integer",
          "format": "int32"
        },
        "episode_ID": {
          "type": "integer",
          "format": "int32"
        },
        "eligibilityLevel": {
          "type": "integer",
          "format": "byte"
        },
        "drType": {
          "type": "integer",
          "format": "byte"
        },
        "drgVersion": {
          "type": "string"
        },
        "drgCode": {
          "type": "string"
        },
        "discharge_Transfer": {
          "type": "integer",
          "format": "int32"
        },
        "discharge_To": {
          "type": "integer",
          "format": "int32"
        },
        "facilityTypeCode": {
          "type": "integer",
          "format": "byte"
        },
        "discharge_Notes": {
          "type": "string"
        },
        "discharge_Diagnosis_Description": {
          "type": "string"
        },
        "discharge_Diagnosis_Code": {
          "type": "integer",
          "format": "int32"
        },
        "deletionUser": {
          "type": "string"
        },
        "deletionDate": {
          "type": "string",
          "format": "date-time"
        },
        "deleted": {
          "type": "boolean"
        },
        "dateTime_Discharge": {
          "type": "string",
          "format": "date-time"
        },
        "dateTime_Admission": {
          "type": "string",
          "format": "date-time"
        },
        "dateLastModified_Discharge": {
          "type": "string",
          "format": "date-time"
        },
        "dateLastModified_admission": {
          "type": "string",
          "format": "date-time"
        },
        "dateCreated_Discharge": {
          "type": "string",
          "format": "date-time"
        },
        "discharge_Status": {
          "type": "string"
        },
        "feed_ID": {
          "type": "integer",
          "format": "int32"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/BaseRequestParams"
        }
      ]
    },
    "APIResponseOfAddOrUpdateAdmissionResult": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "data": {
          "$ref": "#/definitions/AddOrUpdateAdmissionResult"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ProvideErrorMessage"
        }
      ]
    },
    "AddOrUpdateAdmissionResult": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "admission_ID"
      ],
      "properties": {
        "admission_ID": {
          "type": "integer",
          "format": "int64"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ProvideErrorMessage"
        }
      ]
    },
    "CancelAdmission": {
      "type": "object",
      "additionalProperties": false,
      "allOf": [
        {
          "$ref": "#/definitions/CancelAdmissionParams"
        }
      ]
    },
    "CancelAdmissionParams": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "patient_ID",
        "feed_ID"
      ],
      "properties": {
        "hosp_AdmissionNum": {
          "type": "string"
        },
        "patient_ID": {
          "type": "integer",
          "format": "int32"
        },
        "feed_ID": {
          "type": "integer",
          "format": "int32"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/BaseRequestParams"
        }
      ]
    },
    "APIResponseOfCancelAdmissionResult": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "data": {
          "$ref": "#/definitions/CancelAdmissionResult"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ProvideErrorMessage"
        }
      ]
    },
    "CancelAdmissionResult": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "success"
      ],
      "properties": {
        "success": {
          "type": "boolean"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ProvideErrorMessage"
        }
      ]
    },
    "MoveAdmissionOntoPatient": {
      "type": "object",
      "additionalProperties": false,
      "allOf": [
        {
          "$ref": "#/definitions/MoveAdmissionOntoPatientParams"
        }
      ]
    },
    "MoveAdmissionOntoPatientParams": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "feed_ID",
        "target_Patient_ID"
      ],
      "properties": {
        "feed_ID": {
          "type": "integer",
          "format": "int32"
        },
        "admissionToMove": {
          "type": "string"
        },
        "target_Patient_ID": {
          "type": "integer",
          "format": "int32"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/BaseRequestParams"
        }
      ]
    },
    "APIResponseOfMoveAdmissionOntoPatientResult": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "data": {
          "$ref": "#/definitions/MoveAdmissionOntoPatientResult"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ProvideErrorMessage"
        }
      ]
    },
    "MoveAdmissionOntoPatientResult": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "admission_ID"
      ],
      "properties": {
        "admission_ID": {
          "type": "integer",
          "format": "int32"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ProvideErrorMessage"
        }
      ]
    },
    "AddOrUpdateAlert": {
      "type": "object",
      "additionalProperties": false,
      "allOf": [
        {
          "$ref": "#/definitions/AddOrUpdateAlertParams"
        }
      ]
    },
    "AddOrUpdateAlertParams": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "patient_ID",
        "type"
      ],
      "properties": {
        "alert_ID": {
          "type": "integer",
          "format": "int32"
        },
        "dateCreated": {
          "type": "string",
          "format": "date-time"
        },
        "dateLastModified": {
          "type": "string",
          "format": "date-time"
        },
        "dueDate": {
          "type": "string",
          "format": "date-time"
        },
        "endDate": {
          "type": "string",
          "format": "date-time"
        },
        "message": {
          "type": "string"
        },
        "patient_ID": {
          "type": "integer",
          "format": "int32"
        },
        "role": {
          "type": "integer",
          "format": "int32"
        },
        "source": {
          "type": "integer",
          "format": "byte"
        },
        "source_ID": {
          "type": "integer",
          "format": "int64"
        },
        "startDate": {
          "type": "string",
          "format": "date-time"
        },
        "type": {
          "type": "integer",
          "format": "int32"
        },
        "user_ID": {
          "type": "string"
        },
        "userCreated": {
          "type": "string"
        },
        "userLastModified": {
          "type": "string"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/BaseRequestParams"
        }
      ]
    },
    "APIResponseOfAddOrUpdateAlertResult": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "data": {
          "$ref": "#/definitions/AddOrUpdateAlertResult"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ProvideErrorMessage"
        }
      ]
    },
    "AddOrUpdateAlertResult": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "success",
        "alert_ID"
      ],
      "properties": {
        "success": {
          "type": "boolean"
        },
        "alert_ID": {
          "type": "integer",
          "format": "int32"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ProvideErrorMessage"
        }
      ]
    },
    "DeleteAlert": {
      "type": "object",
      "additionalProperties": false,
      "allOf": [
        {
          "$ref": "#/definitions/DeleteAlertParams"
        }
      ]
    },
    "DeleteAlertParams": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "alert_ID": {
          "type": "integer",
          "format": "int32"
        },
        "patient_ID": {
          "type": "integer",
          "format": "int32"
        },
        "type": {
          "type": "integer",
          "format": "int32"
        },
        "source": {
          "type": "integer",
          "format": "byte"
        },
        "source_ID": {
          "type": "integer",
          "format": "int64"
        },
        "user_ID": {
          "type": "string"
        },
        "definitionUser_ID": {
          "type": "string"
        },
        "definitionUserManage": {
          "type": "boolean"
        },
        "definitionSourcesOtherThan": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/BaseRequestParams"
        }
      ]
    },
    "APIResponseOfDeleteAlertResult": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "data": {
          "$ref": "#/definitions/DeleteAlertResult"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ProvideErrorMessage"
        }
      ]
    },
    "DeleteAlertResult": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "success"
      ],
      "properties": {
        "success": {
          "type": "boolean"
        },
        "alert_IDs": {
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ProvideErrorMessage"
        }
      ]
    },
    "FindAlertDefinition": {
      "type": "object",
      "additionalProperties": false,
      "allOf": [
        {
          "$ref": "#/definitions/FindAlertDefinitionParams"
        }
      ]
    },
    "FindAlertDefinitionParams": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "source": {
          "type": "string"
        },
        "user_ID": {
          "type": "string"
        },
        "userManage": {
          "type": "boolean"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/BaseRequestParams"
        }
      ]
    },
    "APIResponseOfFindAlertDefinitionResult": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "data": {
          "$ref": "#/definitions/FindAlertDefinitionResult"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ProvideErrorMessage"
        }
      ]
    },
    "FindAlertDefinitionResult": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "success",
        "alertEnabled",
        "diaryAlert",
        "displayOrder",
        "endDateModifier",
        "startDateModifier",
        "type",
        "useEndDateModifier",
        "userManage",
        "useStartDateModifier"
      ],
      "properties": {
        "success": {
          "type": "boolean"
        },
        "alertAction": {
          "type": "integer",
          "format": "int32"
        },
        "alertEnabled": {
          "type": "boolean"
        },
        "dateCreated": {
          "type": "string",
          "format": "date-time"
        },
        "dateLastModified": {
          "type": "string",
          "format": "date-time"
        },
        "deletionDate": {
          "type": "string",
          "format": "date-time"
        },
        "deletionUser": {
          "type": "string"
        },
        "source": {
          "type": "string"
        },
        "diaryAlert": {
          "type": "boolean"
        },
        "diaryAlertStyle": {
          "type": "integer",
          "format": "byte"
        },
        "displayOrder": {
          "type": "integer",
          "format": "byte"
        },
        "displayPopupNonDoctors": {
          "type": "boolean"
        },
        "endDateModifier": {
          "type": "integer",
          "format": "int32"
        },
        "isGrouped": {
          "type": "boolean"
        },
        "message": {
          "type": "string"
        },
        "role": {
          "type": "integer",
          "format": "int32"
        },
        "startDateModifier": {
          "type": "integer",
          "format": "int32"
        },
        "type": {
          "type": "integer",
          "format": "int32"
        },
        "useEndDateModifier": {
          "type": "boolean"
        },
        "user_ID": {
          "type": "string"
        },
        "userCreated": {
          "type": "string"
        },
        "userLastModified": {
          "type": "string"
        },
        "userManage": {
          "type": "boolean"
        },
        "useStartDateModifier": {
          "type": "boolean"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ProvideErrorMessage"
        }
      ]
    },
    "APIResponseOfIEnumerableOfAnnotationToolDO": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AnnotationToolDO"
          }
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ProvideErrorMessage"
        }
      ]
    },
    "AnnotationToolDO": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "id"
      ],
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "toolDescription": {
          "type": "string"
        },
        "units": {
          "type": "string"
        },
        "dataType": {
          "type": "string"
        }
      }
    },
    "APIResponseOfEquipmentTransactionDO": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "data": {
          "$ref": "#/definitions/EquipmentTransactionDO"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ProvideErrorMessage"
        }
      ]
    },
    "EquipmentTransactionDO": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "transactionID",
        "equipmentID",
        "patientID",
        "issuingDate",
        "dependencyLevel",
        "paymentStatus",
        "fundingSource"
      ],
      "properties": {
        "equipmentType": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/InventoryCategoryDO"
          }
        },
        "manufacturer": {
          "$ref": "#/definitions/InventoryCompanyDO"
        },
        "model": {
          "type": "string"
        },
        "transactionID": {
          "type": "integer",
          "format": "int32"
        },
        "equipmentID": {
          "type": "integer",
          "format": "int32"
        },
        "equipmentNumber": {
          "type": "string"
        },
        "serialNumber": {
          "type": "string"
        },
        "patientID": {
          "type": "integer",
          "format": "int32"
        },
        "mrn": {
          "type": "string"
        },
        "patientName": {
          "type": "string"
        },
        "issuingDate": {
          "type": "string",
          "format": "date-time"
        },
        "returnDate": {
          "type": "string",
          "format": "date-time"
        },
        "dependencyLevel": {
          "type": "integer",
          "format": "byte"
        },
        "paymentStatus": {
          "type": "integer",
          "format": "int32"
        },
        "fundingSource": {
          "type": "integer",
          "format": "int32"
        },
        "notes": {
          "type": "string"
        }
      }
    },
    "InventoryCategoryDO": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "categoryId",
        "parentCategory"
      ],
      "properties": {
        "categoryId": {
          "type": "integer",
          "format": "int32"
        },
        "categoryName": {
          "type": "string"
        },
        "parentCategory": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "InventoryCompanyDO": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "company_ID"
      ],
      "properties": {
        "company_ID": {
          "type": "integer",
          "format": "int32"
        },
        "companyName": {
          "type": "string"
        }
      }
    },
    "APIResponseOfListOfEquipmentTransactionDO": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/EquipmentTransactionDO"
          }
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ProvideErrorMessage"
        }
      ]
    },
    "APIResponseOfDeleteTransactionResponseDO": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "data": {
          "$ref": "#/definitions/DeleteTransactionResponseDO"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ProvideErrorMessage"
        }
      ]
    },
    "DeleteTransactionResponseDO": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "equipmentReturned"
      ],
      "properties": {
        "equipmentReturned": {
          "type": "boolean"
        }
      }
    },
    "APIResponseOfListOfAssetDeviceDO": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AssetDeviceDO"
          }
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ProvideErrorMessage"
        }
      ]
    },
    "AssetDeviceDO": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "equipment_ID",
        "product_ID",
        "commissionDate",
        "status",
        "serviceInterval",
        "nextServiceDate",
        "createdDate",
        "lastModifiedDate",
        "deleted",
        "purpose"
      ],
      "properties": {
        "equipment_ID": {
          "type": "integer",
          "format": "int32"
        },
        "equipmentNumber": {
          "type": "string"
        },
        "serialNumber": {
          "type": "string"
        },
        "product_ID": {
          "type": "integer",
          "format": "int32"
        },
        "commissionDate": {
          "type": "string",
          "format": "date-time"
        },
        "status": {
          "$ref": "#/definitions/PAPEquipmentStatus"
        },
        "serviceInterval": {
          "type": "integer",
          "format": "int32"
        },
        "lastServiceDate": {
          "type": "string",
          "format": "date-time"
        },
        "nextServiceDate": {
          "type": "string",
          "format": "date-time"
        },
        "calibrationInterval": {
          "type": "integer",
          "format": "int32"
        },
        "lastCalibrationDate": {
          "type": "string",
          "format": "date-time"
        },
        "nextCalibrationDate": {
          "type": "string",
          "format": "date-time"
        },
        "notes": {
          "type": "string"
        },
        "createdDate": {
          "type": "string",
          "format": "date-time"
        },
        "createdUser": {
          "type": "string"
        },
        "lastModifiedDate": {
          "type": "string",
          "format": "date-time"
        },
        "lastModifiedUser": {
          "type": "string"
        },
        "deleted": {
          "type": "boolean"
        },
        "deletedDate": {
          "type": "string",
          "format": "date-time"
        },
        "deletedUser": {
          "type": "string"
        },
        "manufacturer": {
          "$ref": "#/definitions/InventoryCompanyDO"
        },
        "suppliers": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/InventoryCompanyDO"
          }
        },
        "equipmentType": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/InventoryCategoryDO"
          }
        },
        "model": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "transactionId": {
          "type": "integer",
          "format": "int32"
        },
        "transactionDate": {
          "type": "string",
          "format": "date-time"
        },
        "lastLoan": {
          "$ref": "#/definitions/AssetLastLoanedPatient"
        },
        "location": {
          "type": "string"
        },
        "purpose": {
          "$ref": "#/definitions/EquipmentPurpose"
        }
      }
    },
    "PAPEquipmentStatus": {
      "type": "integer",
      "description": "",
      "x-enumNames": [
        "InStock",
        "Issued",
        "Retired",
        "InMaintenance",
        "CurrentAssets"
      ],
      "enum": [
        1,
        2,
        3,
        4,
        5
      ]
    },
    "AssetLastLoanedPatient": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "fullName": {
          "type": "string"
        },
        "displayDetails": {
          "type": "string"
        },
        "patient_ID": {
          "type": "integer",
          "format": "int32"
        },
        "patient_MRN": {
          "type": "string"
        },
        "dob": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "EquipmentPurpose": {
      "type": "integer",
      "description": "",
      "x-enumNames": [
        "Loanable",
        "Fixed",
        "Mobile"
      ],
      "enum": [
        1,
        2,
        3
      ]
    },
    "APIResponseOfAssetDeviceDO": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "data": {
          "$ref": "#/definitions/AssetDeviceDO"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ProvideErrorMessage"
        }
      ]
    },
    "PAPManagementSearchDO": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "searchBefore",
        "mustBeAvailable"
      ],
      "properties": {
        "searchBefore": {
          "type": "boolean"
        },
        "inputDate": {
          "type": "string",
          "format": "date-time"
        },
        "inputDate2": {
          "type": "string",
          "format": "date-time"
        },
        "equipmentType": {
          "$ref": "#/definitions/InventoryCategoryDO"
        },
        "manufacturer": {
          "$ref": "#/definitions/InventoryCompanyDO"
        },
        "model": {
          "type": "string"
        },
        "status": {
          "type": "integer",
          "format": "int32"
        },
        "mustBeAvailable": {
          "type": "boolean"
        },
        "paymentStatus": {
          "type": "integer",
          "format": "int32"
        },
        "dependencyLevel": {
          "type": "integer",
          "format": "int32"
        },
        "patientID": {
          "type": "integer",
          "format": "int32"
        },
        "equipmentID": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "APIResponseOfListOfInventoryCategoryDO": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/InventoryCategoryDO"
          }
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ProvideErrorMessage"
        }
      ]
    },
    "APIResponseOfListOfInventoryCompanyDO": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/InventoryCompanyDO"
          }
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ProvideErrorMessage"
        }
      ]
    },
    "APIResponseOfListOfPAPSearchModel": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PAPSearchModel"
          }
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ProvideErrorMessage"
        }
      ]
    },
    "PAPSearchModel": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "model": {
          "type": "string"
        },
        "models": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PAPModel"
          }
        }
      }
    },
    "PAPModel": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "productId"
      ],
      "properties": {
        "productId": {
          "type": "integer",
          "format": "int32"
        },
        "model": {
          "type": "string"
        },
        "equipmentType": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/InventoryCategoryDO"
          }
        },
        "manufacturer": {
          "$ref": "#/definitions/InventoryCompanyDO"
        }
      }
    },
    "APIResponseOfListOfPAPFundingSource": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PAPFundingSource"
          }
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ProvideErrorMessage"
        }
      ]
    },
    "PAPFundingSource": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "sourceId"
      ],
      "properties": {
        "sourceId": {
          "type": "integer",
          "format": "int32"
        },
        "sourceName": {
          "type": "string"
        }
      }
    },
    "APIResponseOfListOfPAPPaymentStatus": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PAPPaymentStatus"
          }
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ProvideErrorMessage"
        }
      ]
    },
    "PAPPaymentStatus": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "statusId"
      ],
      "properties": {
        "statusId": {
          "type": "integer",
          "format": "int32"
        },
        "statusName": {
          "type": "string"
        }
      }
    },
    "APIResponseOfAssetLastLoanedPatient": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "data": {
          "$ref": "#/definitions/AssetLastLoanedPatient"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ProvideErrorMessage"
        }
      ]
    },
    "APIResponseOfListOfInventoryCompanyDetailsDO": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/InventoryCompanyDetailsDO"
          }
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ProvideErrorMessage"
        }
      ]
    },
    "InventoryCompanyDetailsDO": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "company_ID"
      ],
      "properties": {
        "company_ID": {
          "type": "integer",
          "format": "int32"
        },
        "companyName": {
          "type": "string"
        },
        "companyPhone": {
          "type": "string"
        },
        "companyEmail": {
          "type": "string"
        },
        "companyAddress": {
          "type": "string"
        }
      }
    },
    "APIResponseOfInventoryCategoryDO": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "data": {
          "$ref": "#/definitions/InventoryCategoryDO"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ProvideErrorMessage"
        }
      ]
    },
    "InventoryProductDO": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "productId",
        "lastModifiedOn",
        "createdOn"
      ],
      "properties": {
        "productId": {
          "type": "integer",
          "format": "int32"
        },
        "model": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "manufacturer": {
          "type": "string"
        },
        "manufacturerCompany": {
          "$ref": "#/definitions/InventoryCompanyDO"
        },
        "primarySupplier": {
          "$ref": "#/definitions/InventoryCompanyDO"
        },
        "secondarySupplier": {
          "$ref": "#/definitions/InventoryCompanyDO"
        },
        "deletedOn": {
          "type": "string",
          "format": "date-time"
        },
        "deletedBy": {
          "type": "string"
        },
        "lastModifiedOn": {
          "type": "string",
          "format": "date-time"
        },
        "lastModifiedBy": {
          "type": "string"
        },
        "createdOn": {
          "type": "string",
          "format": "date-time"
        },
        "createdBy": {
          "type": "string"
        },
        "additionalDescription": {
          "type": "string"
        },
        "categories": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/InventoryCategoryDO"
          }
        }
      }
    },
    "APIResponseOfInventoryProductDO": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "data": {
          "$ref": "#/definitions/InventoryProductDO"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ProvideErrorMessage"
        }
      ]
    },
    "APIResponseOfListOfInventoryProductDO": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/InventoryProductDO"
          }
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ProvideErrorMessage"
        }
      ]
    },
    "APIResponseOfListOfInventoryCategoryClosureDO": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/InventoryCategoryClosureDO"
          }
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ProvideErrorMessage"
        }
      ]
    },
    "InventoryCategoryClosureDO": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "parentId",
        "childId",
        "depth"
      ],
      "properties": {
        "parentId": {
          "type": "integer",
          "format": "int32"
        },
        "childId": {
          "type": "integer",
          "format": "int32"
        },
        "depth": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "APIResponseOfListOfInventoryProductCategoryDO": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/InventoryProductCategoryDO"
          }
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ProvideErrorMessage"
        }
      ]
    },
    "InventoryProductCategoryDO": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "inventoryCategoryId",
        "productId",
        "categoryId"
      ],
      "properties": {
        "inventoryCategoryId": {
          "type": "integer",
          "format": "int32"
        },
        "productId": {
          "type": "integer",
          "format": "int32"
        },
        "categoryId": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "InventoryProductFilterDO": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "searchTerm": {
          "type": "string"
        },
        "searchCategory_ID": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "InventoryCategoryFilterDO": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "searchTerm": {
          "type": "string"
        }
      }
    },
    "BookingFilter": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "doctorId",
        "locationId",
        "includeDeleted"
      ],
      "properties": {
        "doctorId": {
          "type": "integer",
          "format": "int32"
        },
        "locationId": {
          "type": "integer",
          "format": "int32"
        },
        "fromDate": {
          "$ref": "#/definitions/DateTimeDO"
        },
        "toDate": {
          "$ref": "#/definitions/DateTimeDO"
        },
        "includeDeleted": {
          "type": "boolean"
        }
      }
    },
    "DateTimeDO": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "day",
        "month",
        "year",
        "hours",
        "minutes"
      ],
      "properties": {
        "day": {
          "type": "integer",
          "format": "int32"
        },
        "month": {
          "type": "integer",
          "format": "int32"
        },
        "year": {
          "type": "integer",
          "format": "int32"
        },
        "hours": {
          "type": "integer",
          "format": "int32"
        },
        "minutes": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "APIResponseOfListOfBillWorksheetItem": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/BillWorksheetItem"
          }
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ProvideErrorMessage"
        }
      ]
    },
    "BillWorksheetItem": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "claimId",
        "bookingId",
        "patientId",
        "doctorId",
        "status",
        "locationId",
        "insurerId",
        "claimSent",
        "billPracticeFee",
        "deleted",
        "patientNoCharge",
        "insurerNoCharge",
        "accRelated"
      ],
      "properties": {
        "claimId": {
          "type": "integer",
          "format": "int32"
        },
        "bookingId": {
          "type": "integer",
          "format": "int32"
        },
        "bookingType": {
          "type": "string"
        },
        "patientId": {
          "type": "integer",
          "format": "int32"
        },
        "patientDisplayName": {
          "type": "string"
        },
        "patientDateOfBirth": {
          "$ref": "#/definitions/DateTimeDO"
        },
        "doctorId": {
          "type": "integer",
          "format": "int32"
        },
        "doctorDisplayName": {
          "type": "string"
        },
        "bookingDate": {
          "$ref": "#/definitions/DateTimeDO"
        },
        "status": {
          "$ref": "#/definitions/WorksheetClaimStatus"
        },
        "statusDisplayName": {
          "type": "string"
        },
        "locationId": {
          "type": "integer",
          "format": "int32"
        },
        "locationDisplayName": {
          "type": "string"
        },
        "insurer": {
          "type": "string"
        },
        "insurerId": {
          "type": "integer",
          "format": "int32"
        },
        "companyId": {
          "type": "integer",
          "format": "int32"
        },
        "invoiceTo": {
          "type": "string"
        },
        "insurerPolicyNumber": {
          "type": "string"
        },
        "insurerCardNumber": {
          "type": "string"
        },
        "feeTableId": {
          "type": "integer",
          "format": "int32"
        },
        "claimSent": {
          "type": "boolean"
        },
        "method": {
          "type": "string"
        },
        "insurerDefaultMethod": {
          "type": "string"
        },
        "applicationNumber": {
          "type": "string"
        },
        "serviceId": {
          "type": "integer",
          "format": "int32"
        },
        "serviceCode": {
          "type": "string"
        },
        "insurerCode": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "billPracticeFee": {
          "type": "boolean"
        },
        "fullFee": {
          "type": "number",
          "format": "decimal"
        },
        "cover": {
          "type": "number",
          "format": "double"
        },
        "coverFee": {
          "type": "number",
          "format": "decimal"
        },
        "coPayment": {
          "type": "number",
          "format": "decimal"
        },
        "coPaymentOverride": {
          "type": "number",
          "format": "decimal"
        },
        "excess": {
          "type": "number",
          "format": "decimal"
        },
        "insurerDefaultCover": {
          "type": "number",
          "format": "double"
        },
        "deleted": {
          "type": "boolean"
        },
        "invoiceNo_Patient": {
          "type": "integer",
          "format": "int32"
        },
        "invoiceNo_HealthInsurer": {
          "type": "integer",
          "format": "int32"
        },
        "patientNoCharge": {
          "type": "boolean"
        },
        "insurerNoCharge": {
          "type": "boolean"
        },
        "claimNotes": {
          "type": "string"
        },
        "serviceReason": {
          "type": "string"
        },
        "accRelated": {
          "type": "boolean"
        },
        "dateTimePatientDateOfBirth": {
          "type": "string",
          "format": "date-time"
        },
        "dateTimeBookingDate": {
          "type": "string",
          "format": "date-time"
        },
        "services": {
          "type": "string"
        },
        "bookingNotes": {
          "type": "string"
        }
      }
    },
    "WorksheetClaimStatus": {
      "type": "integer",
      "description": "",
      "x-enumNames": [
        "Booking",
        "Complete",
        "PendingHealthInsurerInvoice",
        "Coded",
        "PendingPatientInvoice",
        "Unknown",
        "Waiting"
      ],
      "enum": [
        66,
        67,
        72,
        79,
        80,
        85,
        87
      ]
    },
    "APIResponseOfInt32": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "data"
      ],
      "properties": {
        "data": {
          "type": "integer",
          "format": "int32"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ProvideErrorMessage"
        }
      ]
    },
    "APIResponseOfBoolean": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "data"
      ],
      "properties": {
        "data": {
          "type": "boolean"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ProvideErrorMessage"
        }
      ]
    },
    "APIResponseOfBillWorksheetItem": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "data": {
          "$ref": "#/definitions/BillWorksheetItem"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ProvideErrorMessage"
        }
      ]
    },
    "APIResponseOfUpdateHealthfundResponse": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "data": {
          "$ref": "#/definitions/UpdateHealthfundResponse"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ProvideErrorMessage"
        }
      ]
    },
    "UpdateHealthfundResponse": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/BillWorksheetItem"
          }
        },
        "errorMessage": {
          "type": "string"
        }
      }
    },
    "APIResponseOfBillWorksheetAuditInfo": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "data": {
          "$ref": "#/definitions/BillWorksheetAuditInfo"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ProvideErrorMessage"
        }
      ]
    },
    "BillWorksheetAuditInfo": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "claimId"
      ],
      "properties": {
        "claimId": {
          "type": "integer",
          "format": "int32"
        },
        "userLastModified": {
          "type": "string"
        },
        "dateLastModified": {
          "$ref": "#/definitions/DateTimeDO"
        },
        "userCreated": {
          "type": "string"
        },
        "dateCreated": {
          "$ref": "#/definitions/DateTimeDO"
        },
        "userDeleted": {
          "type": "string"
        },
        "dateDeleted": {
          "$ref": "#/definitions/DateTimeDO"
        },
        "userBooking": {
          "type": "string"
        },
        "dateBooking": {
          "$ref": "#/definitions/DateTimeDO"
        },
        "userCoded": {
          "type": "string"
        },
        "dateCoded": {
          "$ref": "#/definitions/DateTimeDO"
        },
        "userWaiting": {
          "type": "string"
        },
        "dateWaiting": {
          "$ref": "#/definitions/DateTimeDO"
        },
        "userPendingPatient": {
          "type": "string"
        },
        "datePendingPatient": {
          "$ref": "#/definitions/DateTimeDO"
        },
        "userPendingHI": {
          "type": "string"
        },
        "datePendingHI": {
          "$ref": "#/definitions/DateTimeDO"
        },
        "userComplete": {
          "type": "string"
        },
        "dateComplete": {
          "$ref": "#/definitions/DateTimeDO"
        },
        "invoiceNoPatient": {
          "type": "integer",
          "format": "int32"
        },
        "invoiceNoInsurer": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "APIResponseOfFeeTableBillItems": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "data": {
          "$ref": "#/definitions/FeeTableBillItems"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ProvideErrorMessage"
        }
      ]
    },
    "FeeTableBillItems": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "feeTableId": {
          "type": "integer",
          "format": "int32"
        },
        "billItems": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/BillItemHealthFundFee"
          }
        }
      }
    },
    "BillItemHealthFundFee": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "displayFee"
      ],
      "properties": {
        "itemNumDisp": {
          "type": "string"
        },
        "healthFundCode": {
          "type": "string"
        },
        "fullFee": {
          "type": "number",
          "format": "decimal"
        },
        "practiceFee": {
          "type": "number",
          "format": "decimal"
        },
        "displayFee": {
          "type": "number",
          "format": "decimal"
        },
        "description": {
          "type": "string"
        }
      }
    },
    "AddBookingApiRequestParams": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "admission_ID": {
          "type": "integer",
          "format": "int32"
        },
        "associate": {
          "type": "integer",
          "format": "int32"
        },
        "availableToExternal": {
          "type": "integer",
          "format": "byte"
        },
        "billingType": {
          "type": "integer",
          "format": "int32"
        },
        "billLocation_ID": {
          "type": "integer",
          "format": "int32"
        },
        "billTo": {
          "type": "integer",
          "format": "byte"
        },
        "booking_ID": {
          "type": "integer",
          "format": "int32"
        },
        "bookingPriority": {
          "type": "integer",
          "format": "int32"
        },
        "calculatedPatientDistance": {
          "type": "integer",
          "format": "int32"
        },
        "category": {
          "type": "integer",
          "format": "byte"
        },
        "cntBookingChange": {
          "type": "integer",
          "format": "int32"
        },
        "contactNumber": {
          "type": "string"
        },
        "ctimestamp": {
          "type": "string",
          "format": "byte"
        },
        "dateCreated": {
          "type": "string",
          "format": "date-time"
        },
        "dateLastModified": {
          "type": "string",
          "format": "date-time"
        },
        "dateTimeArrived": {
          "type": "string",
          "format": "date-time"
        },
        "dateTimeClosed": {
          "type": "string",
          "format": "date-time"
        },
        "dateTimeCompleted": {
          "type": "string",
          "format": "date-time"
        },
        "dateTimeConfirmed": {
          "type": "string",
          "format": "date-time"
        },
        "dateTimeEnd": {
          "type": "string",
          "format": "date-time"
        },
        "dateTimeInSession": {
          "type": "string",
          "format": "date-time"
        },
        "dateTimeNoShowed": {
          "type": "string",
          "format": "date-time"
        },
        "dateTimeOutSession": {
          "type": "string",
          "format": "date-time"
        },
        "dateTimePreviousBooking": {
          "type": "string",
          "format": "date-time"
        },
        "dateTimeSeen": {
          "type": "string",
          "format": "date-time"
        },
        "dateTimeStart": {
          "type": "string",
          "format": "date-time"
        },
        "deleted": {
          "type": "boolean"
        },
        "deletionDate": {
          "type": "string",
          "format": "date-time"
        },
        "deletionReason": {
          "type": "string"
        },
        "deletionUser": {
          "type": "string"
        },
        "drIDActual": {
          "type": "integer",
          "format": "int32"
        },
        "drIDBooked": {
          "type": "integer",
          "format": "int32"
        },
        "duration": {
          "type": "integer",
          "format": "int32"
        },
        "episode_ID": {
          "type": "integer",
          "format": "int32"
        },
        "firstname": {
          "type": "string"
        },
        "followUpDetails": {
          "type": "string"
        },
        "heldInvoiceno": {
          "type": "integer",
          "format": "int32"
        },
        "hospitalBillingClass": {
          "type": "string"
        },
        "inpatientBooking": {
          "type": "boolean"
        },
        "inpatientWard": {
          "type": "string"
        },
        "isFirstBooking": {
          "type": "boolean"
        },
        "lastInvoiceID": {
          "type": "integer",
          "format": "int32"
        },
        "link_ID": {
          "type": "integer",
          "format": "int32"
        },
        "location_ID": {
          "type": "integer",
          "format": "int32"
        },
        "note_ID": {
          "type": "integer",
          "format": "int32"
        },
        "patient_ID": {
          "type": "integer",
          "format": "int32"
        },
        "paymentClass": {
          "type": "integer",
          "format": "byte"
        },
        "paymentClassDateUpdated": {
          "type": "string",
          "format": "date-time"
        },
        "paymentClassUserUpdated": {
          "type": "string"
        },
        "preventSMSReminder": {
          "type": "boolean"
        },
        "programAttachedTo": {
          "type": "integer",
          "format": "int32"
        },
        "provNum_ID": {
          "type": "integer",
          "format": "int32"
        },
        "publishToRepository": {
          "type": "boolean"
        },
        "quoteNo": {
          "type": "integer",
          "format": "int32"
        },
        "rcIdentifier1": {
          "type": "string"
        },
        "rcIdentifier2": {
          "type": "integer",
          "format": "int32"
        },
        "referral_ID": {
          "type": "integer",
          "format": "int32"
        },
        "requestEarlier": {
          "type": "boolean"
        },
        "resource_ID": {
          "type": "integer",
          "format": "int32"
        },
        "room_ID": {
          "type": "integer",
          "format": "int32"
        },
        "selectedDeletionReason": {
          "type": "integer",
          "format": "byte"
        },
        "selectedStaff1": {
          "type": "integer",
          "format": "int32"
        },
        "selectedStaff2": {
          "type": "integer",
          "format": "int32"
        },
        "selectedStaff3": {
          "type": "integer",
          "format": "int32"
        },
        "selectedStaff4": {
          "type": "integer",
          "format": "int32"
        },
        "status": {
          "type": "string"
        },
        "surname": {
          "type": "string"
        },
        "transport": {
          "type": "integer",
          "format": "int32"
        },
        "transportDate": {
          "type": "string",
          "format": "date-time"
        },
        "triageOptions": {
          "type": "integer",
          "format": "int64"
        },
        "triageType": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "unregistered": {
          "type": "boolean"
        },
        "urgent": {
          "type": "boolean"
        },
        "userArrived": {
          "type": "string"
        },
        "userClosed": {
          "type": "string"
        },
        "userConfirmed": {
          "type": "string"
        },
        "userCreated": {
          "type": "string"
        },
        "userInSession": {
          "type": "string"
        },
        "userLastModified": {
          "type": "string"
        },
        "userNoShowed": {
          "type": "string"
        },
        "userOutSession": {
          "type": "string"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/BaseRequestParams"
        }
      ]
    },
    "APIResponseOfString": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "data": {
          "type": "string"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ProvideErrorMessage"
        }
      ]
    },
    "FindHealthTrackBookingRequestParameters": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "feedID"
      ],
      "properties": {
        "feedID": {
          "type": "integer",
          "format": "int32"
        },
        "remoteBookingID": {
          "type": "string"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/BaseRequestParams"
        }
      ]
    },
    "APIResponseOfNullableOfInt32": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "data": {
          "type": "integer",
          "format": "int32"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ProvideErrorMessage"
        }
      ]
    },
    "AddOrUpdateBookingMappingRequestParams": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "feed_ID"
      ],
      "properties": {
        "feed_ID": {
          "type": "integer",
          "format": "int32"
        },
        "remoteBooking_ID": {
          "type": "string"
        },
        "localBooking_ID": {
          "type": "integer",
          "format": "int32"
        },
        "owner": {
          "type": "boolean"
        },
        "dateCreated": {
          "type": "string",
          "format": "date-time"
        },
        "dateModified": {
          "type": "string",
          "format": "date-time"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/BaseRequestParams"
        }
      ]
    },
    "GetBookingMapping": {
      "type": "object",
      "additionalProperties": false,
      "allOf": [
        {
          "$ref": "#/definitions/GetBookingMappingParams"
        }
      ]
    },
    "GetBookingMappingParams": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "feed_ID": {
          "type": "integer",
          "format": "int32"
        },
        "localBooking_ID": {
          "type": "integer",
          "format": "int32"
        },
        "remoteBooking_ID": {
          "type": "string"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/BaseRequestParams"
        }
      ]
    },
    "APIResponseOfGetBookingMappingResult": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "data": {
          "$ref": "#/definitions/GetBookingMappingResult"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ProvideErrorMessage"
        }
      ]
    },
    "GetBookingMappingResult": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "bookingMappings": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/GetBookingMappingRow"
          }
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ProvideErrorMessage"
        }
      ]
    },
    "GetBookingMappingRow": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "feed_ID",
        "localBooking_ID",
        "owner",
        "dateCreated",
        "dateModified"
      ],
      "properties": {
        "feed_ID": {
          "type": "integer",
          "format": "int32"
        },
        "remoteBooking_ID": {
          "type": "string"
        },
        "localBooking_ID": {
          "type": "integer",
          "format": "int32"
        },
        "owner": {
          "type": "boolean"
        },
        "dateCreated": {
          "type": "string",
          "format": "date-time"
        },
        "dateModified": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "GetAllRequestableBookingTypes": {
      "type": "object",
      "additionalProperties": false,
      "allOf": [
        {
          "$ref": "#/definitions/GetAllRequestableBookingTypesParams"
        }
      ]
    },
    "GetAllRequestableBookingTypesParams": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "departmentId"
      ],
      "properties": {
        "departmentId": {
          "type": "integer",
          "format": "int64"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/CorrelatableRequestParams"
        }
      ]
    },
    "APIResponseOfGetAllRequestableBookingTypesResult": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "data": {
          "$ref": "#/definitions/GetAllRequestableBookingTypesResult"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ProvideErrorMessage"
        }
      ]
    },
    "GetAllRequestableBookingTypesResult": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "results": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/RequestAbleBookingType"
          }
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ProvideErrorMessage"
        }
      ]
    },
    "RequestAbleBookingType": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "bookingType": {
          "type": "string"
        },
        "diaryName": {
          "type": "string"
        },
        "longName": {
          "type": "string"
        }
      }
    },
    "APIResponseOfCardiacContainerDO": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "data": {
          "$ref": "#/definitions/CardiacContainerDO"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ProvideErrorMessage"
        }
      ]
    },
    "CardiacContainerDO": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "patient_ID",
        "recordSubCategory",
        "cVersion",
        "locationId"
      ],
      "properties": {
        "containerId": {
          "type": "integer",
          "format": "int64"
        },
        "patient_ID": {
          "type": "integer",
          "format": "int32"
        },
        "testDate": {
          "$ref": "#/definitions/DateTimeDO"
        },
        "dateCreated": {
          "$ref": "#/definitions/DateTimeDO"
        },
        "recordSubCategory": {
          "type": "integer",
          "format": "int32"
        },
        "generateResult": {
          "$ref": "#/definitions/CoronaryResultDO"
        },
        "cVersion": {
          "type": "integer",
          "format": "byte"
        },
        "normalisedResults": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/NormalisedResult"
          }
        },
        "locationId": {
          "type": "integer",
          "format": "int32"
        },
        "procedureEndDate": {
          "$ref": "#/definitions/DateTimeDO"
        },
        "procedure": {
          "type": "integer",
          "format": "int32"
        },
        "heartRate": {
          "type": "integer",
          "format": "byte"
        },
        "bloodPressureSystolic": {
          "type": "integer"
        },
        "bloodPressureDiastolic": {
          "type": "integer"
        },
        "height": {
          "type": "number",
          "format": "double"
        },
        "weight": {
          "type": "number",
          "format": "double"
        },
        "bmi": {
          "type": "number",
          "format": "double"
        },
        "bsa": {
          "type": "number",
          "format": "double"
        },
        "bsaFormula": {
          "type": "integer",
          "format": "byte"
        },
        "staffUsed": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/StaffUsedDO"
          }
        },
        "indications": {
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int32"
          }
        },
        "indicationsDetails": {
          "type": "string"
        },
        "riskFactors": {
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int32"
          }
        },
        "riskFactorsDetails": {
          "type": "string"
        },
        "grafts": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/GraftDO"
          }
        },
        "fullStructuredReport": {
          "type": "string"
        },
        "technicianNotes": {
          "type": "string"
        }
      }
    },
    "CoronaryResultDO": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "radioResult"
      ],
      "properties": {
        "radioResult": {
          "type": "integer",
          "format": "int32"
        },
        "extraDetails": {
          "type": "string"
        }
      }
    },
    "NormalisedResult": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "hmsReferenceId",
        "containerId",
        "isModified",
        "resultType"
      ],
      "properties": {
        "resultId": {
          "type": "integer",
          "format": "int64"
        },
        "hmsReferenceId": {
          "type": "integer",
          "format": "int32"
        },
        "containerId": {
          "type": "integer",
          "format": "int64"
        },
        "isModified": {
          "type": "boolean"
        },
        "result": {},
        "resultType": {
          "$ref": "#/definitions/NormalisedResultsType"
        },
        "description": {
          "type": "string"
        },
        "displayValue": {
          "type": "string"
        },
        "units": {
          "type": "string"
        },
        "minValue": {
          "type": "number",
          "format": "double"
        },
        "maxValue": {
          "type": "number",
          "format": "double"
        }
      }
    },
    "NormalisedResultsType": {
      "type": "integer",
      "description": "",
      "x-enumNames": [
        "None",
        "Text",
        "Number"
      ],
      "enum": [
        0,
        1,
        2
      ]
    },
    "StaffUsedDO": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "staffId",
        "containerId",
        "cVersion",
        "staffRoleId"
      ],
      "properties": {
        "staffUsedId": {
          "type": "integer",
          "format": "int64"
        },
        "staffId": {
          "type": "integer",
          "format": "int32"
        },
        "containerId": {
          "type": "integer",
          "format": "int64"
        },
        "cVersion": {
          "type": "integer",
          "format": "byte"
        },
        "staffRoleId": {
          "type": "integer",
          "format": "int32"
        },
        "roleText": {
          "type": "string"
        },
        "staffName": {
          "type": "string"
        }
      }
    },
    "GraftDO": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "cVersion",
        "type",
        "deleted"
      ],
      "properties": {
        "graft_ID": {
          "type": "integer",
          "format": "int32"
        },
        "containerId": {
          "type": "integer",
          "format": "int64"
        },
        "cVersion": {
          "type": "integer",
          "format": "int32"
        },
        "type": {
          "type": "integer",
          "format": "int32"
        },
        "anastamosis": {
          "type": "integer",
          "format": "int32"
        },
        "severity": {
          "type": "integer",
          "format": "int32"
        },
        "location": {
          "type": "integer",
          "format": "int32"
        },
        "comments": {
          "type": "string"
        },
        "deleted": {
          "type": "boolean"
        }
      }
    },
    "APIResponseOfFullStructuredReportDO": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "data": {
          "$ref": "#/definitions/FullStructuredReportDO"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ProvideErrorMessage"
        }
      ]
    },
    "FullStructuredReportDO": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "containerId",
        "cVersion"
      ],
      "properties": {
        "containerId": {
          "type": "integer",
          "format": "int64"
        },
        "cVersion": {
          "type": "integer",
          "format": "byte"
        },
        "fullStructuredReport": {
          "type": "string"
        }
      }
    },
    "APIResponseOfClinicalRecordDto": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "data": {
          "$ref": "#/definitions/ClinicalRecordDto"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ProvideErrorMessage"
        }
      ]
    },
    "ClinicalRecordDto": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "clinicalRecordId"
      ],
      "properties": {
        "patientDetails": {
          "$ref": "#/definitions/PatientDetailsDto"
        },
        "paymentClass": {
          "type": "string"
        },
        "externalPatientIds": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ExternalPatientIdentifier"
          }
        },
        "clinicalRecordId": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "PatientDetailsDto": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "surname": {
          "type": "string"
        },
        "firstName": {
          "type": "string"
        },
        "medicare": {
          "type": "string"
        },
        "dob": {
          "type": "string",
          "format": "date-time"
        },
        "patientId": {
          "type": "string"
        },
        "title": {
          "type": "string"
        }
      }
    },
    "ExternalPatientIdentifier": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "patientId",
        "feedId",
        "containerId"
      ],
      "properties": {
        "patientId": {
          "type": "integer",
          "format": "int32"
        },
        "externalIdentifier": {
          "type": "string"
        },
        "feedId": {
          "type": "integer",
          "format": "int32"
        },
        "feedName": {
          "type": "string"
        },
        "containerId": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "APIResponseOfSmartTextBundle": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "data": {
          "$ref": "#/definitions/SmartTextBundle"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ProvideErrorMessage"
        }
      ]
    },
    "SmartTextBundle": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "smartTextPackage": {
          "$ref": "#/definitions/SmartTextPackage"
        },
        "templates": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SmartTextTemplate"
          }
        },
        "styleProperties": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SmartTextStyleProperty"
          }
        }
      }
    },
    "SmartTextPackage": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "recordSubCategory",
        "buttonNumber",
        "fullTreeIncluded"
      ],
      "properties": {
        "formDisplay": {
          "type": "string"
        },
        "recordSubCategory": {
          "type": "integer",
          "format": "int32"
        },
        "buttonNumber": {
          "type": "integer",
          "format": "byte"
        },
        "dateExported": {
          "type": "string",
          "format": "date-time"
        },
        "fullTreeIncluded": {
          "type": "boolean"
        },
        "smartTextNodes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SmartTextNode"
          }
        }
      }
    },
    "SmartTextNode": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "navID",
        "parentID",
        "nodeSegment",
        "nodeType",
        "displayOrder",
        "styleID",
        "noNewLinesForHeaders",
        "trackingDisabled",
        "disablePunctuation",
        "hasRTF"
      ],
      "properties": {
        "navID": {
          "type": "integer",
          "format": "int32"
        },
        "parentID": {
          "type": "integer",
          "format": "int32"
        },
        "nodeText": {
          "type": "string"
        },
        "nodeSegment": {
          "$ref": "#/definitions/SegmentType"
        },
        "nodeType": {
          "$ref": "#/definitions/SmartTextType"
        },
        "displayOrder": {
          "type": "integer"
        },
        "fastTag": {
          "type": "string"
        },
        "codedData": {
          "type": "string"
        },
        "shortDescription": {
          "type": "string"
        },
        "styleID": {
          "$ref": "#/definitions/HeaderStyle"
        },
        "noNewLinesForHeaders": {
          "type": "boolean"
        },
        "restrictedToUsername": {
          "type": "string"
        },
        "trackingDisabled": {
          "type": "boolean"
        },
        "disablePunctuation": {
          "type": "boolean"
        },
        "synopsisOverride": {
          "type": "string"
        },
        "hasRTF": {
          "type": "boolean"
        }
      }
    },
    "SegmentType": {
      "type": "integer",
      "description": "",
      "x-enumNames": [
        "Heading",
        "Start",
        "Middle",
        "End",
        "StartEnd"
      ],
      "enum": [
        0,
        1,
        2,
        3,
        4
      ]
    },
    "SmartTextType": {
      "type": "integer",
      "description": "",
      "x-enumNames": [
        "Header",
        "Group",
        "SmartText"
      ],
      "enum": [
        1,
        2,
        3
      ]
    },
    "HeaderStyle": {
      "type": "integer",
      "description": "",
      "x-enumNames": [
        "Normal",
        "Header1",
        "Header2",
        "Header3",
        "Invisible",
        "Highlight"
      ],
      "enum": [
        0,
        1,
        2,
        3,
        99,
        -1
      ]
    },
    "SmartTextTemplate": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "templateId",
        "recordSubCategory",
        "displayOrder"
      ],
      "properties": {
        "templateId": {
          "type": "integer",
          "format": "int32"
        },
        "templateName": {
          "type": "string"
        },
        "fullText": {
          "type": "string"
        },
        "formDisplay": {
          "type": "string"
        },
        "recordSubCategory": {
          "type": "integer",
          "format": "int32"
        },
        "doctorId": {
          "type": "integer",
          "format": "int32"
        },
        "displayOrder": {
          "type": "integer"
        }
      }
    },
    "SmartTextStyleProperty": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "headerStyle",
        "fontSize",
        "indent"
      ],
      "properties": {
        "headerStyle": {
          "$ref": "#/definitions/HeaderStyle"
        },
        "fontSize": {
          "type": "number",
          "format": "double"
        },
        "fontBoldItalicsUnderline": {
          "type": "string"
        },
        "indent": {
          "type": "integer",
          "format": "int32"
        },
        "textAlignment": {
          "type": "string"
        }
      }
    },
    "APIResponseOfSmartTextTemplate": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "data": {
          "$ref": "#/definitions/SmartTextTemplate"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ProvideErrorMessage"
        }
      ]
    },
    "SmartTextTemplateDisplayOrder": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "templateId",
        "displayOrder"
      ],
      "properties": {
        "templateId": {
          "type": "integer",
          "format": "int32"
        },
        "displayOrder": {
          "type": "integer"
        }
      }
    },
    "APIResponseOfListOfSmartTextTemplateDisplayOrder": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SmartTextTemplateDisplayOrder"
          }
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ProvideErrorMessage"
        }
      ]
    },
    "APIResponseOfListOfReferenceIDDO": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ReferenceIDDO"
          }
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ProvideErrorMessage"
        }
      ]
    },
    "ReferenceIDDO": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "referenceId",
        "minValue",
        "maxValue"
      ],
      "properties": {
        "referenceId": {
          "type": "integer",
          "format": "int32"
        },
        "description": {
          "type": "string"
        },
        "units": {
          "type": "string"
        },
        "minValue": {
          "type": "number",
          "format": "double"
        },
        "maxValue": {
          "type": "number",
          "format": "double"
        },
        "range": {
          "type": "string"
        }
      }
    },
    "APIResponseOfListOfHMSLetterTemplateTagValue": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/HMSLetterTemplateTagValue"
          }
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ProvideErrorMessage"
        }
      ]
    },
    "HMSLetterTemplateTagValue": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "tag": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      }
    },
    "APIResponseOfSingle": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "data"
      ],
      "properties": {
        "data": {
          "type": "number",
          "format": "double"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ProvideErrorMessage"
        }
      ]
    },
    "APIResponseOfDouble": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "data"
      ],
      "properties": {
        "data": {
          "type": "number",
          "format": "double"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ProvideErrorMessage"
        }
      ]
    },
    "APIResponseOfIEnumerableOfRecordClassification": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/RecordClassification"
          }
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ProvideErrorMessage"
        }
      ]
    },
    "RecordClassification": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "disableOccasionOfService",
        "classId",
        "notForDistribution",
        "shouldBeBilled"
      ],
      "properties": {
        "subCategoryAdditionalDescription": {
          "type": "string"
        },
        "disableOccasionOfService": {
          "type": "boolean"
        },
        "finaliseGrp": {
          "type": "string"
        },
        "editLocked": {
          "type": "string"
        },
        "identity": {
          "type": "string"
        },
        "classId": {
          "type": "integer",
          "format": "int32"
        },
        "subCategoryDescription": {
          "type": "string"
        },
        "notForDistribution": {
          "type": "boolean"
        },
        "editAccessGroup": {
          "type": "string"
        },
        "billingGroup": {
          "type": "string"
        },
        "shouldBeBilled": {
          "type": "boolean"
        }
      }
    },
    "APIResponseOfRecordClassificationOf": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/RecordClassification"
          }
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ProvideErrorMessage"
        }
      ]
    },
    "APIResponseOfIEnumerableOfString": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ProvideErrorMessage"
        }
      ]
    },
    "AddOrUpdateCodingSelection": {
      "type": "object",
      "additionalProperties": false,
      "allOf": [
        {
          "$ref": "#/definitions/AddOrUpdateCodingSelectionParams"
        }
      ]
    },
    "AddOrUpdateCodingSelectionParams": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "patient_ID",
        "feedID"
      ],
      "properties": {
        "fieldName": {
          "type": "string"
        },
        "patient_ID": {
          "type": "integer",
          "format": "int32"
        },
        "feedID": {
          "type": "integer",
          "format": "int32"
        },
        "setWordsToFind": {
          "type": "string"
        },
        "setResultToFind": {
          "type": "string"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/BaseRequestParams"
        }
      ]
    },
    "APIResponseOfAddOrUpdateCodingSelectionResult": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "data": {
          "$ref": "#/definitions/AddOrUpdateCodingSelectionResult"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ProvideErrorMessage"
        }
      ]
    },
    "AddOrUpdateCodingSelectionResult": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "ltS_ID"
      ],
      "properties": {
        "ltS_ID": {
          "type": "integer",
          "format": "int64"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ProvideErrorMessage"
        }
      ]
    },
    "RemoveCodingSelection": {
      "type": "object",
      "additionalProperties": false,
      "allOf": [
        {
          "$ref": "#/definitions/RemoveCodingSelectionParams"
        }
      ]
    },
    "RemoveCodingSelectionParams": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "patient_ID",
        "feedID"
      ],
      "properties": {
        "fieldName": {
          "type": "string"
        },
        "patient_ID": {
          "type": "integer",
          "format": "int32"
        },
        "feedID": {
          "type": "integer",
          "format": "int32"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/BaseRequestParams"
        }
      ]
    },
    "APIResponseOfRemoveCodingSelectionResult": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "data": {
          "$ref": "#/definitions/RemoveCodingSelectionResult"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ProvideErrorMessage"
        }
      ]
    },
    "RemoveCodingSelectionResult": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "success"
      ],
      "properties": {
        "success": {
          "type": "boolean"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ProvideErrorMessage"
        }
      ]
    },
    "APIResponseOfCompanyRequestParams": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "data": {
          "$ref": "#/definitions/CompanyRequestParams"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ProvideErrorMessage"
        }
      ]
    },
    "CompanyRequestParams": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "company_ID",
        "deleted",
        "billing_Practice",
        "billing_Scheduled",
        "billing_Medicare",
        "billing_HealthFund",
        "billing_Other",
        "gapCover",
        "onlineRegistered",
        "onlineActivated",
        "requires_PracticeID"
      ],
      "properties": {
        "company_ID": {
          "type": "integer",
          "format": "int32"
        },
        "companyName": {
          "type": "string"
        },
        "companyABN": {
          "type": "string"
        },
        "companyACN": {
          "type": "string"
        },
        "companyPhone": {
          "type": "string"
        },
        "companyFax": {
          "type": "string"
        },
        "note_ID": {
          "type": "integer",
          "format": "int32"
        },
        "deleted": {
          "type": "boolean"
        },
        "deletionReason": {
          "type": "integer",
          "format": "int32"
        },
        "deletionNote": {
          "type": "integer",
          "format": "int32"
        },
        "deletionDate": {
          "type": "string",
          "format": "date-time"
        },
        "deletionUser": {
          "type": "string"
        },
        "invoiceToUse": {
          "type": "string"
        },
        "billing_Practice": {
          "type": "boolean"
        },
        "billing_Scheduled": {
          "type": "boolean"
        },
        "billing_Medicare": {
          "type": "boolean"
        },
        "billing_HealthFund": {
          "type": "boolean"
        },
        "billing_Other": {
          "type": "boolean"
        },
        "feeTable_ID": {
          "type": "integer",
          "format": "int32"
        },
        "gapCover": {
          "type": "boolean"
        },
        "coversheetPrintSet": {
          "type": "string"
        },
        "chequeBSB": {
          "type": "string"
        },
        "healthFundType": {
          "type": "string"
        },
        "onlineFundCode": {
          "type": "string"
        },
        "hL7MappingID": {
          "type": "string"
        },
        "onlineRecordUpdated": {
          "type": "string",
          "format": "date-time"
        },
        "onlineRegistered": {
          "type": "boolean"
        },
        "onlineActivated": {
          "type": "boolean"
        },
        "hmS_HealthfundReference": {
          "type": "integer",
          "format": "int32"
        },
        "feed_ID": {
          "type": "integer",
          "format": "int32"
        },
        "requires_PracticeID": {
          "type": "boolean"
        },
        "onlineContactPhone": {
          "type": "string"
        },
        "onlineChangeReport": {
          "type": "string"
        },
        "userCreated": {
          "type": "string"
        },
        "dateCreated": {
          "type": "string",
          "format": "date-time"
        },
        "userLastModified": {
          "type": "string"
        },
        "dateLastModified": {
          "type": "string",
          "format": "date-time"
        },
        "extCompany_ID": {
          "type": "string"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/BaseRequestParams"
        }
      ]
    },
    "APIResponseOfCompanyDOOf": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CompanyDO"
          }
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ProvideErrorMessage"
        }
      ]
    },
    "CompanyDO": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "company_ID"
      ],
      "properties": {
        "company_ID": {
          "type": "integer",
          "format": "int32"
        },
        "companyName": {
          "type": "string"
        },
        "healthFundType": {
          "type": "string"
        }
      }
    },
    "FindCompany": {
      "type": "object",
      "additionalProperties": false,
      "allOf": [
        {
          "$ref": "#/definitions/FindCompanyParams"
        }
      ]
    },
    "FindCompanyParams": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "companyNameToFind": {
          "type": "string"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/CorrelatableRequestParams"
        }
      ]
    },
    "APIResponseOfFindCompanyResult": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "data": {
          "$ref": "#/definitions/FindCompanyResult"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ProvideErrorMessage"
        }
      ]
    },
    "FindCompanyResult": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "billing_HealthFund",
        "billing_Medicare",
        "billing_Other",
        "billing_Practice",
        "billing_Scheduled",
        "company_ID",
        "dateCreated",
        "dateLastModified",
        "deleted",
        "deletionDate",
        "deletionNote",
        "deletionReason",
        "feed_ID",
        "feeTable_ID",
        "gapCover",
        "hmS_HealthfundReference",
        "note_id",
        "onlineActivated",
        "onlineRecordUpdated",
        "onlineRegistered",
        "requires_PracticeID"
      ],
      "properties": {
        "billing_HealthFund": {
          "type": "boolean"
        },
        "billing_Medicare": {
          "type": "boolean"
        },
        "billing_Other": {
          "type": "boolean"
        },
        "billing_Practice": {
          "type": "boolean"
        },
        "billing_Scheduled": {
          "type": "boolean"
        },
        "chequeBSB": {
          "type": "string"
        },
        "claimingMethod": {
          "type": "string"
        },
        "company_ID": {
          "type": "integer",
          "format": "int32"
        },
        "companyABN": {
          "type": "string"
        },
        "companyACN": {
          "type": "string"
        },
        "companyFax": {
          "type": "string"
        },
        "companyName": {
          "type": "string"
        },
        "companyPhone": {
          "type": "string"
        },
        "coversheetPrintSet": {
          "type": "string"
        },
        "dateCreated": {
          "type": "string",
          "format": "date-time"
        },
        "dateLastModified": {
          "type": "string",
          "format": "date-time"
        },
        "deleted": {
          "type": "boolean"
        },
        "deletionDate": {
          "type": "string",
          "format": "date-time"
        },
        "deletionNote": {
          "type": "integer",
          "format": "int32"
        },
        "deletionReason": {
          "type": "integer",
          "format": "int32"
        },
        "deletionUser": {
          "type": "string"
        },
        "extCompany_ID": {
          "type": "string"
        },
        "feed_ID": {
          "type": "integer",
          "format": "int32"
        },
        "feeTable_ID": {
          "type": "integer",
          "format": "int32"
        },
        "gapCover": {
          "type": "boolean"
        },
        "healthFundType": {
          "type": "string"
        },
        "hL7MappingID": {
          "type": "string"
        },
        "hmS_HealthfundReference": {
          "type": "integer",
          "format": "int32"
        },
        "invoiceToUse": {
          "type": "string"
        },
        "note_id": {
          "type": "integer",
          "format": "int32"
        },
        "onlineActivated": {
          "type": "boolean"
        },
        "onlineChangeReport": {
          "type": "string"
        },
        "onlineContactPhone": {
          "type": "string"
        },
        "onlineFundCode": {
          "type": "string"
        },
        "onlineRecordUpdated": {
          "type": "string",
          "format": "date-time"
        },
        "onlineRegistered": {
          "type": "boolean"
        },
        "requires_PracticeID": {
          "type": "boolean"
        },
        "userCreated": {
          "type": "string"
        },
        "userLastModified": {
          "type": "string"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ProvideErrorMessage"
        }
      ]
    },
    "APIResponseOfListOfCompanyDO": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CompanyDO"
          }
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ProvideErrorMessage"
        }
      ]
    },
    "APIResponseOfIEnumerableOfContractFeeDO": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ContractFeeDO"
          }
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ProvideErrorMessage"
        }
      ]
    },
    "ContractFeeDO": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "contractDetailsId",
        "contractId",
        "feeFull",
        "feeOne",
        "feeTwo",
        "feeThreePlus",
        "accomIncluded",
        "theatreIncluded",
        "caseFee",
        "procFee"
      ],
      "properties": {
        "contractDetailsId": {
          "type": "integer",
          "format": "int32"
        },
        "contractId": {
          "type": "integer",
          "format": "int32"
        },
        "category": {
          "type": "string"
        },
        "categoryDesc": {
          "type": "string"
        },
        "stayType": {
          "type": "string"
        },
        "itemNumber": {
          "type": "string"
        },
        "fundCode": {
          "type": "string"
        },
        "feeFull": {
          "type": "number",
          "format": "decimal"
        },
        "feeOne": {
          "type": "number",
          "format": "decimal"
        },
        "feeTwo": {
          "type": "number",
          "format": "decimal"
        },
        "feeThreePlus": {
          "type": "number",
          "format": "decimal"
        },
        "accomIncluded": {
          "type": "boolean"
        },
        "theatreIncluded": {
          "type": "boolean"
        },
        "billingGroup": {
          "type": "string"
        },
        "caseFee": {
          "type": "number",
          "format": "decimal"
        },
        "procFee": {
          "type": "number",
          "format": "decimal"
        }
      }
    },
    "ContractsSearch": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "validContractsOnly": {
          "type": "boolean"
        },
        "companyId": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "APIResponseOfIEnumerableOfContractDO": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ContractDO"
          }
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ProvideErrorMessage"
        }
      ]
    },
    "ContractDO": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "contractId",
        "companyId",
        "proc1",
        "proc2",
        "proc3",
        "proc4plus",
        "includeMedicalServicesTB"
      ],
      "properties": {
        "contractId": {
          "type": "integer",
          "format": "int32"
        },
        "companyId": {
          "type": "integer",
          "format": "int32"
        },
        "contractName": {
          "type": "string"
        },
        "validityStart": {
          "type": "string",
          "format": "date-time"
        },
        "validityEnd": {
          "type": "string",
          "format": "date-time"
        },
        "proc1": {
          "type": "number",
          "format": "double"
        },
        "proc2": {
          "type": "number",
          "format": "double"
        },
        "proc3": {
          "type": "number",
          "format": "double"
        },
        "proc4plus": {
          "type": "number",
          "format": "double"
        },
        "contractEffectiveFrom": {
          "type": "string"
        },
        "drgVersion": {
          "type": "string"
        },
        "includeMedicalServicesTB": {
          "type": "boolean"
        },
        "company": {
          "$ref": "#/definitions/CompanyDO"
        },
        "contractFees": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ContractFeeDO"
          }
        }
      }
    },
    "APIResponseOfContractDO": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "data": {
          "$ref": "#/definitions/ContractDO"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ProvideErrorMessage"
        }
      ]
    },
    "APIResponseOfListOfDashboardDO": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/DashboardDO"
          }
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ProvideErrorMessage"
        }
      ]
    },
    "DashboardDO": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "id",
        "systemDefault",
        "numRows",
        "numColumns",
        "numUsers"
      ],
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "dashboardName": {
          "type": "string"
        },
        "systemDefault": {
          "type": "boolean"
        },
        "numRows": {
          "type": "integer",
          "format": "int32"
        },
        "numColumns": {
          "type": "integer",
          "format": "int32"
        },
        "dashboardContents": {
          "type": "array",
          "items": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "widgetConfigurations": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/WidgetConfiguration"
          }
        },
        "roles": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/RoleDO"
          }
        },
        "numUsers": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "WidgetConfiguration": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "rabbitTopic": {
          "type": "string"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/WidgetOptionDO"
        }
      ]
    },
    "WidgetOptionDO": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "widget": {
          "type": "string"
        },
        "widgetParameters": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "RoleDO": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "roleId"
      ],
      "properties": {
        "roleId": {
          "type": "integer",
          "format": "int32"
        },
        "roleName": {
          "type": "string"
        },
        "dashboardId": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "APIResponseOfDashboardDO": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "data": {
          "$ref": "#/definitions/DashboardDO"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ProvideErrorMessage"
        }
      ]
    },
    "APIResponseOfGetDepartmentsResult": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "data": {
          "$ref": "#/definitions/GetDepartmentsResult"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ProvideErrorMessage"
        }
      ]
    },
    "GetDepartmentsResult": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "results": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/DepartmentDataItem"
          }
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ProvideErrorMessage"
        }
      ]
    },
    "DepartmentDataItem": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "depT_ID",
        "depT_FeedID"
      ],
      "properties": {
        "depT_ID": {
          "type": "integer",
          "format": "int64"
        },
        "depT_Name": {
          "type": "string"
        },
        "depT_FeedID": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "ImportFile": {
      "type": "object",
      "additionalProperties": false,
      "allOf": [
        {
          "$ref": "#/definitions/ImportFileRequest"
        }
      ]
    },
    "ImportFileRequest": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "configurationName": {
          "type": "string"
        },
        "filename": {
          "type": "string"
        },
        "fileData": {
          "type": "string",
          "format": "byte"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/CorrelatableRequestParams"
        }
      ]
    },
    "APIResponseOfImportFileResponse": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "data": {
          "$ref": "#/definitions/ImportFileResponse"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ProvideErrorMessage"
        }
      ]
    },
    "ImportFileResponse": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "success"
      ],
      "properties": {
        "success": {
          "type": "boolean"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ProvideErrorMessage"
        }
      ]
    },
    "GetInternalDoctorIDFromProviderNumberRequest": {
      "type": "object",
      "additionalProperties": false,
      "allOf": [
        {
          "$ref": "#/definitions/GetInternalDoctorIDFromProviderNumberParams"
        }
      ]
    },
    "GetInternalDoctorIDFromProviderNumberParams": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "providerNumber": {
          "type": "string"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/CorrelatableRequestParams"
        }
      ]
    },
    "APIResponseOfGetInternalDoctorIDFromProviderNumberResult": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "data": {
          "$ref": "#/definitions/GetInternalDoctorIDFromProviderNumberResult"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ProvideErrorMessage"
        }
      ]
    },
    "GetInternalDoctorIDFromProviderNumberResult": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "doctor_ID"
      ],
      "properties": {
        "doctor_ID": {
          "type": "integer",
          "format": "int32"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ProvideErrorMessage"
        }
      ]
    },
    "APIResponseOfListOfDoctorDO": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/DoctorDO"
          }
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ProvideErrorMessage"
        }
      ]
    },
    "DoctorDO": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "rosterHours",
        "numSessions"
      ],
      "properties": {
        "displayColour": {
          "type": "string"
        },
        "rosterHours": {
          "type": "number",
          "format": "double"
        },
        "numSessions": {
          "type": "integer",
          "format": "int32"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/DoctorListItem"
        }
      ]
    },
    "DoctorListItem": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "doctorId",
        "defaultLocation"
      ],
      "properties": {
        "doctorId": {
          "type": "integer",
          "format": "int32"
        },
        "doctorName": {
          "type": "string"
        },
        "defaultLocation": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "APIResponseOfListOfDoctorListItem": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/DoctorListItem"
          }
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ProvideErrorMessage"
        }
      ]
    },
    "FindDoctor": {
      "type": "object",
      "additionalProperties": false,
      "allOf": [
        {
          "$ref": "#/definitions/FindDoctorParams"
        }
      ]
    },
    "FindDoctorParams": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "doctor_IDToFind"
      ],
      "properties": {
        "usernameToFind": {
          "type": "string"
        },
        "doctor_IDToFind": {
          "type": "integer",
          "format": "int64"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/CorrelatableRequestParams"
        }
      ]
    },
    "APIResponseOfFindDoctorResult": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "data": {
          "$ref": "#/definitions/FindDoctorResult"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ProvideErrorMessage"
        }
      ]
    },
    "FindDoctorResult": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "assistantOnly",
        "authorisePrescriptionsFromOtherUsers",
        "dateCreated",
        "dateLastModified",
        "defaultLocation",
        "deleted",
        "deletionDate",
        "deletionNote",
        "deletionReason",
        "doctor_ID",
        "drNoByFund",
        "drType",
        "enablePatientArrivedAlert",
        "indemnityCoverAmount",
        "indemnityDateFrom",
        "indemnityDateTo",
        "isVisible",
        "mailingList",
        "noBillingDoctor",
        "note_id",
        "referralCnt",
        "sendDoctorAsLicensee",
        "showDoctorABNAfterPrivateCompanyName",
        "showDoctorCredentialsOnHeaders",
        "showDoctorNameOnHeaders",
        "showLocationAddressOnHeaders",
        "specialty",
        "usePrivateCompanyABN",
        "vocational"
      ],
      "properties": {
        "accountNumber": {
          "type": "string"
        },
        "assistantOnly": {
          "type": "boolean"
        },
        "authorisePrescriptionsFromOtherUsers": {
          "type": "boolean"
        },
        "bank": {
          "type": "string"
        },
        "bankAccName": {
          "type": "string"
        },
        "bankAccNo": {
          "type": "string"
        },
        "bankBSB": {
          "type": "string"
        },
        "bsb": {
          "type": "string"
        },
        "dateCreated": {
          "type": "string",
          "format": "date-time"
        },
        "dateLastModified": {
          "type": "string",
          "format": "date-time"
        },
        "defaultLocation": {
          "type": "integer",
          "format": "int32"
        },
        "deleted": {
          "type": "boolean"
        },
        "deletionDate": {
          "type": "string",
          "format": "date-time"
        },
        "deletionNote": {
          "type": "integer",
          "format": "int32"
        },
        "deletionReason": {
          "type": "integer",
          "format": "int32"
        },
        "deletionUser": {
          "type": "string"
        },
        "diaryname": {
          "type": "string"
        },
        "doctor_ID": {
          "type": "integer",
          "format": "int32"
        },
        "doctorLogo": {
          "type": "string"
        },
        "drNoByFund": {
          "type": "boolean"
        },
        "drType": {
          "type": "integer",
          "format": "int32"
        },
        "email": {
          "type": "string"
        },
        "enablePatientArrivedAlert": {
          "type": "integer",
          "format": "byte"
        },
        "firstname": {
          "type": "string"
        },
        "homeFax": {
          "type": "string"
        },
        "homePhone": {
          "type": "string"
        },
        "indemnityCertificateNo": {
          "type": "string"
        },
        "indemnityCoverAmount": {
          "type": "number",
          "format": "decimal"
        },
        "indemnityDateFrom": {
          "type": "string",
          "format": "date-time"
        },
        "indemnityDateTo": {
          "type": "string",
          "format": "date-time"
        },
        "indemnityInsurer": {
          "type": "string"
        },
        "indemnityPolicyNo": {
          "type": "string"
        },
        "isVisible": {
          "type": "boolean"
        },
        "letterSignature_L1": {
          "type": "string"
        },
        "letterSignature_L2": {
          "type": "string"
        },
        "logoSelector": {
          "type": "string"
        },
        "mailingList": {
          "type": "integer",
          "format": "int32"
        },
        "mobile": {
          "type": "string"
        },
        "mobileBillingGUID": {
          "type": "string"
        },
        "noBillingDoctor": {
          "type": "boolean"
        },
        "note_id": {
          "type": "integer",
          "format": "int32"
        },
        "prescriberNo": {
          "type": "string"
        },
        "privCompany": {
          "type": "string"
        },
        "privCompanyABN": {
          "type": "string"
        },
        "privCompanyACN": {
          "type": "string"
        },
        "profAssoc": {
          "type": "string"
        },
        "profAssocClass": {
          "type": "string"
        },
        "profAssocNumber": {
          "type": "string"
        },
        "professionalQualifications": {
          "type": "string"
        },
        "professionalTitle": {
          "type": "string"
        },
        "referralCnt": {
          "type": "integer",
          "format": "int32"
        },
        "salutation": {
          "type": "string"
        },
        "sendDoctorAsLicensee": {
          "type": "boolean"
        },
        "serviceTypeCodeDVA": {
          "type": "string"
        },
        "serviceTypeCodeMedicare": {
          "type": "string"
        },
        "showCompanyNameType": {
          "type": "string"
        },
        "showDoctorABNAfterPrivateCompanyName": {
          "type": "boolean"
        },
        "showDoctorCredentialsOnHeaders": {
          "type": "boolean"
        },
        "showDoctorNameOnHeaders": {
          "type": "boolean"
        },
        "showLocationAddressOnHeaders": {
          "type": "boolean"
        },
        "specialty": {
          "type": "integer",
          "format": "int32"
        },
        "surname": {
          "type": "string"
        },
        "title": {
          "type": "string"
        },
        "usePrivateCompanyABN": {
          "type": "boolean"
        },
        "userCreated": {
          "type": "string"
        },
        "userLastModified": {
          "type": "string"
        },
        "username": {
          "type": "string"
        },
        "vocational": {
          "type": "boolean"
        },
        "workFax": {
          "type": "string"
        },
        "workPhone": {
          "type": "string"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ProvideErrorMessage"
        }
      ]
    },
    "APIResponseOfEquipmentRosterResource": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "data": {
          "$ref": "#/definitions/EquipmentRosterResource"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ProvideErrorMessage"
        }
      ]
    },
    "EquipmentRosterResource": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "equipmentRosters": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/EquipmentRosterDO"
          }
        },
        "equipmentResources": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResourceDO"
          }
        }
      }
    },
    "EquipmentRosterDO": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "equipmentRosterId",
        "resourceId",
        "locationId",
        "roomId",
        "startDate",
        "endDate",
        "allDay",
        "dateLastModified"
      ],
      "properties": {
        "equipmentRosterId": {
          "type": "integer",
          "format": "int32"
        },
        "resourceId": {
          "type": "integer",
          "format": "int32"
        },
        "resourceName": {
          "type": "string"
        },
        "locationId": {
          "type": "integer",
          "format": "int32"
        },
        "roomId": {
          "type": "integer",
          "format": "int32"
        },
        "startDate": {
          "type": "string",
          "format": "date-time"
        },
        "endDate": {
          "type": "string",
          "format": "date-time"
        },
        "allDay": {
          "type": "boolean"
        },
        "dateLastModified": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "ResourceDO": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "resourceId"
      ],
      "properties": {
        "resourceId": {
          "type": "integer",
          "format": "int32"
        },
        "resourceName": {
          "type": "string"
        },
        "colour": {
          "type": "string"
        }
      }
    },
    "APIResponseOfSaveEquipmentRosterResult": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "data": {
          "$ref": "#/definitions/SaveEquipmentRosterResult"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ProvideErrorMessage"
        }
      ]
    },
    "SaveEquipmentRosterResult": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "equipmentRoster": {
          "$ref": "#/definitions/EquipmentRosterDO"
        },
        "equipmentResource": {
          "$ref": "#/definitions/ResourceDO"
        }
      }
    },
    "APIResponseOfListOfResourceDO": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResourceDO"
          }
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ProvideErrorMessage"
        }
      ]
    },
    "GroupDO": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "groupName": {
          "type": "string"
        }
      }
    },
    "APIResponseOfListOfHMSPropertyDO": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/HMSPropertyDO"
          }
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ProvideErrorMessage"
        }
      ]
    },
    "HMSPropertyDO": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "propertyId",
        "userManaged"
      ],
      "properties": {
        "propertyId": {
          "type": "integer",
          "format": "int32"
        },
        "userName": {
          "type": "string"
        },
        "groupName": {
          "type": "string"
        },
        "propName": {
          "type": "string"
        },
        "value": {
          "type": "string"
        },
        "dataType": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "userManaged": {
          "type": "boolean"
        }
      }
    },
    "APIResponseOfListOfSmartTextStyleProperty": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SmartTextStyleProperty"
          }
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ProvideErrorMessage"
        }
      ]
    },
    "APIResponseOfStringOf": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ProvideErrorMessage"
        }
      ]
    },
    "APIResponseOfIEnumerableOfImageTemplateDO": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ImageTemplateDO"
          }
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ProvideErrorMessage"
        }
      ]
    },
    "ImageTemplateDO": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "imageTemplateId",
        "displayOrder"
      ],
      "properties": {
        "imageTemplateId": {
          "type": "integer",
          "format": "int32"
        },
        "description": {
          "type": "string"
        },
        "fileName": {
          "type": "string"
        },
        "displayOrder": {
          "type": "integer",
          "format": "byte"
        }
      }
    },
    "APIResponseOfImageTemplateDOOf": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ImageTemplateDO"
          }
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ProvideErrorMessage"
        }
      ]
    },
    "GetAllIndications": {
      "type": "object",
      "additionalProperties": false,
      "allOf": [
        {
          "$ref": "#/definitions/GetAllIndicationsParams"
        }
      ]
    },
    "GetAllIndicationsParams": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "departmentId"
      ],
      "properties": {
        "departmentId": {
          "type": "integer",
          "format": "int64"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/CorrelatableRequestParams"
        }
      ]
    },
    "APIResponseOfGetAllIndicationsResult": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "data": {
          "$ref": "#/definitions/GetAllIndicationsResult"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ProvideErrorMessage"
        }
      ]
    },
    "GetAllIndicationsResult": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "results": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Indication"
          }
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ProvideErrorMessage"
        }
      ]
    },
    "Indication": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "indication_ID"
      ],
      "properties": {
        "indication_ID": {
          "type": "integer",
          "format": "int32"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "GetAllInternalDoctorsParams": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "givennamesContains": {
          "type": "string"
        },
        "surnameContains": {
          "type": "string"
        },
        "providerNumberContains": {
          "type": "string"
        }
      }
    },
    "APIResponseOfGetAllInternalDoctorsResult": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "data": {
          "$ref": "#/definitions/GetAllInternalDoctorsResult"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ProvideErrorMessage"
        }
      ]
    },
    "GetAllInternalDoctorsResult": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "results": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/InternalDoctorInfo"
          }
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ProvideErrorMessage"
        }
      ]
    },
    "InternalDoctorInfo": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "doctorId"
      ],
      "properties": {
        "doctorId": {
          "type": "integer",
          "format": "int32"
        },
        "displayname": {
          "type": "string"
        }
      }
    },
    "APIResponseOfFeeItemNumberOf": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/FeeItemNumber"
          }
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ProvideErrorMessage"
        }
      ]
    },
    "FeeItemNumber": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "itemNumber": {
          "type": "string"
        },
        "itemNumberDisplay": {
          "type": "string"
        }
      }
    },
    "APIResponseOfAllLicensedFeatureDataDO": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "data": {
          "$ref": "#/definitions/AllLicensedFeatureDataDO"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ProvideErrorMessage"
        }
      ]
    },
    "AllLicensedFeatureDataDO": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "licensedFeatures": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/LicensedFeatureDO"
          }
        },
        "allBookingTypes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SelectedBookingTypeDO"
          }
        },
        "allLocationRooms": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SelectedRoomDO"
          }
        },
        "allModalities": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ModalityDO"
          }
        }
      }
    },
    "LicensedFeatureDO": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "featureKey",
        "quantity",
        "hasSettings",
        "hasLocationRooms"
      ],
      "properties": {
        "featureName": {
          "type": "string"
        },
        "featureKey": {
          "$ref": "#/definitions/HealthTrackFeature"
        },
        "feature": {
          "type": "string"
        },
        "quantity": {
          "type": "integer",
          "format": "int32"
        },
        "featureData": {},
        "hasSettings": {
          "type": "boolean"
        },
        "hasLocationRooms": {
          "type": "boolean"
        }
      }
    },
    "HealthTrackFeature": {
      "type": "integer",
      "description": "",
      "x-enumNames": [
        "distributionlist",
        "inboundrsd",
        "budgeting",
        "lookuptree",
        "exchangesync",
        "DiarySync",
        "orderrequest",
        "documentworkflow",
        "bookingstatusmonitor",
        "triage",
        "clinicalworkflow",
        "hepatology",
        "departments",
        "metadataexport",
        "xcelerareports",
        "xcelerawebviewer",
        "xcelerasr",
        "siemensreports",
        "siemensviewer",
        "siemenssrdata",
        "pathology",
        "pathologycasesensitiveloinc",
        "users",
        "maintenance",
        "dwls",
        "bioecg",
        "cardiacmri",
        "synapsesrdata",
        "dq_echocardiogram_reporting",
        "dq_wwmc_clinicalrecordsdetail",
        "admission_manager",
        "inr_tracking",
        "Meds",
        "mims_cds_interactions",
        "batchreportingmanager",
        "sync",
        "mru",
        "weight",
        "transaction_services",
        "dicom_medicalconnections",
        "dsd",
        "pi",
        "dsd_open",
        "mobile_billing",
        "inv_scan",
        "readonly_mode",
        "xcelera_custom_pdf",
        "maclab",
        "omwls",
        "prosolvView",
        "geechopac",
        "oec_ihc"
      ],
      "enum": [
        1,
        2,
        3,
        4,
        5,
        6,
        7,
        8,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        16,
        17,
        18,
        19,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        34,
        35,
        36,
        37,
        38,
        39,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        49,
        50,
        51,
        52
      ]
    },
    "SelectedBookingTypeDO": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "selected"
      ],
      "properties": {
        "bookingType": {
          "type": "string"
        },
        "longName": {
          "type": "string"
        },
        "selected": {
          "type": "boolean"
        }
      }
    },
    "SelectedRoomDO": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "selected"
      ],
      "properties": {
        "key": {
          "type": "string"
        },
        "location": {
          "type": "string"
        },
        "room": {
          "type": "string"
        },
        "selected": {
          "type": "boolean"
        }
      }
    },
    "ModalityDO": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "modality": {
          "type": "string"
        },
        "displayName": {
          "type": "string"
        }
      }
    },
    "APIResponseOfLicensedFeatureDO": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "data": {
          "$ref": "#/definitions/LicensedFeatureDO"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ProvideErrorMessage"
        }
      ]
    },
    "WorkListDeviceDO": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "dev_Seq",
        "enabled",
        "port",
        "hasSettings",
        "deviceMode",
        "mrnPreference",
        "mrnRequired",
        "preloadDays",
        "clearingSettings"
      ],
      "properties": {
        "id": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "dev_Seq": {
          "type": "integer"
        },
        "name": {
          "type": "string"
        },
        "enabled": {
          "type": "boolean"
        },
        "ipAddress": {
          "type": "string"
        },
        "port": {
          "type": "integer",
          "format": "int32"
        },
        "make": {
          "type": "string"
        },
        "model": {
          "type": "string"
        },
        "serialNumber": {
          "type": "string"
        },
        "hasSettings": {
          "type": "boolean"
        },
        "selectedLocationRooms": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SelectedRoomDO"
          }
        },
        "selectedBookingStatus": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SelectedBookingStatusDO"
          }
        },
        "selectedBookingTypes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SelectedBookingTypeDO"
          }
        },
        "deviceMode": {
          "$ref": "#/definitions/DeviceMode"
        },
        "modality": {
          "type": "string"
        },
        "mrnPreference": {
          "$ref": "#/definitions/MRNPreference"
        },
        "mrnRequired": {
          "type": "boolean"
        },
        "preloadDays": {
          "type": "integer"
        },
        "nameLabel": {
          "type": "string"
        },
        "clearingSettings": {
          "type": "boolean"
        }
      }
    },
    "SelectedBookingStatusDO": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "selected"
      ],
      "properties": {
        "bookingStatus": {
          "type": "string"
        },
        "selected": {
          "type": "boolean"
        }
      }
    },
    "DeviceMode": {
      "type": "integer",
      "description": "",
      "x-enumNames": [
        "Live",
        "Preload"
      ],
      "enum": [
        0,
        1
      ]
    },
    "MRNPreference": {
      "type": "integer",
      "description": "",
      "x-enumNames": [
        "HealthTrackPatientID",
        "PrimaryMRN",
        "LocationMRN"
      ],
      "enum": [
        0,
        1,
        2
      ]
    },
    "APIResponseOfWorkListDeviceDO": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "data": {
          "$ref": "#/definitions/WorkListDeviceDO"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ProvideErrorMessage"
        }
      ]
    },
    "APIResponseOfIEnumerableOfDicomWorklistItemDO": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/DicomWorklistItemDO"
          }
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ProvideErrorMessage"
        }
      ]
    },
    "DicomWorklistItemDO": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "procStepID": {
          "type": "string"
        },
        "procStepDesc": {
          "type": "string"
        },
        "aE_Title": {
          "type": "string"
        },
        "procStepStartDate": {
          "type": "string"
        },
        "procStepStartTime": {
          "type": "string"
        },
        "modality": {
          "type": "string"
        },
        "perfPhysName": {
          "type": "string"
        },
        "reqProc_ID": {
          "type": "string"
        },
        "reqProcDesc": {
          "type": "string"
        },
        "studyInst_UID": {
          "type": "string"
        },
        "accNumber": {
          "type": "string"
        },
        "reqPhysician": {
          "type": "string"
        },
        "refPhysName": {
          "type": "string"
        },
        "patient_ID": {
          "type": "string"
        },
        "patientName": {
          "type": "string"
        },
        "patientDOB": {
          "type": "string"
        },
        "patientSex": {
          "type": "string"
        }
      }
    },
    "GetAllListItems": {
      "type": "object",
      "additionalProperties": false,
      "allOf": [
        {
          "$ref": "#/definitions/GetAllListItemsParams"
        }
      ]
    },
    "GetAllListItemsParams": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "includeDeleted"
      ],
      "properties": {
        "listGroup": {
          "type": "string"
        },
        "listName": {
          "type": "string"
        },
        "listToQuery": {
          "$ref": "#/definitions/ListToQuery"
        },
        "includeDeleted": {
          "type": "boolean"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/CorrelatableRequestParams"
        }
      ]
    },
    "ListToQuery": {
      "type": "integer",
      "description": "",
      "x-enumNames": [
        "HMS_List",
        "List_Admission",
        "List_Core",
        "List_Cardio",
        "List_Clinical",
        "List_Hepatology",
        "List_Weight"
      ],
      "enum": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ]
    },
    "APIResponseOfGetAllListItemsResult": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "data": {
          "$ref": "#/definitions/GetAllListItemsResult"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ProvideErrorMessage"
        }
      ]
    },
    "GetAllListItemsResult": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "results": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ListItemDefinition"
          }
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ProvideErrorMessage"
        }
      ]
    },
    "ListItemDefinition": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "list_ID",
        "itemID",
        "deleted",
        "displayOrder"
      ],
      "properties": {
        "list_ID": {
          "type": "integer",
          "format": "int32"
        },
        "listGroup": {
          "type": "string"
        },
        "listName": {
          "type": "string"
        },
        "itemID": {
          "type": "integer",
          "format": "int32"
        },
        "itemValue": {
          "type": "string"
        },
        "deleted": {
          "type": "boolean"
        },
        "displayOrder": {
          "type": "integer",
          "format": "int32"
        },
        "additionalNotesOrDescription": {
          "type": "string"
        },
        "comment": {
          "type": "string"
        }
      }
    },
    "ListDefDO": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "listTable": {
          "type": "string"
        },
        "listGroup": {
          "type": "string"
        },
        "listName": {
          "type": "string"
        }
      }
    },
    "APIResponseOfListOfListDO": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ListDO"
          }
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ProvideErrorMessage"
        }
      ]
    },
    "ListDO": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "listDef": {
          "$ref": "#/definitions/ListDefDO"
        },
        "listItems": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ListItemDO"
          }
        }
      }
    },
    "ListItemDO": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "itemID"
      ],
      "properties": {
        "itemID": {
          "type": "integer",
          "format": "int32"
        },
        "itemValue": {
          "type": "string"
        },
        "additionalNotes": {
          "type": "string"
        }
      }
    },
    "GetAllLocationParams": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "nameStartsWith": {
          "type": "string"
        }
      }
    },
    "APIResponseOfGetAllLocationResult": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "data": {
          "$ref": "#/definitions/GetAllLocationResult"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ProvideErrorMessage"
        }
      ]
    },
    "GetAllLocationResult": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "results": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/LocationInfo"
          }
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ProvideErrorMessage"
        }
      ]
    },
    "LocationInfo": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "locationId"
      ],
      "properties": {
        "locationId": {
          "type": "integer",
          "format": "int32"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "APIResponseOfLocationRoomsResult": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "data": {
          "$ref": "#/definitions/LocationRoomsResult"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ProvideErrorMessage"
        }
      ]
    },
    "LocationRoomsResult": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "rooms": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/RoomDO"
          }
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ProvideErrorMessage"
        }
      ]
    },
    "RoomDO": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "locationId",
        "roomId"
      ],
      "properties": {
        "locationId": {
          "type": "integer",
          "format": "int32"
        },
        "roomId": {
          "type": "integer",
          "format": "int32"
        },
        "roomName": {
          "type": "string"
        },
        "roomAvailabilities": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/RoomAvailable"
          }
        }
      }
    },
    "RoomAvailable": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "weekDayId",
        "openHours",
        "openMinutes",
        "durationMinutes",
        "closeHours",
        "closeMinutes"
      ],
      "properties": {
        "weekDayId": {
          "type": "integer",
          "format": "int32"
        },
        "openHours": {
          "type": "integer",
          "format": "int32"
        },
        "openMinutes": {
          "type": "integer",
          "format": "int32"
        },
        "durationMinutes": {
          "type": "integer",
          "format": "int32"
        },
        "closeHours": {
          "type": "integer",
          "format": "int32"
        },
        "closeMinutes": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "APIResponseOfListOfLocationRoomDO": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/LocationRoomDO"
          }
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ProvideErrorMessage"
        }
      ]
    },
    "LocationRoomDO": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "locationId",
        "roomId"
      ],
      "properties": {
        "locationId": {
          "type": "integer",
          "format": "int32"
        },
        "locationName": {
          "type": "string"
        },
        "roomId": {
          "type": "integer",
          "format": "int32"
        },
        "roomName": {
          "type": "string"
        },
        "displayName": {
          "type": "string"
        }
      }
    },
    "APIResponseOfListOfLocationInfo": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/LocationInfo"
          }
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ProvideErrorMessage"
        }
      ]
    },
    "ClientLogEvent": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "level"
      ],
      "properties": {
        "level": {
          "$ref": "#/definitions/LogEventLevel"
        },
        "message": {
          "type": "string"
        },
        "correlationID": {
          "type": "string"
        },
        "application": {
          "type": "string"
        }
      }
    },
    "LogEventLevel": {
      "type": "integer",
      "description": "Specifies the meaning and relative importance of a log event.",
      "x-enumNames": [
        "Verbose",
        "Debug",
        "Information",
        "Warning",
        "Error",
        "Fatal"
      ],
      "enum": [
        0,
        1,
        2,
        3,
        4,
        5
      ]
    },
    "AddOrUpdateResultsMapping_LungFunctionDataRaw": {
      "type": "object",
      "additionalProperties": false,
      "allOf": [
        {
          "$ref": "#/definitions/AddOrUpdateResultsMapping_LungFunctionDataRawParams"
        }
      ]
    },
    "AddOrUpdateResultsMapping_LungFunctionDataRawParams": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "id"
      ],
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "dateFileImported": {
          "type": "string",
          "format": "date-time"
        },
        "dob": {
          "type": "string",
          "format": "date-time"
        },
        "externalId": {
          "type": "string"
        },
        "filename": {
          "type": "string"
        },
        "firstName": {
          "type": "string"
        },
        "lastName": {
          "type": "string"
        },
        "processed": {
          "type": "boolean"
        },
        "tests": {
          "type": "string"
        },
        "visitDateLocalTime": {
          "type": "string",
          "format": "date-time"
        },
        "zippedXMLFileContents": {
          "type": "string",
          "format": "byte"
        },
        "stringFileContents": {
          "type": "string"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/BaseRequestParams"
        }
      ]
    },
    "APIResponseOfAddOrUpdateResultsMapping_LungFunctionDataRawResult": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "data": {
          "$ref": "#/definitions/AddOrUpdateResultsMapping_LungFunctionDataRawResult"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ProvideErrorMessage"
        }
      ]
    },
    "AddOrUpdateResultsMapping_LungFunctionDataRawResult": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "iD_Number"
      ],
      "properties": {
        "id": {
          "type": "string"
        },
        "iD_Number": {
          "type": "integer",
          "format": "int64"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ProvideErrorMessage"
        }
      ]
    },
    "AddOrUpdateNote": {
      "type": "object",
      "additionalProperties": false,
      "allOf": [
        {
          "$ref": "#/definitions/AddOrUpdateNoteParams"
        }
      ]
    },
    "AddOrUpdateNoteParams": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "note_ID",
        "archive"
      ],
      "properties": {
        "note_ID": {
          "type": "integer",
          "format": "int32"
        },
        "noteText": {
          "type": "string"
        },
        "noteAttribute": {
          "type": "string"
        },
        "archive": {
          "type": "boolean"
        },
        "userCreated": {
          "type": "string"
        },
        "dateLastModified": {
          "type": "string",
          "format": "date-time"
        },
        "userLastModified": {
          "type": "string"
        },
        "dateCreated": {
          "type": "string",
          "format": "date-time"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/BaseRequestParams"
        }
      ]
    },
    "APIResponseOfAddOrUpdateNoteResult": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "data": {
          "$ref": "#/definitions/AddOrUpdateNoteResult"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ProvideErrorMessage"
        }
      ]
    },
    "AddOrUpdateNoteResult": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "note_ID"
      ],
      "properties": {
        "note_ID": {
          "type": "integer",
          "format": "int32"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ProvideErrorMessage"
        }
      ]
    },
    "APIResponseOfListOfNZBillingFeeTableDO": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/NZBillingFeeTableDO"
          }
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ProvideErrorMessage"
        }
      ]
    },
    "NZBillingFeeTableDO": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "feeTable_ID",
        "feeTableEffective",
        "feeTableUpdated",
        "userManaged"
      ],
      "properties": {
        "feeTable_ID": {
          "type": "number",
          "format": "double"
        },
        "feeTableName": {
          "type": "string"
        },
        "feeTableEffective": {
          "type": "string",
          "format": "date-time"
        },
        "feeTableUpdated": {
          "type": "string",
          "format": "date-time"
        },
        "userManaged": {
          "type": "boolean"
        },
        "userLastModified": {
          "type": "string"
        }
      }
    },
    "APIResponseOfNZBillingFeeTableDO": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "data": {
          "$ref": "#/definitions/NZBillingFeeTableDO"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ProvideErrorMessage"
        }
      ]
    },
    "APIResponseOfListOfString": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ProvideErrorMessage"
        }
      ]
    },
    "APIResponseOfListOfNZBillingFeeDO": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/NZBillingFeeDO"
          }
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ProvideErrorMessage"
        }
      ]
    },
    "NZBillingFeeDO": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "feeTable_ID",
        "feeInPatient",
        "feePercentInPatient",
        "feeOutPatient",
        "feePercentOutPatient"
      ],
      "properties": {
        "feeTable_ID": {
          "type": "number",
          "format": "double"
        },
        "itemNum": {
          "type": "string"
        },
        "feeInPatient": {
          "type": "number",
          "format": "double"
        },
        "feePercentInPatient": {
          "type": "number",
          "format": "double"
        },
        "feeOutPatient": {
          "type": "number",
          "format": "double"
        },
        "feePercentOutPatient": {
          "type": "number",
          "format": "double"
        },
        "amaCode": {
          "type": "string"
        },
        "healthFundCode": {
          "type": "string"
        }
      }
    },
    "APIResponseOfNZBillingFeeDO": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "data": {
          "$ref": "#/definitions/NZBillingFeeDO"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ProvideErrorMessage"
        }
      ]
    },
    "OS_EntryParams": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "oS_ID",
        "patient_ID",
        "dateCreated",
        "lastUpdated",
        "referenceDate"
      ],
      "properties": {
        "oS_ID": {
          "type": "integer",
          "format": "int64"
        },
        "source": {
          "type": "string"
        },
        "patient_ID": {
          "type": "integer",
          "format": "int32"
        },
        "oS_Status": {
          "type": "string"
        },
        "dateCreated": {
          "type": "string",
          "format": "date-time"
        },
        "userCreated": {
          "type": "string"
        },
        "oS_Description": {
          "type": "string"
        },
        "lastUpdated": {
          "type": "string",
          "format": "date-time"
        },
        "referenceDate": {
          "type": "string",
          "format": "date-time"
        },
        "location_ID": {
          "type": "integer",
          "format": "int32"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/BaseRequestParams"
        }
      ]
    },
    "OS_MemberParams": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "oS_Member_ID",
        "oS_ID"
      ],
      "properties": {
        "oS_Member_ID": {
          "type": "integer",
          "format": "int64"
        },
        "oS_ID": {
          "type": "integer",
          "format": "int64"
        },
        "admission_ID": {
          "type": "integer",
          "format": "int32"
        },
        "booking_ID": {
          "type": "integer",
          "format": "int32"
        },
        "bookingGroup_ID": {
          "type": "integer",
          "format": "int32"
        },
        "container_ID": {
          "type": "integer",
          "format": "int64"
        },
        "order_ID": {
          "type": "integer",
          "format": "int64"
        },
        "incomingOrder_ID": {
          "type": "integer",
          "format": "int64"
        },
        "triageBooking_ID": {
          "type": "integer",
          "format": "int32"
        },
        "referral_ID": {
          "type": "integer",
          "format": "int32"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/BaseRequestParams"
        }
      ]
    },
    "FindOccasionOfService": {
      "type": "object",
      "additionalProperties": false,
      "allOf": [
        {
          "$ref": "#/definitions/FindOccasionOfServiceParams"
        }
      ]
    },
    "FindOccasionOfServiceParams": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "admission_ID": {
          "type": "integer",
          "format": "int32"
        },
        "booking_ID": {
          "type": "integer",
          "format": "int32"
        },
        "bookingGroup_ID": {
          "type": "integer",
          "format": "int32"
        },
        "container_ID": {
          "type": "integer",
          "format": "int64"
        },
        "order_ID": {
          "type": "integer",
          "format": "int64"
        },
        "incomingOrder_ID": {
          "type": "integer",
          "format": "int64"
        },
        "triageBooking_ID": {
          "type": "integer",
          "format": "int32"
        },
        "referral_ID": {
          "type": "integer",
          "format": "int32"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/CorrelatableRequestParams"
        }
      ]
    },
    "APIResponseOfFindOccasionOfServiceResult": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "data": {
          "$ref": "#/definitions/FindOccasionOfServiceResult"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ProvideErrorMessage"
        }
      ]
    },
    "FindOccasionOfServiceResult": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "oS_Member_ID",
        "oS_ID"
      ],
      "properties": {
        "oS_Member_ID": {
          "type": "integer",
          "format": "int64"
        },
        "oS_ID": {
          "type": "integer",
          "format": "int64"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ProvideErrorMessage"
        }
      ]
    },
    "AddOrUpdateOccasionOfServiceEntry": {
      "type": "object",
      "additionalProperties": false,
      "allOf": [
        {
          "$ref": "#/definitions/AddOrUpdateOccasionOfServiceEntryParams"
        }
      ]
    },
    "AddOrUpdateOccasionOfServiceEntryParams": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "patient_ID"
      ],
      "properties": {
        "oS_ID": {
          "type": "integer",
          "format": "int64"
        },
        "source": {
          "type": "string"
        },
        "patient_ID": {
          "type": "integer",
          "format": "int32"
        },
        "oS_Status": {
          "type": "string"
        },
        "dateCreated": {
          "type": "string",
          "format": "date-time"
        },
        "userCreated": {
          "type": "string"
        },
        "oS_Description": {
          "type": "string"
        },
        "lastUpdated": {
          "type": "string",
          "format": "date-time"
        },
        "referenceDate": {
          "type": "string",
          "format": "date-time"
        },
        "location_ID": {
          "type": "integer",
          "format": "int32"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/BaseRequestParams"
        }
      ]
    },
    "APIResponseOfAddOrUpdateOccasionOfServiceEntryResult": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "data": {
          "$ref": "#/definitions/AddOrUpdateOccasionOfServiceEntryResult"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ProvideErrorMessage"
        }
      ]
    },
    "AddOrUpdateOccasionOfServiceEntryResult": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "oS_ID"
      ],
      "properties": {
        "oS_ID": {
          "type": "integer",
          "format": "int64"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ProvideErrorMessage"
        }
      ]
    },
    "AddOrUpdateOccasionOfServiceMember": {
      "type": "object",
      "additionalProperties": false,
      "allOf": [
        {
          "$ref": "#/definitions/AddOrUpdateOccasionOfServiceMemberParams"
        }
      ]
    },
    "AddOrUpdateOccasionOfServiceMemberParams": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "oS_ID"
      ],
      "properties": {
        "oS_Member_ID": {
          "type": "integer",
          "format": "int64"
        },
        "oS_ID": {
          "type": "integer",
          "format": "int64"
        },
        "admission_ID": {
          "type": "integer",
          "format": "int32"
        },
        "booking_ID": {
          "type": "integer",
          "format": "int32"
        },
        "bookingGroup_ID": {
          "type": "integer",
          "format": "int32"
        },
        "container_ID": {
          "type": "integer",
          "format": "int64"
        },
        "order_ID": {
          "type": "integer",
          "format": "int64"
        },
        "incomingOrder_ID": {
          "type": "integer",
          "format": "int64"
        },
        "triageBooking_ID": {
          "type": "integer",
          "format": "int32"
        },
        "referral_ID": {
          "type": "integer",
          "format": "int32"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/BaseRequestParams"
        }
      ]
    },
    "APIResponseOfAddOrUpdateOccasionOfServiceMemberResult": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "data": {
          "$ref": "#/definitions/AddOrUpdateOccasionOfServiceMemberResult"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ProvideErrorMessage"
        }
      ]
    },
    "AddOrUpdateOccasionOfServiceMemberResult": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "oS_Member_ID",
        "oS_ID"
      ],
      "properties": {
        "oS_Member_ID": {
          "type": "integer",
          "format": "int64"
        },
        "oS_ID": {
          "type": "integer",
          "format": "int64"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ProvideErrorMessage"
        }
      ]
    },
    "APIResponseOfListOfBookingTypeListDO": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/BookingTypeListDO"
          }
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ProvideErrorMessage"
        }
      ]
    },
    "BookingTypeListDO": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "bookingType_ID"
      ],
      "properties": {
        "bookingType_ID": {
          "type": "integer",
          "format": "int32"
        },
        "bookingType": {
          "type": "string"
        }
      }
    },
    "APIResponseOfListOfDoctorsListDO": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/DoctorsListDO"
          }
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ProvideErrorMessage"
        }
      ]
    },
    "DoctorsListDO": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "doctor_ID"
      ],
      "properties": {
        "doctor_ID": {
          "type": "integer",
          "format": "int32"
        },
        "doctor_Name": {
          "type": "string"
        }
      }
    },
    "APIResponseOfListOfLocationsListDO": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/LocationsListDO"
          }
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ProvideErrorMessage"
        }
      ]
    },
    "LocationsListDO": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "location_ID"
      ],
      "properties": {
        "location_ID": {
          "type": "integer",
          "format": "int32"
        },
        "location": {
          "type": "string"
        }
      }
    },
    "FindIncomingHeaderByOrderNumber": {
      "type": "object",
      "additionalProperties": false,
      "allOf": [
        {
          "$ref": "#/definitions/FindIncomingHeaderByOrderNumberParams"
        }
      ]
    },
    "FindIncomingHeaderByOrderNumberParams": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "placerOrderEntityIdentifier": {
          "type": "string"
        },
        "placerOrderNamespaceID": {
          "type": "string"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/CorrelatableRequestParams"
        }
      ]
    },
    "APIResponseOfFindIncomingHeaderByOrderNumberResult": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "data": {
          "$ref": "#/definitions/FindIncomingHeaderByOrderNumberResult"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ProvideErrorMessage"
        }
      ]
    },
    "FindIncomingHeaderByOrderNumberResult": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "incoming_ID"
      ],
      "properties": {
        "incoming_ID": {
          "type": "integer",
          "format": "int64"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ProvideErrorMessage"
        }
      ]
    },
    "FindIncomingHeaderByVisitNumber": {
      "type": "object",
      "additionalProperties": false,
      "allOf": [
        {
          "$ref": "#/definitions/FindIncomingHeaderByVisitNumberParams"
        }
      ]
    },
    "FindIncomingHeaderByVisitNumberParams": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "visitNumber": {
          "type": "string"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/CorrelatableRequestParams"
        }
      ]
    },
    "APIResponseOfFindIncomingHeaderByVisitNumberResult": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "data": {
          "$ref": "#/definitions/FindIncomingHeaderByVisitNumberResult"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ProvideErrorMessage"
        }
      ]
    },
    "FindIncomingHeaderByVisitNumberResult": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "incoming_ID"
      ],
      "properties": {
        "incoming_ID": {
          "type": "integer",
          "format": "int64"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ProvideErrorMessage"
        }
      ]
    },
    "GetIncomingOrder": {
      "type": "object",
      "additionalProperties": false,
      "allOf": [
        {
          "$ref": "#/definitions/GetIncomingOrderParams"
        }
      ]
    },
    "GetIncomingOrderParams": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "incoming_ID": {
          "type": "string"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/CorrelatableRequestParams"
        }
      ]
    },
    "APIResponseOfGetIncomingOrderResult": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "data": {
          "$ref": "#/definitions/GetIncomingOrderResult"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ProvideErrorMessage"
        }
      ]
    },
    "GetIncomingOrderResult": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "incoming_ID"
      ],
      "properties": {
        "incoming_ID": {
          "type": "integer",
          "format": "int64"
        },
        "associatedMessage_ID": {
          "type": "integer",
          "format": "int64"
        },
        "orderControl": {
          "type": "string"
        },
        "placerOrderEntityIdentifier": {
          "type": "string"
        },
        "placerOrderNamespaceID": {
          "type": "string"
        },
        "placerGroupEntityIdentifier": {
          "type": "string"
        },
        "orderStatus": {
          "type": "string"
        },
        "startDateTime": {
          "type": "string"
        },
        "priority": {
          "type": "string"
        },
        "enteredByID": {
          "type": "string"
        },
        "enteredByFamilyName": {
          "type": "string"
        },
        "enteredByGivenName": {
          "type": "string"
        },
        "incomingOrderStatus": {
          "type": "integer",
          "format": "byte"
        },
        "lastProcessed": {
          "type": "string",
          "format": "date-time"
        },
        "setID": {
          "type": "string"
        },
        "orderRequestIdentifier": {
          "type": "string"
        },
        "orderRequestText": {
          "type": "string"
        },
        "orderRequestCodingSystem": {
          "type": "string"
        },
        "orderRequestSegmentText": {
          "type": "string"
        },
        "actionRequired": {
          "type": "integer",
          "format": "byte"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ProvideErrorMessage"
        }
      ]
    },
    "AddOrUpdateIncomingOrder": {
      "type": "object",
      "additionalProperties": false,
      "allOf": [
        {
          "$ref": "#/definitions/AddOrUpdateIncomingOrderParams"
        }
      ]
    },
    "AddOrUpdateIncomingOrderParams": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "incoming_ID"
      ],
      "properties": {
        "incoming_ID": {
          "type": "integer",
          "format": "int64"
        },
        "associatedMessage_ID": {
          "type": "integer",
          "format": "int64"
        },
        "orderControl": {
          "type": "string"
        },
        "placerOrderEntityIdentifier": {
          "type": "string"
        },
        "placerOrderNamespaceID": {
          "type": "string"
        },
        "placerGroupEntityIdentifier": {
          "type": "string"
        },
        "orderStatus": {
          "type": "string"
        },
        "startDateTime": {
          "type": "string"
        },
        "priority": {
          "type": "string"
        },
        "enteredByID": {
          "type": "string"
        },
        "enteredByFamilyName": {
          "type": "string"
        },
        "enteredByGivenName": {
          "type": "string"
        },
        "incomingOrderStatus": {
          "type": "integer",
          "format": "byte"
        },
        "lastProcessed": {
          "type": "string",
          "format": "date-time"
        },
        "setID": {
          "type": "string"
        },
        "orderRequestIdentifier": {
          "type": "string"
        },
        "orderRequestText": {
          "type": "string"
        },
        "orderRequestCodingSystem": {
          "type": "string"
        },
        "orderRequestSegmentText": {
          "type": "string"
        },
        "actionRequired": {
          "type": "integer",
          "format": "byte"
        },
        "dateTimeStart": {
          "type": "string",
          "format": "date-time"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/BaseRequestParams"
        }
      ]
    },
    "APIResponseOfAddOrUpdateIncomingOrderResult": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "data": {
          "$ref": "#/definitions/AddOrUpdateIncomingOrderResult"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ProvideErrorMessage"
        }
      ]
    },
    "AddOrUpdateIncomingOrderResult": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "incoming_ID": {
          "type": "string"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ProvideErrorMessage"
        }
      ]
    },
    "GetIncomingHeader": {
      "type": "object",
      "additionalProperties": false,
      "allOf": [
        {
          "$ref": "#/definitions/GetIncomingHeaderParams"
        }
      ]
    },
    "GetIncomingHeaderParams": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "incoming_ID": {
          "type": "string"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/CorrelatableRequestParams"
        }
      ]
    },
    "APIResponseOfGetIncomingHeaderResult": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "data": {
          "$ref": "#/definitions/GetIncomingHeaderResult"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ProvideErrorMessage"
        }
      ]
    },
    "GetIncomingHeaderResult": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "incoming_ID",
        "patient_ID"
      ],
      "properties": {
        "incoming_ID": {
          "type": "integer",
          "format": "int64"
        },
        "associatedMessage_ID": {
          "type": "integer",
          "format": "int64"
        },
        "sendingFacilityCode": {
          "type": "string"
        },
        "patient_ID": {
          "type": "integer",
          "format": "int32"
        },
        "patientClass": {
          "type": "string"
        },
        "pointOfCare": {
          "type": "string"
        },
        "room": {
          "type": "string"
        },
        "bed": {
          "type": "string"
        },
        "locationFacility": {
          "type": "string"
        },
        "attendingDoctorID": {
          "type": "string"
        },
        "attendingDoctorName": {
          "type": "string"
        },
        "patientType": {
          "type": "string"
        },
        "visitNumber": {
          "type": "string"
        },
        "admittingDoctorID": {
          "type": "string"
        },
        "admittingDoctorName": {
          "type": "string"
        },
        "referringDoctorID": {
          "type": "string"
        },
        "referringDoctorName": {
          "type": "string"
        },
        "consultingDoctorID": {
          "type": "string"
        },
        "consultingDoctorName": {
          "type": "string"
        },
        "message_Type": {
          "type": "string"
        },
        "remotePatient_ID": {
          "type": "string"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ProvideErrorMessage"
        }
      ]
    },
    "AddOrUpdateIncomingHeader": {
      "type": "object",
      "additionalProperties": false,
      "allOf": [
        {
          "$ref": "#/definitions/AddOrUpdateIncomingHeaderParams"
        }
      ]
    },
    "AddOrUpdateIncomingHeaderParams": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "incoming_ID",
        "patient_ID"
      ],
      "properties": {
        "incoming_ID": {
          "type": "integer",
          "format": "int64"
        },
        "associatedMessage_ID": {
          "type": "integer",
          "format": "int64"
        },
        "sendingFacilityCode": {
          "type": "string"
        },
        "patient_ID": {
          "type": "integer",
          "format": "int32"
        },
        "patientClass": {
          "type": "string"
        },
        "pointOfCare": {
          "type": "string"
        },
        "room": {
          "type": "string"
        },
        "bed": {
          "type": "string"
        },
        "locationFacility": {
          "type": "string"
        },
        "attendingDoctorID": {
          "type": "string"
        },
        "attendingDoctorName": {
          "type": "string"
        },
        "patientType": {
          "type": "string"
        },
        "visitNumber": {
          "type": "string"
        },
        "admittingDoctorID": {
          "type": "string"
        },
        "admittingDoctorName": {
          "type": "string"
        },
        "referringDoctorID": {
          "type": "string"
        },
        "referringDoctorName": {
          "type": "string"
        },
        "consultingDoctorID": {
          "type": "string"
        },
        "consultingDoctorName": {
          "type": "string"
        },
        "message_Type": {
          "type": "string"
        },
        "remotePatient_ID": {
          "type": "string"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/BaseRequestParams"
        }
      ]
    },
    "APIResponseOfAddOrUpdateIncomingHeaderResult": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "data": {
          "$ref": "#/definitions/AddOrUpdateIncomingHeaderResult"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ProvideErrorMessage"
        }
      ]
    },
    "AddOrUpdateIncomingHeaderResult": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "incoming_ID_Number"
      ],
      "properties": {
        "incoming_ID": {
          "type": "string"
        },
        "incoming_ID_Number": {
          "type": "integer",
          "format": "int64"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ProvideErrorMessage"
        }
      ]
    },
    "GetIncomingOrder_OBX": {
      "type": "object",
      "additionalProperties": false,
      "allOf": [
        {
          "$ref": "#/definitions/GetIncomingOrder_OBXParams"
        }
      ]
    },
    "GetIncomingOrder_OBXParams": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "incoming_ID": {
          "type": "string"
        },
        "idx": {
          "type": "string"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/CorrelatableRequestParams"
        }
      ]
    },
    "APIResponseOfGetIncomingOrder_OBXResult": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "data": {
          "$ref": "#/definitions/GetIncomingOrder_OBXResult"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ProvideErrorMessage"
        }
      ]
    },
    "GetIncomingOrder_OBXResult": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "incomingOrder_OBX_ID",
        "incoming_ID",
        "idx"
      ],
      "properties": {
        "incomingOrder_OBX_ID": {
          "type": "integer",
          "format": "int64"
        },
        "incoming_ID": {
          "type": "integer",
          "format": "int64"
        },
        "associatedMessage_ID": {
          "type": "integer",
          "format": "int64"
        },
        "idx": {
          "type": "integer",
          "format": "int32"
        },
        "obX_F1_C0": {
          "type": "string"
        },
        "obX_F1_C1": {
          "type": "string"
        },
        "obX_F2_C0": {
          "type": "string"
        },
        "obX_F2_C1": {
          "type": "string"
        },
        "obX_F3_C0": {
          "type": "string"
        },
        "obX_F3_C1": {
          "type": "string"
        },
        "obX_F3_C2": {
          "type": "string"
        },
        "obX_F3_C3": {
          "type": "string"
        },
        "obX_F3_C4": {
          "type": "string"
        },
        "obX_F3_C5": {
          "type": "string"
        },
        "obX_F3_C6": {
          "type": "string"
        },
        "obX_F4_C0": {
          "type": "string"
        },
        "obX_F4_C1": {
          "type": "string"
        },
        "obX_RESULTDATA": {
          "type": "string"
        },
        "obX_F6_C0": {
          "type": "string"
        },
        "obX_F6_C1": {
          "type": "string"
        },
        "obX_F6_C2": {
          "type": "string"
        },
        "obX_F6_C3": {
          "type": "string"
        },
        "obX_F6_C4": {
          "type": "string"
        },
        "obX_F6_C5": {
          "type": "string"
        },
        "obX_F6_C6": {
          "type": "string"
        },
        "obX_F7_C0": {
          "type": "string"
        },
        "obX_F7_C1": {
          "type": "string"
        },
        "obX_F8_C0": {
          "type": "string"
        },
        "obX_F8_C1": {
          "type": "string"
        },
        "obX_F9_C0": {
          "type": "string"
        },
        "obX_F9_C1": {
          "type": "string"
        },
        "obX_F10_C0": {
          "type": "string"
        },
        "obX_F10_C1": {
          "type": "string"
        },
        "obX_F11_C0": {
          "type": "string"
        },
        "obX_F11_C1": {
          "type": "string"
        },
        "obX_F12_C0": {
          "type": "string"
        },
        "obX_F12_C1": {
          "type": "string"
        },
        "obX_F12_C2": {
          "type": "string"
        },
        "obX_F13_C0": {
          "type": "string"
        },
        "obX_F13_C1": {
          "type": "string"
        },
        "obX_F14_C0": {
          "type": "string"
        },
        "obX_F14_C1": {
          "type": "string"
        },
        "obX_F14_C2": {
          "type": "string"
        },
        "obX_F15_C0": {
          "type": "string"
        },
        "obX_F15_C1": {
          "type": "string"
        },
        "obX_F15_C2": {
          "type": "string"
        },
        "obX_F15_C3": {
          "type": "string"
        },
        "obX_F15_C4": {
          "type": "string"
        },
        "obX_F15_C5": {
          "type": "string"
        },
        "obX_F15_C6": {
          "type": "string"
        },
        "obX_F16_C0": {
          "type": "string"
        },
        "obX_F16_C1": {
          "type": "string"
        },
        "obX_F16_C2": {
          "type": "string"
        },
        "obX_F16_C3": {
          "type": "string"
        },
        "obX_F16_C4": {
          "type": "string"
        },
        "obX_F16_C5": {
          "type": "string"
        },
        "obX_F16_C6": {
          "type": "string"
        },
        "obX_F16_C7": {
          "type": "string"
        },
        "obX_F17_C0": {
          "type": "string"
        },
        "obX_F17_C1": {
          "type": "string"
        },
        "obX_F17_C2": {
          "type": "string"
        },
        "obX_F17_C3": {
          "type": "string"
        },
        "obX_F17_C4": {
          "type": "string"
        },
        "obX_F17_C5": {
          "type": "string"
        },
        "obX_F17_C6": {
          "type": "string"
        },
        "obX_F18_C0": {
          "type": "string"
        },
        "obX_F18_C1": {
          "type": "string"
        },
        "obX_F18_C2": {
          "type": "string"
        },
        "obX_F18_C3": {
          "type": "string"
        },
        "obX_F18_C4": {
          "type": "string"
        },
        "obX_F19_C0": {
          "type": "string"
        },
        "obX_F19_C1": {
          "type": "string"
        },
        "obX_F19_C2": {
          "type": "string"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ProvideErrorMessage"
        }
      ]
    },
    "AddOrUpdateIncomingOrder_OBX": {
      "type": "object",
      "additionalProperties": false,
      "allOf": [
        {
          "$ref": "#/definitions/AddOrUpdateIncomingOrder_OBXParams"
        }
      ]
    },
    "AddOrUpdateIncomingOrder_OBXParams": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "incomingOrder_OBX_ID",
        "incoming_ID",
        "idx"
      ],
      "properties": {
        "incomingOrder_OBX_ID": {
          "type": "integer",
          "format": "int64"
        },
        "incoming_ID": {
          "type": "integer",
          "format": "int64"
        },
        "associatedMessage_ID": {
          "type": "integer",
          "format": "int64"
        },
        "idx": {
          "type": "integer",
          "format": "int32"
        },
        "obX_F1_C0": {
          "type": "string"
        },
        "obX_F1_C1": {
          "type": "string"
        },
        "obX_F2_C0": {
          "type": "string"
        },
        "obX_F2_C1": {
          "type": "string"
        },
        "obX_F3_C0": {
          "type": "string"
        },
        "obX_F3_C1": {
          "type": "string"
        },
        "obX_F3_C2": {
          "type": "string"
        },
        "obX_F3_C3": {
          "type": "string"
        },
        "obX_F3_C4": {
          "type": "string"
        },
        "obX_F3_C5": {
          "type": "string"
        },
        "obX_F3_C6": {
          "type": "string"
        },
        "obX_F4_C0": {
          "type": "string"
        },
        "obX_F4_C1": {
          "type": "string"
        },
        "obX_RESULTDATA": {
          "type": "string"
        },
        "obX_F6_C0": {
          "type": "string"
        },
        "obX_F6_C1": {
          "type": "string"
        },
        "obX_F6_C2": {
          "type": "string"
        },
        "obX_F6_C3": {
          "type": "string"
        },
        "obX_F6_C4": {
          "type": "string"
        },
        "obX_F6_C5": {
          "type": "string"
        },
        "obX_F6_C6": {
          "type": "string"
        },
        "obX_F7_C0": {
          "type": "string"
        },
        "obX_F7_C1": {
          "type": "string"
        },
        "obX_F8_C0": {
          "type": "string"
        },
        "obX_F8_C1": {
          "type": "string"
        },
        "obX_F9_C0": {
          "type": "string"
        },
        "obX_F9_C1": {
          "type": "string"
        },
        "obX_F10_C0": {
          "type": "string"
        },
        "obX_F10_C1": {
          "type": "string"
        },
        "obX_F11_C0": {
          "type": "string"
        },
        "obX_F11_C1": {
          "type": "string"
        },
        "obX_F12_C0": {
          "type": "string"
        },
        "obX_F12_C1": {
          "type": "string"
        },
        "obX_F12_C2": {
          "type": "string"
        },
        "obX_F13_C0": {
          "type": "string"
        },
        "obX_F13_C1": {
          "type": "string"
        },
        "obX_F14_C0": {
          "type": "string"
        },
        "obX_F14_C1": {
          "type": "string"
        },
        "obX_F14_C2": {
          "type": "string"
        },
        "obX_F15_C0": {
          "type": "string"
        },
        "obX_F15_C1": {
          "type": "string"
        },
        "obX_F15_C2": {
          "type": "string"
        },
        "obX_F15_C3": {
          "type": "string"
        },
        "obX_F15_C4": {
          "type": "string"
        },
        "obX_F15_C5": {
          "type": "string"
        },
        "obX_F15_C6": {
          "type": "string"
        },
        "obX_F16_C0": {
          "type": "string"
        },
        "obX_F16_C1": {
          "type": "string"
        },
        "obX_F16_C2": {
          "type": "string"
        },
        "obX_F16_C3": {
          "type": "string"
        },
        "obX_F16_C4": {
          "type": "string"
        },
        "obX_F16_C5": {
          "type": "string"
        },
        "obX_F16_C6": {
          "type": "string"
        },
        "obX_F16_C7": {
          "type": "string"
        },
        "obX_F17_C0": {
          "type": "string"
        },
        "obX_F17_C1": {
          "type": "string"
        },
        "obX_F17_C2": {
          "type": "string"
        },
        "obX_F17_C3": {
          "type": "string"
        },
        "obX_F17_C4": {
          "type": "string"
        },
        "obX_F17_C5": {
          "type": "string"
        },
        "obX_F17_C6": {
          "type": "string"
        },
        "obX_F18_C0": {
          "type": "string"
        },
        "obX_F18_C1": {
          "type": "string"
        },
        "obX_F18_C2": {
          "type": "string"
        },
        "obX_F18_C3": {
          "type": "string"
        },
        "obX_F18_C4": {
          "type": "string"
        },
        "obX_F19_C0": {
          "type": "string"
        },
        "obX_F19_C1": {
          "type": "string"
        },
        "obX_F19_C2": {
          "type": "string"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/BaseRequestParams"
        }
      ]
    },
    "APIResponseOfAddOrUpdateIncomingOrder_OBXResult": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "data": {
          "$ref": "#/definitions/AddOrUpdateIncomingOrder_OBXResult"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ProvideErrorMessage"
        }
      ]
    },
    "AddOrUpdateIncomingOrder_OBXResult": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "incoming_ID": {
          "type": "string"
        },
        "idx": {
          "type": "string"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ProvideErrorMessage"
        }
      ]
    },
    "APIResponseOfIEnumerableOfPatientProgram": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PatientProgram"
          }
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ProvideErrorMessage"
        }
      ]
    },
    "PatientProgram": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "id",
        "definitionId",
        "patientId",
        "locationId",
        "attendingDoctorId",
        "nextConnectDue",
        "deleted",
        "booking_ID",
        "referral_ID",
        "cycleCount",
        "cyclesToComplete",
        "cycleWeeks",
        "nextStep",
        "referenceDate",
        "complete",
        "connectStatus",
        "batchId",
        "frequency",
        "dateCreated",
        "dateLastModified",
        "dateDeleted",
        "frequencyValue",
        "canPrintPreview"
      ],
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "definition": {
          "$ref": "#/definitions/ProgramDO"
        },
        "definitionId": {
          "type": "integer",
          "format": "int32"
        },
        "program": {
          "type": "string"
        },
        "patient": {
          "$ref": "#/definitions/Patient"
        },
        "patientId": {
          "type": "integer",
          "format": "int32"
        },
        "patientName": {
          "type": "string"
        },
        "locationId": {
          "type": "integer",
          "format": "int32"
        },
        "locationName": {
          "type": "string"
        },
        "attendingDoctorId": {
          "type": "integer",
          "format": "int32"
        },
        "attendingMO": {
          "type": "string"
        },
        "noteText": {
          "type": "string"
        },
        "nextActionDescription": {
          "type": "string"
        },
        "nextConnectDue": {
          "type": "string",
          "format": "date-time"
        },
        "deleted": {
          "type": "boolean"
        },
        "booking_ID": {
          "type": "integer",
          "format": "int32"
        },
        "referral_ID": {
          "type": "integer",
          "format": "int32"
        },
        "cycleCount": {
          "type": "integer"
        },
        "cyclesToComplete": {
          "type": "integer"
        },
        "cycleWeeks": {
          "type": "integer"
        },
        "nextStep": {
          "type": "integer"
        },
        "nextStepDescription": {
          "type": "string"
        },
        "enrollmentDate": {
          "type": "string",
          "format": "date-time"
        },
        "referenceDate": {
          "type": "string",
          "format": "date-time"
        },
        "complete": {
          "type": "boolean"
        },
        "connectStatus": {
          "$ref": "#/definitions/ConnectStatus"
        },
        "batchId": {
          "type": "integer",
          "format": "int32"
        },
        "connectWarning": {
          "type": "string"
        },
        "bookingDate": {
          "type": "string",
          "format": "date-time"
        },
        "frequency": {
          "type": "integer",
          "format": "int32"
        },
        "history": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PatientConnectLogDO"
          }
        },
        "replyContent": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ReplyContentDO"
          }
        },
        "dateCreated": {
          "type": "string",
          "format": "date-time"
        },
        "userCreated": {
          "type": "string"
        },
        "dateLastModified": {
          "type": "string",
          "format": "date-time"
        },
        "userLastModified": {
          "type": "string"
        },
        "dateDeleted": {
          "type": "string",
          "format": "date-time"
        },
        "userDeleted": {
          "type": "string"
        },
        "frequencyUnit": {
          "type": "string"
        },
        "frequencyValue": {
          "type": "integer"
        },
        "bookingTypes": {
          "type": "string"
        },
        "canPrintPreview": {
          "type": "boolean"
        }
      }
    },
    "ProgramDO": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "id",
        "type",
        "enabled",
        "weeks",
        "recurringCount",
        "bookingToCompleteType",
        "deleted",
        "frequencyValue",
        "hasReplyContent"
      ],
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "type": {
          "$ref": "#/definitions/ProgramType"
        },
        "reason": {
          "type": "string"
        },
        "enabled": {
          "type": "boolean"
        },
        "weeks": {
          "type": "integer"
        },
        "recurringCount": {
          "type": "integer"
        },
        "bookingToCompleteType": {
          "$ref": "#/definitions/BookingToCompleteType"
        },
        "actions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ActionDO"
          }
        },
        "bookingTypes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SelectedBookingTypeDO"
          }
        },
        "deleted": {
          "type": "boolean"
        },
        "frequencyUnit": {
          "type": "string"
        },
        "frequencyValue": {
          "type": "integer"
        },
        "userLastModified": {
          "type": "string"
        },
        "effectedConnects": {
          "$ref": "#/definitions/EffectedConnectsOnProgramDO"
        },
        "hasReplyContent": {
          "type": "boolean"
        }
      }
    },
    "ProgramType": {
      "type": "integer",
      "description": "",
      "x-enumNames": [
        "Recall",
        "Program",
        "Booking",
        "Referral",
        "General"
      ],
      "enum": [
        1,
        2,
        3,
        4,
        5
      ]
    },
    "BookingToCompleteType": {
      "type": "integer",
      "description": "",
      "x-enumNames": [
        "Ignore",
        "Any",
        "Selected"
      ],
      "enum": [
        0,
        1,
        2
      ]
    },
    "ActionDO": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "id",
        "programId",
        "step",
        "action",
        "actionDays",
        "isNextAction",
        "letterTemplateId",
        "content",
        "contentRangeType",
        "contentRangeHigh",
        "contentRangeLow",
        "pauseOnError",
        "printOption",
        "deleted"
      ],
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "programId": {
          "type": "integer",
          "format": "int32"
        },
        "step": {
          "type": "integer"
        },
        "action": {
          "$ref": "#/definitions/PcAction"
        },
        "actionDays": {
          "type": "integer",
          "format": "int32"
        },
        "actionName": {
          "type": "string"
        },
        "isNextAction": {
          "type": "boolean"
        },
        "smsTemplate": {
          "type": "string"
        },
        "letterTemplateId": {
          "type": "integer",
          "format": "int32"
        },
        "letterTemplateDescription": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "content": {
          "type": "boolean"
        },
        "contentField": {
          "type": "string"
        },
        "contentRangeType": {
          "type": "integer"
        },
        "contentRangeHigh": {
          "type": "number",
          "format": "decimal"
        },
        "contentRangeLow": {
          "type": "number",
          "format": "decimal"
        },
        "pauseOnError": {
          "type": "boolean"
        },
        "printOption": {
          "type": "integer"
        },
        "deleted": {
          "type": "boolean"
        },
        "actionDate": {
          "type": "string",
          "format": "date-time"
        },
        "portalConfiguration": {
          "$ref": "#/definitions/PortalConfiguration"
        }
      }
    },
    "PcAction": {
      "type": "integer",
      "description": "",
      "x-enumNames": [
        "All",
        "Sms",
        "LetterToPatient",
        "LetterToGP",
        "PauseUserAction",
        "PauseUserActionWithOutError",
        "EmailToPatient",
        "Portal",
        "CycleCompleted",
        "Deleted"
      ],
      "enum": [
        0,
        1,
        2,
        3,
        4,
        5,
        6,
        7,
        10001,
        10002
      ]
    },
    "PortalConfiguration": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "messageList_ID"
      ],
      "properties": {
        "messageList_ID": {
          "type": "integer",
          "format": "int32"
        },
        "documentsList": {
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int32"
          }
        },
        "screensList": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PortalScreenItem"
          }
        }
      }
    },
    "PortalScreenItem": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "list_ID",
        "displayOrder"
      ],
      "properties": {
        "list_ID": {
          "type": "integer",
          "format": "int32"
        },
        "displayOrder": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "EffectedConnectsOnProgramDO": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "programId",
        "patientCount"
      ],
      "properties": {
        "programId": {
          "type": "integer",
          "format": "int32"
        },
        "patientCount": {
          "type": "integer",
          "format": "int32"
        },
        "effectedConnectSteps": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/EffectedConnectStepDO"
          }
        }
      }
    },
    "EffectedConnectStepDO": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "step",
        "effectedCount",
        "effectedNextStep",
        "effectedImmediately"
      ],
      "properties": {
        "step": {
          "type": "integer"
        },
        "stepAction": {
          "type": "string"
        },
        "effectedCount": {
          "type": "integer",
          "format": "int32"
        },
        "effectedNextStep": {
          "type": "integer"
        },
        "effectedImmediately": {
          "type": "boolean"
        }
      }
    },
    "Patient": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "patient_ID",
        "inFamily",
        "hasAlias",
        "patientType",
        "possibleDuplicate",
        "deleted",
        "alertBilling",
        "alertPatientNote",
        "alertUser1",
        "alertUser2",
        "patientInfoForm",
        "inpatient",
        "chartDoNotMove",
        "familyHistoryPresent",
        "allergiesPresent",
        "birthOrder",
        "hasCustomFieldAlerts"
      ],
      "properties": {
        "patient_ID": {
          "type": "integer",
          "format": "int32"
        },
        "company_ID": {
          "type": "integer",
          "format": "int32"
        },
        "firstName": {
          "type": "string"
        },
        "surname": {
          "type": "string"
        },
        "knownAs": {
          "type": "string"
        },
        "initials": {
          "type": "string"
        },
        "title": {
          "type": "string"
        },
        "sex": {
          "type": "string"
        },
        "dob": {
          "type": "string",
          "format": "date-time"
        },
        "ethnicity": {
          "type": "string"
        },
        "family_ID": {
          "type": "integer",
          "format": "int32"
        },
        "inFamily": {
          "type": "boolean"
        },
        "hasAlias": {
          "type": "boolean"
        },
        "mrn": {
          "type": "string"
        },
        "occupation": {
          "type": "string"
        },
        "patientType": {
          "type": "integer",
          "format": "int32"
        },
        "homePhone": {
          "type": "string"
        },
        "workPhone": {
          "type": "string"
        },
        "mobile": {
          "type": "string"
        },
        "homeFax": {
          "type": "string"
        },
        "workFax": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "pStatus": {
          "type": "string"
        },
        "dateDeceased": {
          "type": "string",
          "format": "date-time"
        },
        "dateCreated": {
          "type": "string",
          "format": "date-time"
        },
        "userCreated": {
          "type": "string"
        },
        "dateLastModified": {
          "type": "string",
          "format": "date-time"
        },
        "userLastModified": {
          "type": "string"
        },
        "note_ID": {
          "type": "integer",
          "format": "int32"
        },
        "snd_name": {
          "type": "string"
        },
        "cntBookingNoShow": {
          "type": "integer",
          "format": "int32"
        },
        "cntBookingCancel": {
          "type": "integer",
          "format": "int32"
        },
        "cntBookingChange": {
          "type": "integer",
          "format": "int32"
        },
        "medicare": {
          "type": "string"
        },
        "medicareRefNo": {
          "type": "string"
        },
        "mediExpYYYY": {
          "type": "integer",
          "format": "int32"
        },
        "mediExpMM": {
          "type": "integer",
          "format": "byte"
        },
        "medicareVerifyDate": {
          "type": "string",
          "format": "date-time"
        },
        "vetAffairs": {
          "type": "string"
        },
        "healthFundID": {
          "type": "integer",
          "format": "int32"
        },
        "fundNumber": {
          "type": "string"
        },
        "fundNumberUPI": {
          "type": "string"
        },
        "fundExpYYYY": {
          "type": "integer",
          "format": "int32"
        },
        "fundExpMM": {
          "type": "integer",
          "format": "byte"
        },
        "fundPlan": {
          "type": "integer",
          "format": "int32"
        },
        "feeTable_ID": {
          "type": "integer",
          "format": "int32"
        },
        "attendingMO": {
          "type": "integer",
          "format": "int32"
        },
        "primaryHealthProvider": {
          "type": "integer",
          "format": "int32"
        },
        "lastVisitGP": {
          "type": "string",
          "format": "date-time"
        },
        "treatmentLocation": {
          "type": "integer",
          "format": "int32"
        },
        "fullReg": {
          "type": "boolean"
        },
        "billingType": {
          "type": "integer",
          "format": "int32"
        },
        "hospitalBillingClass": {
          "type": "string"
        },
        "privacyDisclaimer": {
          "type": "boolean"
        },
        "archive": {
          "type": "boolean"
        },
        "pensionNumber": {
          "type": "string"
        },
        "commenced": {
          "type": "string",
          "format": "date-time"
        },
        "ceased": {
          "type": "string",
          "format": "date-time"
        },
        "userIdentifier1": {
          "type": "string"
        },
        "userIdentifier2": {
          "type": "string"
        },
        "extPatient_ID": {
          "type": "string"
        },
        "possibleDuplicate": {
          "type": "boolean"
        },
        "deleted": {
          "type": "boolean"
        },
        "deletionReason": {
          "type": "integer",
          "format": "int32"
        },
        "deletionNote": {
          "type": "integer",
          "format": "int32"
        },
        "deletionDate": {
          "type": "string",
          "format": "date-time"
        },
        "deletionUser": {
          "type": "string"
        },
        "jobtitle": {
          "type": "string"
        },
        "primaryPhone": {
          "type": "integer",
          "format": "byte"
        },
        "dateFirstBooking": {
          "type": "string",
          "format": "date-time"
        },
        "dateFirstInvoice": {
          "type": "string",
          "format": "date-time"
        },
        "alertBilling": {
          "type": "boolean"
        },
        "alertPatientNote": {
          "type": "boolean"
        },
        "alertUser1": {
          "type": "integer",
          "format": "byte"
        },
        "alertUser2": {
          "type": "integer",
          "format": "byte"
        },
        "ctimestamp": {
          "type": "string",
          "format": "byte"
        },
        "patientInfoForm": {
          "type": "boolean"
        },
        "inpatient": {
          "type": "boolean"
        },
        "ward": {
          "type": "string"
        },
        "dateLatestBooking": {
          "type": "string",
          "format": "date-time"
        },
        "noStatementDate": {
          "type": "string",
          "format": "date-time"
        },
        "noStatementReason": {
          "type": "string"
        },
        "accountHoldDate": {
          "type": "string",
          "format": "date-time"
        },
        "accountHoldReason": {
          "type": "string"
        },
        "programLatestExpiryDate": {
          "type": "string",
          "format": "date-time"
        },
        "chartDoNotMove": {
          "type": "boolean"
        },
        "lastSuccessfulPVM": {
          "type": "string",
          "format": "date-time"
        },
        "lastSuccessfulPVF": {
          "type": "string",
          "format": "date-time"
        },
        "lastSuccessfulOVV": {
          "type": "string",
          "format": "date-time"
        },
        "familyHistoryPresent": {
          "type": "boolean"
        },
        "allergiesPresent": {
          "type": "boolean"
        },
        "transport": {
          "type": "integer",
          "format": "int32"
        },
        "mrN_Feed": {
          "type": "integer",
          "format": "int32"
        },
        "birthOrder": {
          "type": "integer"
        },
        "allowAutomatedSMS": {
          "type": "boolean"
        },
        "surnameSoundex": {
          "type": "string"
        },
        "preferredPhone": {
          "type": "string"
        },
        "devicesNotRecorded": {
          "type": "integer",
          "format": "int32"
        },
        "clinicalNote": {
          "type": "integer",
          "format": "int32"
        },
        "dvaCardType": {
          "type": "integer",
          "format": "int32"
        },
        "hasCustomFieldAlerts": {
          "type": "boolean"
        },
        "patient1": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Patient"
          }
        },
        "patient2": {
          "$ref": "#/definitions/Patient"
        },
        "addresses": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Address"
          }
        },
        "alerts": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Alert"
          }
        },
        "allergies": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Allergy"
          }
        },
        "hL7_PatientMapping": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/HL7_PatientMapping"
          }
        },
        "nextOfKins": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/NextOfKin"
          }
        },
        "queue_MergeRequest": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Queue_MergeRequest"
          }
        },
        "queue_MergeRequest1": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Queue_MergeRequest"
          }
        },
        "company": {
          "$ref": "#/definitions/Company"
        },
        "patient_Alias": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Patient_Alias"
          }
        }
      }
    },
    "Address": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "owner_ID",
        "addressType",
        "primaryAddress",
        "invoiceAddress",
        "mailingAddress"
      ],
      "properties": {
        "owner_ID": {
          "type": "integer",
          "format": "int32"
        },
        "addressType": {
          "type": "integer",
          "format": "int32"
        },
        "primaryAddress": {
          "type": "boolean"
        },
        "invoiceAddress": {
          "type": "boolean"
        },
        "mailingAddress": {
          "type": "boolean"
        },
        "address1": {
          "type": "string"
        },
        "address2": {
          "type": "string"
        },
        "suburb": {
          "type": "string"
        },
        "postcode": {
          "type": "string"
        },
        "country": {
          "type": "string"
        },
        "state": {
          "type": "string"
        },
        "department": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "patient": {
          "$ref": "#/definitions/Patient"
        }
      }
    },
    "Alert": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "alert_ID",
        "patient_ID",
        "type",
        "dateCreated"
      ],
      "properties": {
        "alert_ID": {
          "type": "integer",
          "format": "int32"
        },
        "patient_ID": {
          "type": "integer",
          "format": "int32"
        },
        "type": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "user_ID": {
          "type": "string"
        },
        "role": {
          "type": "integer",
          "format": "int32"
        },
        "source": {
          "type": "integer",
          "format": "byte"
        },
        "source_ID": {
          "type": "integer",
          "format": "int64"
        },
        "dateCreated": {
          "type": "string",
          "format": "date-time"
        },
        "startDate": {
          "type": "string",
          "format": "date-time"
        },
        "endDate": {
          "type": "string",
          "format": "date-time"
        },
        "dueDate": {
          "type": "string",
          "format": "date-time"
        },
        "userCreated": {
          "type": "string"
        },
        "userLastModified": {
          "type": "string"
        },
        "dateLastModified": {
          "type": "string",
          "format": "date-time"
        },
        "patient": {
          "$ref": "#/definitions/Patient"
        }
      }
    },
    "Allergy": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "allergy_ID",
        "patient_ID",
        "allergy_Current"
      ],
      "properties": {
        "allergy_ID": {
          "type": "integer",
          "format": "int32"
        },
        "patient_ID": {
          "type": "integer",
          "format": "int32"
        },
        "note_ID": {
          "type": "integer",
          "format": "int32"
        },
        "allergy_Type": {
          "type": "string"
        },
        "allergy_Code": {
          "type": "string"
        },
        "allergy_Severity": {
          "type": "string"
        },
        "allergy_IdentificationDate": {
          "type": "string",
          "format": "date-time"
        },
        "allergy_Reaction": {
          "type": "string"
        },
        "userCreated": {
          "type": "string"
        },
        "dateCreated": {
          "type": "string",
          "format": "date-time"
        },
        "userLastModified": {
          "type": "string"
        },
        "dateLastModified": {
          "type": "string",
          "format": "date-time"
        },
        "allergy_StartDate": {
          "type": "string",
          "format": "date-time"
        },
        "allergy_ExposureDate": {
          "type": "string",
          "format": "date-time"
        },
        "allergy_AdverseReactionPresence": {
          "type": "integer",
          "format": "int32"
        },
        "allergy_InformationProvidedBy": {
          "type": "integer",
          "format": "int32"
        },
        "allergy_AgentCertainty": {
          "type": "integer",
          "format": "int32"
        },
        "allergy_RactionType": {
          "type": "integer",
          "format": "int32"
        },
        "allergy_ReactionDescription": {
          "type": "string"
        },
        "allergy_AdverseReactionStatus": {
          "type": "integer",
          "format": "int32"
        },
        "allergy_AdverseReactionOutcome": {
          "type": "integer",
          "format": "int32"
        },
        "allergy_Reporter": {
          "type": "string"
        },
        "allergy_Alert": {
          "type": "boolean"
        },
        "allergy_Current": {
          "type": "boolean"
        },
        "patient": {
          "$ref": "#/definitions/Patient"
        }
      }
    },
    "HL7_PatientMapping": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "feed_ID",
        "owner",
        "birthOrder",
        "systemMatched",
        "userMatched",
        "userCannotMatch",
        "merged",
        "inErrorCode",
        "deleted"
      ],
      "properties": {
        "feed_ID": {
          "type": "integer",
          "format": "int32"
        },
        "remotePatient_ID": {
          "type": "string"
        },
        "patientIdentifierList": {
          "type": "string"
        },
        "localPatient_ID": {
          "type": "integer",
          "format": "int32"
        },
        "owner": {
          "type": "boolean"
        },
        "assigningAuthority": {
          "type": "string"
        },
        "medicare": {
          "type": "string"
        },
        "firstName": {
          "type": "string"
        },
        "surname": {
          "type": "string"
        },
        "middleName": {
          "type": "string"
        },
        "gender": {
          "type": "string"
        },
        "dateOfBirth": {
          "type": "string",
          "format": "date-time"
        },
        "birthOrder": {
          "type": "integer"
        },
        "addrStreet": {
          "type": "string"
        },
        "addrCity": {
          "type": "string"
        },
        "addrState": {
          "type": "string"
        },
        "addrPostCode": {
          "type": "string"
        },
        "homePhone": {
          "type": "string"
        },
        "workPhone": {
          "type": "string"
        },
        "messageCode": {
          "type": "string"
        },
        "triggerEvent": {
          "type": "string"
        },
        "systemMatched": {
          "type": "boolean"
        },
        "userMatched": {
          "type": "boolean"
        },
        "username": {
          "type": "string"
        },
        "userCannotMatch": {
          "type": "boolean"
        },
        "possibleDuplicate": {
          "type": "boolean"
        },
        "merged": {
          "type": "boolean"
        },
        "inErrorCode": {
          "type": "integer"
        },
        "dateCreated": {
          "type": "string",
          "format": "date-time"
        },
        "dateModified": {
          "type": "string",
          "format": "date-time"
        },
        "deleted": {
          "type": "boolean"
        },
        "deletedUser": {
          "type": "string"
        },
        "deletedDate": {
          "type": "string",
          "format": "date-time"
        },
        "external_Feed_Config": {
          "$ref": "#/definitions/External_Feed_Config"
        },
        "patient": {
          "$ref": "#/definitions/Patient"
        }
      }
    },
    "External_Feed_Config": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "feed_ID",
        "service_ID",
        "feed_Type",
        "embedded_Files",
        "feed_Enabled",
        "requestForm_Enabled",
        "warnOperatorIfNoActivity",
        "userDefined",
        "logging_Enabled",
        "mrnPatientMatch",
        "generateFillerCode",
        "ignoreSystemMatch",
        "disable_ClinicalRecordMove",
        "supportsHMSOrder",
        "hT_MRN",
        "demographicsMRN",
        "supportsMultipleTestTypes",
        "canBeVerified"
      ],
      "properties": {
        "feed_ID": {
          "type": "integer",
          "format": "int32"
        },
        "service_Category": {
          "type": "integer",
          "format": "int32"
        },
        "service_Name": {
          "type": "string"
        },
        "service_ID": {
          "type": "integer",
          "format": "int32"
        },
        "feed_Type": {
          "type": "integer",
          "format": "int32"
        },
        "feed_InDirectory": {
          "type": "string"
        },
        "feed_OutDirectory": {
          "type": "string"
        },
        "feed_OutHostname": {
          "type": "string"
        },
        "feed_OutPort": {
          "type": "integer",
          "format": "int32"
        },
        "location_ID": {
          "type": "integer",
          "format": "int32"
        },
        "doctor_ID": {
          "type": "integer",
          "format": "int32"
        },
        "embedded_Files": {
          "type": "boolean"
        },
        "feed_Provider": {
          "type": "integer",
          "format": "int32"
        },
        "feed_Enabled": {
          "type": "boolean"
        },
        "requestForm_Enabled": {
          "type": "boolean"
        },
        "feed_BackupDirectory": {
          "type": "string"
        },
        "modifiedDate": {
          "type": "string",
          "format": "date-time"
        },
        "modifiedUser": {
          "type": "string"
        },
        "requestForm": {
          "type": "string"
        },
        "lastActivityDateTime": {
          "type": "string",
          "format": "date-time"
        },
        "lastWarningDateTime": {
          "type": "string",
          "format": "date-time"
        },
        "warnOperatorIfNoActivity": {
          "type": "boolean"
        },
        "warnThresholdHours": {
          "type": "integer",
          "format": "int32"
        },
        "warnHoursBetweenWarnings": {
          "type": "integer",
          "format": "int32"
        },
        "warnStartHour": {
          "type": "integer",
          "format": "byte"
        },
        "warnStopHour": {
          "type": "integer",
          "format": "byte"
        },
        "warnEmailAddresses": {
          "type": "string"
        },
        "synopsisPrefix": {
          "type": "string"
        },
        "d_type": {
          "type": "integer",
          "format": "int32"
        },
        "onPatientFind": {
          "type": "string"
        },
        "onPatientFindQuery": {
          "type": "string"
        },
        "onClinicalRecord": {
          "type": "string"
        },
        "sqlConnectionString": {
          "type": "string"
        },
        "feed_ReprocessDirectory": {
          "type": "string"
        },
        "mappingFeed_ID": {
          "type": "integer",
          "format": "int32"
        },
        "userDefined": {
          "type": "boolean"
        },
        "logging_Enabled": {
          "type": "boolean"
        },
        "keepMessagesDays": {
          "type": "integer",
          "format": "int32"
        },
        "previewLOINCS": {
          "type": "string"
        },
        "mrnPatientMatch": {
          "type": "boolean"
        },
        "generateFillerCode": {
          "type": "boolean"
        },
        "ignoreSystemMatch": {
          "type": "boolean"
        },
        "disable_ClinicalRecordMove": {
          "type": "boolean"
        },
        "supportsHMSOrder": {
          "type": "boolean"
        },
        "assigningAuthority": {
          "type": "string"
        },
        "outboundAssigningAuthority": {
          "type": "string"
        },
        "groupFeed_ID": {
          "type": "integer",
          "format": "int32"
        },
        "hT_MRN": {
          "type": "boolean"
        },
        "fileLayout": {
          "type": "string"
        },
        "demographicsMRN": {
          "type": "boolean"
        },
        "supportsMultipleTestTypes": {
          "type": "boolean"
        },
        "canBeVerified": {
          "type": "boolean"
        },
        "hL7_PatientMapping": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/HL7_PatientMapping"
          }
        },
        "external_Feed_MatchingScore": {
          "$ref": "#/definitions/External_Feed_MatchingScore"
        }
      }
    },
    "External_Feed_MatchingScore": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "feed_ID"
      ],
      "properties": {
        "feed_ID": {
          "type": "integer",
          "format": "int32"
        },
        "firstNameScore": {
          "type": "integer"
        },
        "surnameScore": {
          "type": "integer"
        },
        "dobScore": {
          "type": "integer"
        },
        "medicareScore": {
          "type": "integer"
        },
        "patientApprovedScore": {
          "type": "integer"
        },
        "external_Feed_Config": {
          "$ref": "#/definitions/External_Feed_Config"
        }
      }
    },
    "NextOfKin": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "patient_ID",
        "nokIndex"
      ],
      "properties": {
        "patient_ID": {
          "type": "integer",
          "format": "int32"
        },
        "nokIndex": {
          "type": "integer",
          "format": "byte"
        },
        "title": {
          "type": "string"
        },
        "firstName": {
          "type": "string"
        },
        "surname": {
          "type": "string"
        },
        "relationship": {
          "type": "string"
        },
        "homePhone": {
          "type": "string"
        },
        "mobile": {
          "type": "string"
        },
        "workPhone": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "archive": {
          "type": "boolean"
        },
        "patient": {
          "$ref": "#/definitions/Patient"
        }
      }
    },
    "Queue_MergeRequest": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "queueMergeID",
        "fromPatientID",
        "toPatientID",
        "processed",
        "errored"
      ],
      "properties": {
        "queueMergeID": {
          "type": "integer",
          "format": "int32"
        },
        "sourceRequested": {
          "type": "string"
        },
        "sourceMessageID": {
          "type": "string"
        },
        "fromPatientID": {
          "type": "integer",
          "format": "int32"
        },
        "toPatientID": {
          "type": "integer",
          "format": "int32"
        },
        "requestedDate": {
          "type": "string",
          "format": "date-time"
        },
        "processed": {
          "type": "boolean"
        },
        "processedDate": {
          "type": "string",
          "format": "date-time"
        },
        "errored": {
          "type": "boolean"
        },
        "errorLog": {
          "type": "string"
        },
        "patient": {
          "$ref": "#/definitions/Patient"
        },
        "patient1": {
          "$ref": "#/definitions/Patient"
        }
      }
    },
    "Company": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "company_ID",
        "deleted",
        "billing_Practice",
        "billing_Scheduled",
        "billing_Medicare",
        "billing_HealthFund",
        "billing_Other",
        "gapCover",
        "onlineRegistered",
        "onlineActivated",
        "requires_PracticeID"
      ],
      "properties": {
        "company_ID": {
          "type": "integer",
          "format": "int32"
        },
        "companyName": {
          "type": "string"
        },
        "companyABN": {
          "type": "string"
        },
        "companyACN": {
          "type": "string"
        },
        "companyPhone": {
          "type": "string"
        },
        "companyFax": {
          "type": "string"
        },
        "note_ID": {
          "type": "integer",
          "format": "int32"
        },
        "deleted": {
          "type": "boolean"
        },
        "deletionReason": {
          "type": "integer",
          "format": "int32"
        },
        "deletionNote": {
          "type": "integer",
          "format": "int32"
        },
        "deletionDate": {
          "type": "string",
          "format": "date-time"
        },
        "deletionUser": {
          "type": "string"
        },
        "invoiceToUse": {
          "type": "string"
        },
        "billing_Practice": {
          "type": "boolean"
        },
        "billing_Scheduled": {
          "type": "boolean"
        },
        "billing_Medicare": {
          "type": "boolean"
        },
        "billing_HealthFund": {
          "type": "boolean"
        },
        "billing_Other": {
          "type": "boolean"
        },
        "feeTable_ID": {
          "type": "integer",
          "format": "int32"
        },
        "gapCover": {
          "type": "boolean"
        },
        "coversheetPrintSet": {
          "type": "string"
        },
        "chequeBSB": {
          "type": "string"
        },
        "healthFundType": {
          "type": "string"
        },
        "onlineFundCode": {
          "type": "string"
        },
        "hL7MappingID": {
          "type": "string"
        },
        "onlineRecordUpdated": {
          "type": "string",
          "format": "date-time"
        },
        "onlineRegistered": {
          "type": "boolean"
        },
        "onlineActivated": {
          "type": "boolean"
        },
        "hmS_HealthfundReference": {
          "type": "integer",
          "format": "int32"
        },
        "feed_ID": {
          "type": "integer",
          "format": "int32"
        },
        "requires_PracticeID": {
          "type": "boolean"
        },
        "onlineContactPhone": {
          "type": "string"
        },
        "onlineChangeReport": {
          "type": "string"
        },
        "userCreated": {
          "type": "string"
        },
        "dateCreated": {
          "type": "string",
          "format": "date-time"
        },
        "userLastModified": {
          "type": "string"
        },
        "dateLastModified": {
          "type": "string",
          "format": "date-time"
        },
        "extCompany_ID": {
          "type": "string"
        },
        "patients": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Patient"
          }
        }
      }
    },
    "Patient_Alias": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "alias_ID",
        "patient_ID",
        "readOnly"
      ],
      "properties": {
        "alias_ID": {
          "type": "integer",
          "format": "int32"
        },
        "patient_ID": {
          "type": "integer",
          "format": "int32"
        },
        "surname": {
          "type": "string"
        },
        "surnameSoundex": {
          "type": "string"
        },
        "firstName": {
          "type": "string"
        },
        "alias_Comment": {
          "type": "string"
        },
        "alias_Type": {
          "type": "string"
        },
        "readOnly": {
          "type": "boolean"
        },
        "patient": {
          "$ref": "#/definitions/Patient"
        }
      }
    },
    "ConnectStatus": {
      "type": "integer",
      "description": "",
      "x-enumNames": [
        "Active",
        "Paused",
        "Error",
        "Completed",
        "Deleted"
      ],
      "enum": [
        0,
        1,
        2,
        3,
        4
      ]
    },
    "PatientConnectLogDO": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "id",
        "patientConnectId",
        "batchID",
        "action",
        "actionDate",
        "definitionStepId",
        "step",
        "repeat",
        "cycleCount",
        "status",
        "complete",
        "letterTemplateId",
        "dateCreated",
        "actionTaken"
      ],
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "patientConnectId": {
          "type": "integer",
          "format": "int32"
        },
        "batchID": {
          "type": "integer",
          "format": "int32"
        },
        "action": {
          "$ref": "#/definitions/PcAction"
        },
        "actionName": {
          "type": "string"
        },
        "actionDate": {
          "type": "string",
          "format": "date-time"
        },
        "definitionStepId": {
          "type": "integer",
          "format": "int32"
        },
        "step": {
          "type": "integer"
        },
        "repeat": {
          "type": "integer"
        },
        "cycleCount": {
          "type": "integer"
        },
        "status": {
          "$ref": "#/definitions/ConnectStatus"
        },
        "statusName": {
          "type": "string"
        },
        "complete": {
          "type": "boolean"
        },
        "smsTemplate": {
          "type": "string"
        },
        "letterTemplateId": {
          "type": "integer",
          "format": "int32"
        },
        "description": {
          "type": "string"
        },
        "notes": {
          "type": "string"
        },
        "dateCreated": {
          "type": "string",
          "format": "date-time"
        },
        "createdBy": {
          "type": "string"
        },
        "actionTaken": {
          "type": "boolean"
        },
        "actionNote": {
          "type": "string"
        }
      }
    },
    "ReplyContentDO": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "id",
        "deleted",
        "dateReceived",
        "dateLastModified",
        "dateDeleted",
        "dateCreated",
        "contentValue",
        "contentRangeType",
        "patientId",
        "logID",
        "patientConnectId",
        "validContent",
        "highRangeValue",
        "lowRangeValue",
        "outOfRange",
        "outOfRangeHigh"
      ],
      "properties": {
        "content": {
          "type": "string"
        },
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "deleted": {
          "type": "boolean"
        },
        "dateReceived": {
          "type": "string",
          "format": "date-time"
        },
        "dateLastModified": {
          "type": "string",
          "format": "date-time"
        },
        "dateDeleted": {
          "type": "string",
          "format": "date-time"
        },
        "dateCreated": {
          "type": "string",
          "format": "date-time"
        },
        "contentValue": {
          "type": "number",
          "format": "decimal"
        },
        "contentRangeType": {
          "type": "integer"
        },
        "contentField": {
          "type": "string"
        },
        "patientId": {
          "type": "integer",
          "format": "int32"
        },
        "patientName": {
          "type": "string"
        },
        "mobile": {
          "type": "string"
        },
        "userCreated": {
          "type": "string"
        },
        "userDeleted": {
          "type": "string"
        },
        "userLastModified": {
          "type": "string"
        },
        "logID": {
          "type": "integer",
          "format": "int64"
        },
        "patientConnectId": {
          "type": "integer",
          "format": "int32"
        },
        "validContent": {
          "type": "boolean"
        },
        "highRangeValue": {
          "type": "number",
          "format": "decimal"
        },
        "lowRangeValue": {
          "type": "number",
          "format": "decimal"
        },
        "outOfRange": {
          "type": "boolean"
        },
        "outOfRangeHigh": {
          "type": "boolean"
        },
        "replyStatus": {
          "type": "string"
        },
        "definition": {
          "$ref": "#/definitions/ProgramDO"
        },
        "actionTaken": {
          "type": "boolean"
        },
        "actionNote": {
          "type": "string"
        }
      }
    },
    "APIResponseOfPatientProgram": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "data": {
          "$ref": "#/definitions/PatientProgram"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ProvideErrorMessage"
        }
      ]
    },
    "APIResponseOfIEnumerableOfConnectStatusDO": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ConnectStatusDO"
          }
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ProvideErrorMessage"
        }
      ]
    },
    "ConnectStatusDO": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "connectStatus"
      ],
      "properties": {
        "connectStatus": {
          "$ref": "#/definitions/ConnectStatus"
        },
        "statusName": {
          "type": "string"
        }
      }
    },
    "APIResponseOfActionDO": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "data": {
          "$ref": "#/definitions/ActionDO"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ProvideErrorMessage"
        }
      ]
    },
    "PatientConnectFilterDO": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "dueFrom",
        "dueTo",
        "action",
        "programId",
        "attendingMOId",
        "locationId"
      ],
      "properties": {
        "dueFrom": {
          "type": "string",
          "format": "date-time"
        },
        "dueTo": {
          "type": "string",
          "format": "date-time"
        },
        "action": {
          "$ref": "#/definitions/PcAction"
        },
        "programId": {
          "type": "integer",
          "format": "int32"
        },
        "attendingMOId": {
          "type": "integer",
          "format": "int32"
        },
        "locationId": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "APIResponseOfIEnumerableOfPracticeWideConnectDO": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PracticeWideConnectDO"
          }
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ProvideErrorMessage"
        }
      ]
    },
    "PracticeWideConnectDO": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "id",
        "patientId",
        "isSelected",
        "connectStatus",
        "referenceDate",
        "nextConnectDue",
        "nextStep",
        "cycleCount",
        "deleted",
        "batchId"
      ],
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "patientId": {
          "type": "integer",
          "format": "int32"
        },
        "isSelected": {
          "type": "boolean"
        },
        "connectStatus": {
          "$ref": "#/definitions/ConnectStatus"
        },
        "status": {
          "type": "string"
        },
        "program": {
          "type": "string"
        },
        "patientName": {
          "type": "string"
        },
        "attendingMO": {
          "type": "string"
        },
        "locationName": {
          "type": "string"
        },
        "referenceDate": {
          "type": "string",
          "format": "date-time"
        },
        "nextConnectDue": {
          "type": "string",
          "format": "date-time"
        },
        "nextStep": {
          "type": "integer"
        },
        "cycleCount": {
          "type": "integer"
        },
        "nextActionDescription": {
          "type": "string"
        },
        "nextStepDescription": {
          "type": "string"
        },
        "userLastModified": {
          "type": "string"
        },
        "deleted": {
          "type": "boolean"
        },
        "batchId": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "PracticeWideBatchDO": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "batch": {
          "$ref": "#/definitions/PatientConnectBatchDO"
        },
        "practiceWideConnects": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PracticeWideConnectDO"
          }
        }
      }
    },
    "PatientConnectBatchDO": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "id",
        "dateCreated",
        "batching",
        "programId",
        "attendingMOId",
        "locationId",
        "processed"
      ],
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "dateCreated": {
          "type": "string",
          "format": "date-time"
        },
        "created": {
          "type": "string"
        },
        "userCreated": {
          "type": "string"
        },
        "note": {
          "type": "string"
        },
        "batching": {
          "type": "boolean"
        },
        "details": {
          "type": "string"
        },
        "programId": {
          "type": "integer",
          "format": "int32"
        },
        "program": {
          "type": "string"
        },
        "attendingMOId": {
          "type": "integer",
          "format": "int32"
        },
        "attendingMO": {
          "type": "string"
        },
        "locationId": {
          "type": "integer",
          "format": "int32"
        },
        "location": {
          "type": "string"
        },
        "processed": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "BatchFilterDO": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "fromDate",
        "toDate"
      ],
      "properties": {
        "fromDate": {
          "type": "string",
          "format": "date-time"
        },
        "toDate": {
          "type": "string",
          "format": "date-time"
        },
        "user": {
          "type": "string"
        },
        "selectedBatch": {
          "$ref": "#/definitions/PatientConnectBatchDO"
        }
      }
    },
    "APIResponseOfIEnumerableOfPatientConnectBatchDO": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PatientConnectBatchDO"
          }
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ProvideErrorMessage"
        }
      ]
    },
    "APIResponseOfDateTime": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "data"
      ],
      "properties": {
        "data": {
          "type": "string",
          "format": "date-time"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ProvideErrorMessage"
        }
      ]
    },
    "APIResponseOfIEnumerableOfProgramDO": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ProgramDO"
          }
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ProvideErrorMessage"
        }
      ]
    },
    "APIResponseOfIEnumerableOfProgramListItemDO": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ProgramListItemDO"
          }
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ProvideErrorMessage"
        }
      ]
    },
    "ProgramListItemDO": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "id"
      ],
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "reason": {
          "type": "string"
        }
      }
    },
    "APIResponseOfProgramDO": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "data": {
          "$ref": "#/definitions/ProgramDO"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ProvideErrorMessage"
        }
      ]
    },
    "APIResponseOfIEnumerableOfProgramTypeDO": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ProgramTypeDO"
          }
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ProvideErrorMessage"
        }
      ]
    },
    "ProgramTypeDO": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "id"
      ],
      "properties": {
        "id": {
          "$ref": "#/definitions/ProgramType"
        },
        "typeName": {
          "type": "string"
        }
      }
    },
    "APIResponseOfPcManagementDO": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "data": {
          "$ref": "#/definitions/PcManagementDO"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ProvideErrorMessage"
        }
      ]
    },
    "PcManagementDO": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "programs": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ProgramDO"
          }
        },
        "programTypes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ProgramTypeDO"
          }
        },
        "actionList": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PcActionDO"
          }
        },
        "letterTemplates": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/LetterTemplateDO"
          }
        },
        "smsTemplates": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "emailTemplates": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "replyContentList": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ReplyContentTypeDO"
          }
        },
        "allBookingTypes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SelectedBookingTypeDO"
          }
        },
        "programTypeColours": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PCProgramTypeColour"
          }
        }
      }
    },
    "PcActionDO": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "id"
      ],
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "actionName": {
          "type": "string"
        }
      }
    },
    "LetterTemplateDO": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "id"
      ],
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "templateDescription": {
          "type": "string"
        }
      }
    },
    "ReplyContentTypeDO": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "id"
      ],
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "content": {
          "type": "string"
        }
      }
    },
    "PCProgramTypeColour": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "pcColour"
      ],
      "properties": {
        "pcProgramType": {
          "type": "string"
        },
        "pcColour": {
          "type": "string"
        }
      }
    },
    "APIResponseOfIEnumerableOfSelectedBookingTypeDO": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SelectedBookingTypeDO"
          }
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ProvideErrorMessage"
        }
      ]
    },
    "APIResponseOfIEnumerableOfLetterTemplateDO": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/LetterTemplateDO"
          }
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ProvideErrorMessage"
        }
      ]
    },
    "APIResponseOfIEnumerableOfListItemDO": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ListItemDO"
          }
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ProvideErrorMessage"
        }
      ]
    },
    "APIResponseOfEffectedConnectsOnProgramDO": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "data": {
          "$ref": "#/definitions/EffectedConnectsOnProgramDO"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ProvideErrorMessage"
        }
      ]
    },
    "PatientProgramOnProgramQuery": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "programId",
        "pageIndex",
        "pageSize"
      ],
      "properties": {
        "programId": {
          "type": "integer",
          "format": "int32"
        },
        "pageIndex": {
          "type": "integer",
          "format": "int32"
        },
        "pageSize": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "APIResponseOfPatientProgramOnProgramResponse": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "data": {
          "$ref": "#/definitions/PatientProgramOnProgramResponse"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ProvideErrorMessage"
        }
      ]
    },
    "PatientProgramOnProgramResponse": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "programId",
        "totalPatientsOnProgram"
      ],
      "properties": {
        "programId": {
          "type": "integer",
          "format": "int32"
        },
        "totalPatientsOnProgram": {
          "type": "integer",
          "format": "int32"
        },
        "patientsOnProgram": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PatientProgramOnProgramDO"
          }
        }
      }
    },
    "PatientProgramOnProgramDO": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "programId",
        "seqNo",
        "id",
        "patientId",
        "actionDate",
        "step"
      ],
      "properties": {
        "programId": {
          "type": "integer",
          "format": "int32"
        },
        "seqNo": {
          "type": "integer",
          "format": "int32"
        },
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "patientId": {
          "type": "integer",
          "format": "int32"
        },
        "patientName": {
          "type": "string"
        },
        "actionDate": {
          "type": "string",
          "format": "date-time"
        },
        "step": {
          "type": "integer",
          "format": "int32"
        },
        "action": {
          "type": "string"
        }
      }
    },
    "MovingConnectsDO": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "currentProgramId",
        "patientCount",
        "moveToProgramId"
      ],
      "properties": {
        "currentProgramId": {
          "type": "integer",
          "format": "int32"
        },
        "currentProgramName": {
          "type": "string"
        },
        "patientCount": {
          "type": "integer",
          "format": "int32"
        },
        "moveToProgramId": {
          "type": "integer",
          "format": "int32"
        },
        "moveToProgramName": {
          "type": "string"
        },
        "moveToActions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/MoveToActionStep"
          }
        },
        "userLastModified": {
          "type": "string"
        },
        "movingConnectSteps": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/MovingStepDO"
          }
        }
      }
    },
    "MoveToActionStep": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "definitionStep"
      ],
      "properties": {
        "definitionStep": {
          "type": "integer",
          "format": "int32"
        },
        "actionSelectionName": {
          "type": "string"
        }
      }
    },
    "MovingStepDO": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "beforeMoveNextStep",
        "beforeMovePatientsOnStepCount",
        "afterMoveNextStep"
      ],
      "properties": {
        "beforeMoveNextStep": {
          "type": "integer",
          "format": "int32"
        },
        "beforeMoveStepName": {
          "type": "string"
        },
        "beforeMovePatientsOnStepCount": {
          "type": "integer",
          "format": "int32"
        },
        "afterMoveNextStep": {
          "type": "integer"
        }
      }
    },
    "APIResponseOfMovingConnectsDO": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "data": {
          "$ref": "#/definitions/MovingConnectsDO"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ProvideErrorMessage"
        }
      ]
    },
    "ReplyContentFilterDO": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "locationId": {
          "type": "integer",
          "format": "int32"
        },
        "attendingMOId": {
          "type": "integer",
          "format": "int32"
        },
        "programId": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "APIResponseOfIEnumerableOfReplyContentDO": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ReplyContentDO"
          }
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ProvideErrorMessage"
        }
      ]
    },
    "AddPatientApiRequestParams": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "patient_ID",
        "birthOrder"
      ],
      "properties": {
        "patient_ID": {
          "type": "integer",
          "format": "int32"
        },
        "company_ID": {
          "type": "integer",
          "format": "int32"
        },
        "firstName": {
          "type": "string"
        },
        "surname": {
          "type": "string"
        },
        "knownAs": {
          "type": "string"
        },
        "initials": {
          "type": "string"
        },
        "title": {
          "type": "string"
        },
        "sex": {
          "type": "string"
        },
        "dob": {
          "type": "string",
          "format": "date-time"
        },
        "ethnicity": {
          "type": "string"
        },
        "family_ID": {
          "type": "integer",
          "format": "int32"
        },
        "inFamily": {
          "type": "boolean"
        },
        "hasAlias": {
          "type": "boolean"
        },
        "mrn": {
          "type": "string"
        },
        "occupation": {
          "type": "string"
        },
        "patientType": {
          "type": "integer",
          "format": "int32"
        },
        "homePhone": {
          "type": "string"
        },
        "workPhone": {
          "type": "string"
        },
        "mobile": {
          "type": "string"
        },
        "homeFax": {
          "type": "string"
        },
        "workFax": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "pStatus": {
          "type": "string"
        },
        "dateDeceased": {
          "type": "string",
          "format": "date-time"
        },
        "dateCreated": {
          "type": "string",
          "format": "date-time"
        },
        "userCreated": {
          "type": "string"
        },
        "dateLastModified": {
          "type": "string",
          "format": "date-time"
        },
        "userLastModified": {
          "type": "string"
        },
        "note_ID": {
          "type": "integer",
          "format": "int32"
        },
        "snd_name": {
          "type": "string"
        },
        "cntBookingNoShow": {
          "type": "integer",
          "format": "int32"
        },
        "cntBookingCancel": {
          "type": "integer",
          "format": "int32"
        },
        "cntBookingChange": {
          "type": "integer",
          "format": "int32"
        },
        "medicare": {
          "type": "string"
        },
        "medicareRefNo": {
          "type": "string"
        },
        "mediExpYYYY": {
          "type": "integer",
          "format": "int32"
        },
        "mediExpMM": {
          "type": "integer",
          "format": "byte"
        },
        "medicareVerifyDate": {
          "type": "string",
          "format": "date-time"
        },
        "vetAffairs": {
          "type": "string"
        },
        "healthFundID": {
          "type": "integer",
          "format": "int32"
        },
        "fundNumber": {
          "type": "string"
        },
        "fundNumberUPI": {
          "type": "string"
        },
        "fundExpYYYY": {
          "type": "integer",
          "format": "int32"
        },
        "fundExpMM": {
          "type": "integer",
          "format": "byte"
        },
        "fundPlan": {
          "type": "integer",
          "format": "int32"
        },
        "feeTable_ID": {
          "type": "integer",
          "format": "int32"
        },
        "attendingMO": {
          "type": "integer",
          "format": "int32"
        },
        "primaryHealthProvider": {
          "type": "integer",
          "format": "int32"
        },
        "lastVisitGP": {
          "type": "string",
          "format": "date-time"
        },
        "treatmentLocation": {
          "type": "integer",
          "format": "int32"
        },
        "fullReg": {
          "type": "boolean"
        },
        "billingType": {
          "type": "integer",
          "format": "int32"
        },
        "hospitalBillingClass": {
          "type": "string"
        },
        "privacyDisclaimer": {
          "type": "boolean"
        },
        "archive": {
          "type": "boolean"
        },
        "pensionNumber": {
          "type": "string"
        },
        "commenced": {
          "type": "string",
          "format": "date-time"
        },
        "ceased": {
          "type": "string",
          "format": "date-time"
        },
        "userIdentifier1": {
          "type": "string"
        },
        "userIdentifier2": {
          "type": "string"
        },
        "extPatient_ID": {
          "type": "string"
        },
        "possibleDuplicate": {
          "type": "boolean"
        },
        "deleted": {
          "type": "boolean"
        },
        "deletionReason": {
          "type": "integer",
          "format": "int32"
        },
        "deletionNote": {
          "type": "integer",
          "format": "int32"
        },
        "deletionDate": {
          "type": "string",
          "format": "date-time"
        },
        "deletionUser": {
          "type": "string"
        },
        "jobtitle": {
          "type": "string"
        },
        "primaryPhone": {
          "type": "integer",
          "format": "byte"
        },
        "dateFirstBooking": {
          "type": "string",
          "format": "date-time"
        },
        "dateFirstInvoice": {
          "type": "string",
          "format": "date-time"
        },
        "alertBilling": {
          "type": "boolean"
        },
        "alertPatientNote": {
          "type": "boolean"
        },
        "alertUser1": {
          "type": "integer",
          "format": "byte"
        },
        "alertUser2": {
          "type": "integer",
          "format": "byte"
        },
        "ctimestamp": {
          "type": "string",
          "format": "byte"
        },
        "patientInfoForm": {
          "type": "boolean"
        },
        "inpatient": {
          "type": "boolean"
        },
        "ward": {
          "type": "string"
        },
        "dateLatestBooking": {
          "type": "string",
          "format": "date-time"
        },
        "noStatementDate": {
          "type": "string",
          "format": "date-time"
        },
        "noStatementReason": {
          "type": "string"
        },
        "accountHoldDate": {
          "type": "string",
          "format": "date-time"
        },
        "accountHoldReason": {
          "type": "string"
        },
        "programLatestExpiryDate": {
          "type": "string",
          "format": "date-time"
        },
        "chartDoNotMove": {
          "type": "boolean"
        },
        "lastSuccessfulPVM": {
          "type": "string",
          "format": "date-time"
        },
        "lastSuccessfulPVF": {
          "type": "string",
          "format": "date-time"
        },
        "lastSuccessfulOVV": {
          "type": "string",
          "format": "date-time"
        },
        "familyHistoryPresent": {
          "type": "boolean"
        },
        "allergiesPresent": {
          "type": "boolean"
        },
        "transport": {
          "type": "integer",
          "format": "int32"
        },
        "mrN_Feed": {
          "type": "integer",
          "format": "int32"
        },
        "birthOrder": {
          "type": "integer"
        },
        "allowAutomatedSMS": {
          "type": "boolean"
        },
        "surnameSoundex": {
          "type": "string"
        },
        "preferredPhone": {
          "type": "string"
        },
        "devicesNotRecorded": {
          "type": "integer",
          "format": "int32"
        },
        "clinicalNote": {
          "type": "integer",
          "format": "int32"
        },
        "dvaCardType": {
          "type": "integer",
          "format": "int32"
        },
        "hasCustomFieldAlerts": {
          "type": "boolean"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/BaseRequestParams"
        }
      ]
    },
    "AddPatientAliasRequestParams": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "alias_ID",
        "patient_ID",
        "readOnly"
      ],
      "properties": {
        "alias_ID": {
          "type": "integer",
          "format": "int32"
        },
        "patient_ID": {
          "type": "integer",
          "format": "int32"
        },
        "surname": {
          "type": "string"
        },
        "firstName": {
          "type": "string"
        },
        "alias_Comment": {
          "type": "string"
        },
        "alias_Type": {
          "type": "string"
        },
        "readOnly": {
          "type": "boolean"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/BaseRequestParams"
        }
      ]
    },
    "GetDoctorRegisterNumberFromProviderNumberApiRequestParams": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "providerNumber": {
          "type": "string"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/BaseRequestParams"
        }
      ]
    },
    "GetListItem": {
      "type": "object",
      "additionalProperties": false,
      "allOf": [
        {
          "$ref": "#/definitions/GetListItemParams"
        }
      ]
    },
    "GetListItemParams": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "valueLocation",
        "createIfMissing"
      ],
      "properties": {
        "listGroup": {
          "type": "string"
        },
        "listName": {
          "type": "string"
        },
        "valueToFind": {
          "type": "string"
        },
        "valueLocation": {
          "$ref": "#/definitions/ValueLocation"
        },
        "listToQuery": {
          "$ref": "#/definitions/ListToQuery"
        },
        "createIfMissing": {
          "type": "boolean"
        },
        "itemDisplayTextToSave": {
          "type": "string"
        },
        "feedID": {
          "type": "string"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/CorrelatableRequestParams"
        }
      ]
    },
    "ValueLocation": {
      "type": "integer",
      "description": "",
      "x-enumNames": [
        "Value",
        "AdditionalNotesOrDescription",
        "Comment",
        "ItemID"
      ],
      "enum": [
        0,
        1,
        2,
        3
      ]
    },
    "APIResponseOfGetListItemResult": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "data": {
          "$ref": "#/definitions/GetListItemResult"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ProvideErrorMessage"
        }
      ]
    },
    "GetListItemResult": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "list_ID",
        "itemID",
        "deleted",
        "displayOrder"
      ],
      "properties": {
        "list_ID": {
          "type": "integer",
          "format": "int32"
        },
        "listGroup": {
          "type": "string"
        },
        "listName": {
          "type": "string"
        },
        "itemID": {
          "type": "integer",
          "format": "int32"
        },
        "itemValue": {
          "type": "string"
        },
        "deleted": {
          "type": "boolean"
        },
        "displayOrder": {
          "type": "integer",
          "format": "int32"
        },
        "additionalNotesOrDescription": {
          "type": "string"
        },
        "comment": {
          "type": "string"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ProvideErrorMessage"
        }
      ]
    },
    "GetPatientNote": {
      "type": "object",
      "additionalProperties": false,
      "allOf": [
        {
          "$ref": "#/definitions/GetPatientNoteParams"
        }
      ]
    },
    "GetPatientNoteParams": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "patientId": {
          "type": "string"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/CorrelatableRequestParams"
        }
      ]
    },
    "APIResponseOfGetPatientNoteResult": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "data": {
          "$ref": "#/definitions/GetPatientNoteResult"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ProvideErrorMessage"
        }
      ]
    },
    "GetPatientNoteResult": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "note_Id",
        "archive",
        "dateCreated",
        "dateLastModified"
      ],
      "properties": {
        "note_Id": {
          "type": "integer",
          "format": "int32"
        },
        "noteText": {
          "type": "string"
        },
        "noteAttribute": {
          "type": "string"
        },
        "archive": {
          "type": "boolean"
        },
        "userCreated": {
          "type": "string"
        },
        "dateCreated": {
          "type": "string",
          "format": "date-time"
        },
        "userLastModified": {
          "type": "string"
        },
        "dateLastModified": {
          "type": "string",
          "format": "date-time"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ProvideErrorMessage"
        }
      ]
    },
    "GetHL7ItemMappingApiRequestParams": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "feedID",
        "itemID"
      ],
      "properties": {
        "feedID": {
          "type": "integer",
          "format": "int32"
        },
        "itemValue": {
          "type": "string"
        },
        "itemID": {
          "type": "integer",
          "format": "int32"
        },
        "returnMode": {
          "$ref": "#/definitions/HL7ItemReturnMode"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/BaseRequestParams"
        }
      ]
    },
    "HL7ItemReturnMode": {
      "type": "integer",
      "description": "",
      "x-enumNames": [
        "Number_ID",
        "Text_ID"
      ],
      "enum": [
        0,
        1
      ]
    },
    "AddPatientMergeRequest": {
      "type": "object",
      "additionalProperties": false,
      "allOf": [
        {
          "$ref": "#/definitions/AddPatientMergeRequestParams"
        }
      ]
    },
    "AddPatientMergeRequestParams": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "fromPatientID",
        "toPatientID"
      ],
      "properties": {
        "sourceRequested": {
          "type": "string"
        },
        "sourceMessageID": {
          "type": "string"
        },
        "fromPatientID": {
          "type": "integer",
          "format": "int32"
        },
        "toPatientID": {
          "type": "integer",
          "format": "int32"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/BaseRequestParams"
        }
      ]
    },
    "UnMergeHealthTrackPatientRequestParams": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "unlinkFeed_ID",
        "activePatientID"
      ],
      "properties": {
        "unlinkRemotePatient_ID": {
          "type": "string"
        },
        "unlinkFeed_ID": {
          "type": "integer",
          "format": "int32"
        },
        "activePatientID": {
          "type": "integer",
          "format": "int32"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/BaseRequestParams"
        }
      ]
    },
    "NextOfKinApiRequestParams": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "patient_ID",
        "nokIndex"
      ],
      "properties": {
        "patient_ID": {
          "type": "integer",
          "format": "int32"
        },
        "nokIndex": {
          "type": "integer",
          "format": "byte"
        },
        "title": {
          "type": "string"
        },
        "firstName": {
          "type": "string"
        },
        "surname": {
          "type": "string"
        },
        "relationship": {
          "type": "string"
        },
        "homePhone": {
          "type": "string"
        },
        "mobile": {
          "type": "string"
        },
        "workPhone": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "archive": {
          "type": "boolean"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/BaseRequestParams"
        }
      ]
    },
    "AddOrUpdatePatientMapping": {
      "type": "object",
      "additionalProperties": false,
      "allOf": [
        {
          "$ref": "#/definitions/AddOrUpdatePatientMappingParams"
        }
      ]
    },
    "AddOrUpdatePatientMappingParams": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "feed_ID",
        "owner",
        "birthOrder",
        "systemMatched",
        "userMatched",
        "userCannotMatch",
        "merged",
        "inErrorCode",
        "deleted"
      ],
      "properties": {
        "feed_ID": {
          "type": "integer",
          "format": "int32"
        },
        "remotePatient_ID": {
          "type": "string"
        },
        "patientIdentifierList": {
          "type": "string"
        },
        "localPatient_ID": {
          "type": "integer",
          "format": "int32"
        },
        "owner": {
          "type": "boolean"
        },
        "assigningAuthority": {
          "type": "string"
        },
        "medicare": {
          "type": "string"
        },
        "firstName": {
          "type": "string"
        },
        "surname": {
          "type": "string"
        },
        "middleName": {
          "type": "string"
        },
        "gender": {
          "type": "string"
        },
        "dateOfBirth": {
          "type": "string",
          "format": "date-time"
        },
        "birthOrder": {
          "type": "integer"
        },
        "addrStreet": {
          "type": "string"
        },
        "addrCity": {
          "type": "string"
        },
        "addrState": {
          "type": "string"
        },
        "addrPostCode": {
          "type": "string"
        },
        "homePhone": {
          "type": "string"
        },
        "workPhone": {
          "type": "string"
        },
        "messageCode": {
          "type": "string"
        },
        "triggerEvent": {
          "type": "string"
        },
        "systemMatched": {
          "type": "boolean"
        },
        "userMatched": {
          "type": "boolean"
        },
        "username": {
          "type": "string"
        },
        "userCannotMatch": {
          "type": "boolean"
        },
        "possibleDuplicate": {
          "type": "boolean"
        },
        "merged": {
          "type": "boolean"
        },
        "inErrorCode": {
          "type": "integer"
        },
        "dateCreated": {
          "type": "string",
          "format": "date-time"
        },
        "dateModified": {
          "type": "string",
          "format": "date-time"
        },
        "deleted": {
          "type": "boolean"
        },
        "deletedUser": {
          "type": "string"
        },
        "deletedDate": {
          "type": "string",
          "format": "date-time"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/BaseRequestParams"
        }
      ]
    },
    "MoveMRNOntoPatient": {
      "type": "object",
      "additionalProperties": false,
      "allOf": [
        {
          "$ref": "#/definitions/MoveMRNOntoPatientParams"
        }
      ]
    },
    "MoveMRNOntoPatientParams": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "targetPatient_ID",
        "feed_ID",
        "birthOrder"
      ],
      "properties": {
        "assigningAuthorityNamespaceIdValue": {
          "type": "string"
        },
        "identifierTypeCodeValue": {
          "type": "string"
        },
        "assigningFacilityNamespaceIDValue": {
          "type": "string"
        },
        "patientIdentifier": {
          "type": "string"
        },
        "targetPatient_ID": {
          "type": "integer",
          "format": "int32"
        },
        "feed_ID": {
          "type": "integer",
          "format": "int32"
        },
        "surname": {
          "type": "string"
        },
        "firstName": {
          "type": "string"
        },
        "dateOfBirth": {
          "type": "string",
          "format": "date-time"
        },
        "medicare": {
          "type": "string"
        },
        "gender": {
          "type": "string"
        },
        "birthOrder": {
          "type": "integer"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/BaseRequestParams"
        }
      ]
    },
    "GetPatientAddressesRequestParams": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "familyID"
      ],
      "properties": {
        "familyID": {
          "type": "integer",
          "format": "int32"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/BaseRequestParams"
        }
      ]
    },
    "APIResponseOfAddressResponseOf": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AddressResponse"
          }
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ProvideErrorMessage"
        }
      ]
    },
    "AddressResponse": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "owner_ID",
        "addressType"
      ],
      "properties": {
        "owner_ID": {
          "type": "integer",
          "format": "int32"
        },
        "addressType": {
          "type": "integer",
          "format": "int32"
        },
        "primaryAddress": {
          "type": "boolean"
        },
        "invoiceAddress": {
          "type": "boolean"
        },
        "mailingAddress": {
          "type": "boolean"
        },
        "address1": {
          "type": "string"
        },
        "address2": {
          "type": "string"
        },
        "suburb": {
          "type": "string"
        },
        "postcode": {
          "type": "string"
        },
        "country": {
          "type": "string"
        },
        "state": {
          "type": "string"
        },
        "department": {
          "type": "string"
        },
        "description": {
          "type": "string"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/BaseRequestParams"
        }
      ]
    },
    "GetExternalFeedRequestParams": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "feedID"
      ],
      "properties": {
        "feedID": {
          "type": "integer",
          "format": "int32"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/BaseRequestParams"
        }
      ]
    },
    "APIResponseOfExternal_Feed_ConfigResponse": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "data": {
          "$ref": "#/definitions/External_Feed_ConfigResponse"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ProvideErrorMessage"
        }
      ]
    },
    "External_Feed_ConfigResponse": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "feed_ID",
        "service_ID",
        "feed_Type",
        "embedded_Files",
        "feed_Enabled",
        "requestForm_Enabled",
        "warnOperatorIfNoActivity",
        "userDefined",
        "logging_Enabled",
        "mrnPatientMatch",
        "generateFillerCode",
        "ignoreSystemMatch",
        "disable_ClinicalRecordMove",
        "supportsHMSOrder",
        "hT_MRN",
        "demographicsMRN",
        "supportsMultipleTestTypes",
        "canBeVerified"
      ],
      "properties": {
        "feed_ID": {
          "type": "integer",
          "format": "int32"
        },
        "service_Category": {
          "type": "integer",
          "format": "int32"
        },
        "service_Name": {
          "type": "string"
        },
        "service_ID": {
          "type": "integer",
          "format": "int32"
        },
        "feed_Type": {
          "type": "integer",
          "format": "int32"
        },
        "feed_InDirectory": {
          "type": "string"
        },
        "feed_OutDirectory": {
          "type": "string"
        },
        "feed_OutHostname": {
          "type": "string"
        },
        "feed_OutPort": {
          "type": "integer",
          "format": "int32"
        },
        "location_ID": {
          "type": "integer",
          "format": "int32"
        },
        "doctor_ID": {
          "type": "integer",
          "format": "int32"
        },
        "embedded_Files": {
          "type": "boolean"
        },
        "feed_Provider": {
          "type": "integer",
          "format": "int32"
        },
        "feed_Enabled": {
          "type": "boolean"
        },
        "requestForm_Enabled": {
          "type": "boolean"
        },
        "feed_BackupDirectory": {
          "type": "string"
        },
        "modifiedDate": {
          "type": "string",
          "format": "date-time"
        },
        "modifiedUser": {
          "type": "string"
        },
        "requestForm": {
          "type": "string"
        },
        "lastActivityDateTime": {
          "type": "string",
          "format": "date-time"
        },
        "lastWarningDateTime": {
          "type": "string",
          "format": "date-time"
        },
        "warnOperatorIfNoActivity": {
          "type": "boolean"
        },
        "warnThresholdHours": {
          "type": "integer",
          "format": "int32"
        },
        "warnHoursBetweenWarnings": {
          "type": "integer",
          "format": "int32"
        },
        "warnStartHour": {
          "type": "integer",
          "format": "byte"
        },
        "warnStopHour": {
          "type": "integer",
          "format": "byte"
        },
        "warnEmailAddresses": {
          "type": "string"
        },
        "synopsisPrefix": {
          "type": "string"
        },
        "d_type": {
          "type": "integer",
          "format": "int32"
        },
        "onPatientFind": {
          "type": "string"
        },
        "onPatientFindQuery": {
          "type": "string"
        },
        "onClinicalRecord": {
          "type": "string"
        },
        "sqlConnectionString": {
          "type": "string"
        },
        "feed_ReprocessDirectory": {
          "type": "string"
        },
        "mappingFeed_ID": {
          "type": "integer",
          "format": "int32"
        },
        "userDefined": {
          "type": "boolean"
        },
        "logging_Enabled": {
          "type": "boolean"
        },
        "keepMessagesDays": {
          "type": "integer",
          "format": "int32"
        },
        "previewLOINCS": {
          "type": "string"
        },
        "mrnPatientMatch": {
          "type": "boolean"
        },
        "generateFillerCode": {
          "type": "boolean"
        },
        "ignoreSystemMatch": {
          "type": "boolean"
        },
        "disable_ClinicalRecordMove": {
          "type": "boolean"
        },
        "supportsHMSOrder": {
          "type": "boolean"
        },
        "assigningAuthority": {
          "type": "string"
        },
        "outboundAssigningAuthority": {
          "type": "string"
        },
        "groupFeed_ID": {
          "type": "integer",
          "format": "int32"
        },
        "hT_MRN": {
          "type": "boolean"
        },
        "fileLayout": {
          "type": "string"
        },
        "demographicsMRN": {
          "type": "boolean"
        },
        "supportsMultipleTestTypes": {
          "type": "boolean"
        },
        "canBeVerified": {
          "type": "boolean"
        }
      }
    },
    "GetGroupedFeeds": {
      "type": "object",
      "additionalProperties": false,
      "allOf": [
        {
          "$ref": "#/definitions/GetGroupedFeedsParams"
        }
      ]
    },
    "GetGroupedFeedsParams": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "feedID"
      ],
      "properties": {
        "feedID": {
          "type": "integer",
          "format": "int32"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/BaseRequestParams"
        }
      ]
    },
    "APIResponseOfExternal_Feed_ConfigResponseOf": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/External_Feed_ConfigResponse"
          }
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ProvideErrorMessage"
        }
      ]
    },
    "FindHealthTrackPatientParameters": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "surname": {
          "type": "string"
        },
        "firstname": {
          "type": "string"
        },
        "medicare": {
          "type": "string"
        },
        "dateOfBirth": {
          "type": "string",
          "format": "date-time"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/BaseRequestParams"
        }
      ]
    },
    "FindHealthTrackPatientMappingRequestParams": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "feed_ID"
      ],
      "properties": {
        "feed_ID": {
          "type": "integer",
          "format": "int32"
        },
        "mrn": {
          "type": "string"
        },
        "surname": {
          "type": "string"
        },
        "dateOfBirth": {
          "type": "string",
          "format": "date-time"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/BaseRequestParams"
        }
      ]
    },
    "APIResponseOfHL7_PatientMappingResponse": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "data": {
          "$ref": "#/definitions/HL7_PatientMappingResponse"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ProvideErrorMessage"
        }
      ]
    },
    "HL7_PatientMappingResponse": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "feed_ID",
        "owner",
        "birthOrder",
        "systemMatched",
        "userMatched",
        "userCannotMatch",
        "merged",
        "inErrorCode",
        "deleted"
      ],
      "properties": {
        "feed_ID": {
          "type": "integer",
          "format": "int32"
        },
        "remotePatient_ID": {
          "type": "string"
        },
        "patientIdentifierList": {
          "type": "string"
        },
        "localPatient_ID": {
          "type": "integer",
          "format": "int32"
        },
        "owner": {
          "type": "boolean"
        },
        "assigningAuthority": {
          "type": "string"
        },
        "medicare": {
          "type": "string"
        },
        "firstName": {
          "type": "string"
        },
        "surname": {
          "type": "string"
        },
        "middleName": {
          "type": "string"
        },
        "gender": {
          "type": "string"
        },
        "dateOfBirth": {
          "type": "string",
          "format": "date-time"
        },
        "birthOrder": {
          "type": "integer"
        },
        "addrStreet": {
          "type": "string"
        },
        "addrCity": {
          "type": "string"
        },
        "addrState": {
          "type": "string"
        },
        "addrPostCode": {
          "type": "string"
        },
        "homePhone": {
          "type": "string"
        },
        "workPhone": {
          "type": "string"
        },
        "messageCode": {
          "type": "string"
        },
        "triggerEvent": {
          "type": "string"
        },
        "systemMatched": {
          "type": "boolean"
        },
        "userMatched": {
          "type": "boolean"
        },
        "username": {
          "type": "string"
        },
        "userCannotMatch": {
          "type": "boolean"
        },
        "possibleDuplicate": {
          "type": "boolean"
        },
        "merged": {
          "type": "boolean"
        },
        "inErrorCode": {
          "type": "integer"
        },
        "dateCreated": {
          "type": "string",
          "format": "date-time"
        },
        "dateModified": {
          "type": "string",
          "format": "date-time"
        },
        "deleted": {
          "type": "boolean"
        },
        "deletedUser": {
          "type": "string"
        },
        "deletedDate": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "AddAdmissionsApiRequestParams": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "admission_ID",
        "admission_State",
        "patient_ID",
        "preAdmissionAssessmentComplete",
        "codingComplete",
        "hospitalStayBillingComplete",
        "hospitalBillingComplete",
        "reportingComplete",
        "isTransferred"
      ],
      "properties": {
        "admission_ID": {
          "type": "integer",
          "format": "int32"
        },
        "admission_State": {
          "type": "integer",
          "format": "byte"
        },
        "patient_ID": {
          "type": "integer",
          "format": "int32"
        },
        "episode_ID": {
          "type": "integer",
          "format": "int32"
        },
        "referral_ID": {
          "type": "integer",
          "format": "int32"
        },
        "adT_Hospital_ID": {
          "type": "integer",
          "format": "int32"
        },
        "adT_Unit": {
          "type": "integer",
          "format": "int32"
        },
        "adT_Ward": {
          "type": "integer",
          "format": "int32"
        },
        "adT_Bed": {
          "type": "string"
        },
        "hosp_AdmissionNum": {
          "type": "string"
        },
        "dateTime_Admission": {
          "type": "string",
          "format": "date-time"
        },
        "userCreated_admission": {
          "type": "string"
        },
        "dateCreated_admission": {
          "type": "string",
          "format": "date-time"
        },
        "deleted": {
          "type": "boolean"
        },
        "deletionDate": {
          "type": "string",
          "format": "date-time"
        },
        "deletionUser": {
          "type": "string"
        },
        "userLastModified_admission": {
          "type": "string"
        },
        "dateLastModified_admission": {
          "type": "string",
          "format": "date-time"
        },
        "adT_Status": {
          "type": "integer",
          "format": "int32"
        },
        "adT_Class": {
          "type": "integer",
          "format": "int32"
        },
        "hosp_MRN": {
          "type": "string"
        },
        "hosp_MRN_Alt": {
          "type": "string"
        },
        "hosp_TransferFrom": {
          "type": "string"
        },
        "admission_Indication_Code": {
          "type": "integer",
          "format": "int32"
        },
        "admission_Indication_Description": {
          "type": "string"
        },
        "admission_Procedure_Code": {
          "type": "integer",
          "format": "int32"
        },
        "admission_Procedure_Description": {
          "type": "string"
        },
        "admission_Diagnosis_Code": {
          "type": "integer",
          "format": "int32"
        },
        "admission_Diagnosis_Description": {
          "type": "string"
        },
        "mO_Admitting": {
          "type": "integer",
          "format": "int32"
        },
        "mO_Attending": {
          "type": "integer",
          "format": "int32"
        },
        "mO_Consultant": {
          "type": "integer",
          "format": "int32"
        },
        "mO_Surgeon": {
          "type": "integer",
          "format": "int32"
        },
        "admission_Complications": {
          "type": "integer",
          "format": "int32"
        },
        "admission_Notes": {
          "type": "string"
        },
        "dateTime_Discharge": {
          "type": "string",
          "format": "date-time"
        },
        "discharge_To": {
          "type": "integer",
          "format": "int32"
        },
        "discharge_Transfer": {
          "type": "integer",
          "format": "int32"
        },
        "discharge_Status": {
          "type": "string"
        },
        "discharge_Diagnosis_Code": {
          "type": "integer",
          "format": "int32"
        },
        "discharge_Diagnosis_Description": {
          "type": "string"
        },
        "discharge_Notes": {
          "type": "string"
        },
        "userCreated_Discharge": {
          "type": "string"
        },
        "dateCreated_Discharge": {
          "type": "string",
          "format": "date-time"
        },
        "userLastModified_Discharge": {
          "type": "string"
        },
        "dateLastModified_Discharge": {
          "type": "string",
          "format": "date-time"
        },
        "admittingMOType": {
          "type": "string"
        },
        "attendingMOType": {
          "type": "string"
        },
        "consultingMOType": {
          "type": "string"
        },
        "surgeonType": {
          "type": "string"
        },
        "hospitalBillingClass": {
          "type": "string"
        },
        "preAdmissionAssessmentComplete": {
          "type": "boolean"
        },
        "codingComplete": {
          "type": "boolean"
        },
        "hospitalStayBillingComplete": {
          "type": "boolean"
        },
        "hospitalBillingComplete": {
          "type": "boolean"
        },
        "reportingComplete": {
          "type": "boolean"
        },
        "isTransferred": {
          "type": "boolean"
        },
        "date_ExpectedDischarge": {
          "type": "string",
          "format": "date-time"
        },
        "dischargeIntention": {
          "type": "integer",
          "format": "byte"
        },
        "urgencyOfAdmission": {
          "type": "integer",
          "format": "byte"
        },
        "sourceOfReferral": {
          "type": "integer",
          "format": "byte"
        },
        "mentalHealthLegalStatus": {
          "type": "integer",
          "format": "byte"
        },
        "readmissionWithin28Days": {
          "type": "integer",
          "format": "byte"
        },
        "modeOfSeparation": {
          "type": "integer",
          "format": "byte"
        },
        "sameDayStatus": {
          "type": "integer",
          "format": "byte"
        },
        "admissionType": {
          "type": "integer",
          "format": "byte"
        },
        "drType": {
          "type": "integer",
          "format": "byte"
        },
        "accommodation": {
          "type": "integer",
          "format": "byte"
        },
        "fundedBy": {
          "type": "integer",
          "format": "byte"
        },
        "eligibilityLevel": {
          "type": "integer",
          "format": "byte"
        },
        "mechanicalVentilationHrs": {
          "type": "integer"
        },
        "submission_Status": {
          "type": "string"
        },
        "iscMaritalStatus": {
          "type": "integer",
          "format": "byte"
        },
        "iscIndigenousOrigin": {
          "type": "integer",
          "format": "byte"
        },
        "iscCountryOfBirth": {
          "type": "integer",
          "format": "int32"
        },
        "iscLanguageSpokenAtHome": {
          "type": "integer",
          "format": "byte"
        },
        "iscHealthInsuranceStatus": {
          "type": "integer",
          "format": "byte"
        },
        "iscPaymentStatusOnSeparation": {
          "type": "integer",
          "format": "byte"
        },
        "iscDateOfFirstProcedure": {
          "type": "string",
          "format": "date-time"
        },
        "iscState": {
          "type": "integer",
          "format": "byte"
        },
        "phiscoCountryOfBirth": {
          "type": "integer",
          "format": "int32"
        },
        "phiscoLanguageSpokenAtHome": {
          "type": "integer",
          "format": "int32"
        },
        "phiscoHealthInsuranceStatus": {
          "type": "integer",
          "format": "byte"
        },
        "drgCode": {
          "type": "string"
        },
        "drgVersion": {
          "type": "string"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/BaseRequestParams"
        }
      ]
    },
    "AddOrUpdatePatientMembershipCard": {
      "type": "object",
      "additionalProperties": false,
      "allOf": [
        {
          "$ref": "#/definitions/AddOrUpdatePatientMembershipCardParams"
        }
      ]
    },
    "AddOrUpdatePatientMembershipCardParams": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "card_ID",
        "patient_ID",
        "cardType",
        "deleted"
      ],
      "properties": {
        "card_ID": {
          "type": "integer",
          "format": "int64"
        },
        "patient_ID": {
          "type": "integer",
          "format": "int32"
        },
        "cardType": {
          "type": "integer",
          "format": "int32"
        },
        "cardNumber": {
          "type": "string"
        },
        "individualReferenceNumber": {
          "type": "string"
        },
        "validTo": {
          "type": "string",
          "format": "date-time"
        },
        "validFrom": {
          "type": "string",
          "format": "date-time"
        },
        "deleted": {
          "type": "boolean"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/BaseRequestParams"
        }
      ]
    },
    "APIResponseOfAddOrUpdatePatientMembershipCardResult": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "data": {
          "$ref": "#/definitions/AddOrUpdatePatientMembershipCardResult"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ProvideErrorMessage"
        }
      ]
    },
    "AddOrUpdatePatientMembershipCardResult": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "card_ID"
      ],
      "properties": {
        "card_ID": {
          "type": "integer",
          "format": "int64"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ProvideErrorMessage"
        }
      ]
    },
    "PatientSearch": {
      "type": "object",
      "additionalProperties": false,
      "allOf": [
        {
          "$ref": "#/definitions/PatientSearchParams"
        }
      ]
    },
    "PatientSearchParams": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "dateOfBirth",
        "useSoundsLikeSearch"
      ],
      "properties": {
        "patientID": {
          "type": "string"
        },
        "mrn": {
          "type": "string"
        },
        "surname": {
          "type": "string"
        },
        "firstname": {
          "type": "string"
        },
        "dateOfBirth": {
          "type": "string",
          "format": "date-time"
        },
        "medicareNumber": {
          "type": "string"
        },
        "useSoundsLikeSearch": {
          "type": "boolean"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/CorrelatableRequestParams"
        }
      ]
    },
    "APIResponseOfPatientSearchResult": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "data": {
          "$ref": "#/definitions/PatientSearchResult"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ProvideErrorMessage"
        }
      ]
    },
    "PatientSearchResult": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "results": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PatientListDataItem"
          }
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ProvideErrorMessage"
        }
      ]
    },
    "PatientListDataItem": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "isAlias",
        "rowItemType"
      ],
      "properties": {
        "surname": {
          "type": "string"
        },
        "firstname": {
          "type": "string"
        },
        "dob": {
          "type": "string",
          "format": "date-time"
        },
        "mrn": {
          "type": "string"
        },
        "formattedAddress": {
          "type": "string"
        },
        "localPatient_ID": {
          "type": "string"
        },
        "externalSystem": {
          "type": "string"
        },
        "external_ID": {
          "type": "string"
        },
        "isAlias": {
          "type": "boolean"
        },
        "pStatus": {
          "type": "string"
        },
        "rowItemType": {
          "$ref": "#/definitions/ItemType"
        },
        "remotePatientMapping": {
          "$ref": "#/definitions/MRNDataItem"
        }
      }
    },
    "ItemType": {
      "type": "integer",
      "description": "",
      "x-enumNames": [
        "HL7_Mapping",
        "PatientSearchRow",
        "PatientInfo",
        "SQLDataRow"
      ],
      "enum": [
        0,
        1,
        2,
        3
      ]
    },
    "MRNDataItem": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "mrnFeedID",
        "owner",
        "merged"
      ],
      "properties": {
        "mrn": {
          "type": "string"
        },
        "mrnFeedID": {
          "type": "integer",
          "format": "int32"
        },
        "mrnFeedName": {
          "type": "string"
        },
        "owner": {
          "type": "boolean"
        },
        "merged": {
          "type": "boolean"
        }
      }
    },
    "APIResponseOfQuestionnaireInstanceDO": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "data": {
          "$ref": "#/definitions/QuestionnaireInstanceDO"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ProvideErrorMessage"
        }
      ]
    },
    "QuestionnaireInstanceDO": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "templateId",
        "createDateTime",
        "saveDateTime",
        "deleted"
      ],
      "properties": {
        "instanceNumber": {
          "type": "integer",
          "format": "int32"
        },
        "templateId": {
          "type": "integer",
          "format": "int32"
        },
        "status": {
          "type": "string"
        },
        "result": {
          "type": "string"
        },
        "createDateTime": {
          "type": "string",
          "format": "date-time"
        },
        "saveDateTime": {
          "type": "string",
          "format": "date-time"
        },
        "source": {
          "type": "string"
        },
        "instanceId": {
          "type": "string",
          "format": "guid"
        },
        "patientId": {
          "type": "integer",
          "format": "int32"
        },
        "bookingId": {
          "type": "integer",
          "format": "int32"
        },
        "userCreated": {
          "type": "string"
        },
        "dateLastModified": {
          "type": "string",
          "format": "date-time"
        },
        "userLastModified": {
          "type": "string"
        },
        "deleted": {
          "type": "boolean"
        },
        "deletionDate": {
          "type": "string",
          "format": "date-time"
        },
        "deletionUser": {
          "type": "string"
        },
        "optionalPin": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "APIResponseOfQuestionnaireTemplateDO": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "data": {
          "$ref": "#/definitions/QuestionnaireTemplateDO"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ProvideErrorMessage"
        }
      ]
    },
    "QuestionnaireTemplateDO": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "templateType",
        "prefill",
        "usePin",
        "deleted",
        "recordSubCategory",
        "requiresReview"
      ],
      "properties": {
        "templateId": {
          "type": "integer",
          "format": "int32"
        },
        "templateType": {
          "type": "integer",
          "format": "int32"
        },
        "templateDescription": {
          "type": "string"
        },
        "templatePages": {
          "type": "string"
        },
        "expiry": {
          "type": "integer",
          "format": "int32"
        },
        "defaultMessage": {
          "type": "string"
        },
        "prefill": {
          "type": "boolean"
        },
        "usePin": {
          "type": "boolean"
        },
        "dateCreated": {
          "type": "string",
          "format": "date-time"
        },
        "userCreated": {
          "type": "string"
        },
        "dateLastModified": {
          "type": "string",
          "format": "date-time"
        },
        "userLastModified": {
          "type": "string"
        },
        "deleted": {
          "type": "boolean"
        },
        "deletionDate": {
          "type": "string",
          "format": "date-time"
        },
        "deletionUser": {
          "type": "string"
        },
        "recordSubCategory": {
          "type": "integer",
          "format": "int32"
        },
        "class": {
          "type": "string"
        },
        "requiresReview": {
          "type": "boolean"
        }
      }
    },
    "APIResponseOfListOfQuestionnaireTemplateDO": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/QuestionnaireTemplateDO"
          }
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ProvideErrorMessage"
        }
      ]
    },
    "APIResponseOfTemplateSubRecordTypesResponse": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "data": {
          "$ref": "#/definitions/TemplateSubRecordTypesResponse"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ProvideErrorMessage"
        }
      ]
    },
    "TemplateSubRecordTypesResponse": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "defaultRecordSubcategory"
      ],
      "properties": {
        "subRecordTypesDictionary": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SRTypeTitleCombo"
          }
        },
        "defaultRecordSubcategory": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "SRTypeTitleCombo": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "recordSubCategory"
      ],
      "properties": {
        "title": {
          "type": "string"
        },
        "recordSubCategory": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "GetAllReferringDoctors": {
      "type": "object",
      "additionalProperties": false,
      "allOf": [
        {
          "$ref": "#/definitions/GetAllReferringDoctorsParams"
        }
      ]
    },
    "GetAllReferringDoctorsParams": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "givennamesContains": {
          "type": "string"
        },
        "surnameContains": {
          "type": "string"
        },
        "providerNumberContains": {
          "type": "string"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/CorrelatableRequestParams"
        }
      ]
    },
    "APIResponseOfGetAllReferringDoctorsResult": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "data": {
          "$ref": "#/definitions/GetAllReferringDoctorsResult"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ProvideErrorMessage"
        }
      ]
    },
    "GetAllReferringDoctorsResult": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "results": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ReferringDoctorInfo"
          }
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ProvideErrorMessage"
        }
      ]
    },
    "ReferringDoctorInfo": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "reqdoctorno"
      ],
      "properties": {
        "reqdoctorno": {
          "type": "integer",
          "format": "int32"
        },
        "reqdoccode": {
          "type": "string"
        },
        "surname": {
          "type": "string"
        },
        "givennames": {
          "type": "string"
        },
        "prefname": {
          "type": "string"
        },
        "provno": {
          "type": "string"
        },
        "provno_stem": {
          "type": "string"
        },
        "title": {
          "type": "string"
        },
        "companyname": {
          "type": "string"
        },
        "displayname": {
          "type": "string"
        }
      }
    },
    "AddOrUpdateReferringDoctor": {
      "type": "object",
      "additionalProperties": false,
      "allOf": [
        {
          "$ref": "#/definitions/AddOrUpdateReferringDoctorParams"
        }
      ]
    },
    "AddOrUpdateReferringDoctorParams": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "givennames": {
          "type": "string"
        },
        "surname": {
          "type": "string"
        },
        "providerNumber": {
          "type": "string"
        },
        "assistant": {
          "type": "integer",
          "format": "byte"
        },
        "co_name": {
          "type": "string"
        },
        "co_title": {
          "type": "string"
        },
        "companyname": {
          "type": "string"
        },
        "contact": {
          "type": "string"
        },
        "dateCreated": {
          "type": "string",
          "format": "date-time"
        },
        "dateLastModified": {
          "type": "string",
          "format": "date-time"
        },
        "datestamp": {
          "type": "string",
          "format": "date-time"
        },
        "deleted": {
          "type": "boolean"
        },
        "deletionDate": {
          "type": "string",
          "format": "date-time"
        },
        "deletionUser": {
          "type": "string"
        },
        "displayname": {
          "type": "string"
        },
        "dR_ValidTo": {
          "type": "string",
          "format": "date-time"
        },
        "eC_ePostCopy": {
          "type": "boolean"
        },
        "eC_ForceDischargeReferral": {
          "type": "boolean"
        },
        "eC_ManualCopy": {
          "type": "boolean"
        },
        "eC_Method": {
          "type": "integer",
          "format": "int32"
        },
        "eC_Username": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "emailrunno": {
          "type": "integer",
          "format": "int32"
        },
        "extDoctor_ID": {
          "type": "string"
        },
        "healthconnect": {
          "type": "integer",
          "format": "byte"
        },
        "hlink": {
          "type": "string"
        },
        "hlinkrunno": {
          "type": "integer",
          "format": "int32"
        },
        "import": {
          "type": "string"
        },
        "importdir": {
          "type": "string"
        },
        "inactive": {
          "type": "integer",
          "format": "byte"
        },
        "isLinkedToDoctorNumber": {
          "type": "boolean"
        },
        "notes": {
          "type": "string"
        },
        "otherallow": {
          "type": "string"
        },
        "otherlistorder": {
          "type": "string"
        },
        "othernoprintdoctor": {
          "type": "integer",
          "format": "byte"
        },
        "otherrequestform": {
          "type": "string"
        },
        "othertransport": {
          "type": "integer",
          "format": "int32"
        },
        "pagerno": {
          "type": "string"
        },
        "pathallow": {
          "type": "integer",
          "format": "byte"
        },
        "pathlistorder": {
          "type": "string"
        },
        "pathnoprintdoctor": {
          "type": "integer",
          "format": "byte"
        },
        "pathrequestform": {
          "type": "string"
        },
        "pathtransport": {
          "type": "integer",
          "format": "int32"
        },
        "phonea": {
          "type": "string"
        },
        "phonef": {
          "type": "string"
        },
        "phoneh": {
          "type": "string"
        },
        "phonem": {
          "type": "string"
        },
        "phonep": {
          "type": "string"
        },
        "phonew": {
          "type": "string"
        },
        "postcode": {
          "type": "string"
        },
        "postcode_2": {
          "type": "integer"
        },
        "prefname": {
          "type": "string"
        },
        "privacy": {
          "type": "string"
        },
        "provno": {
          "type": "string"
        },
        "provno_stem": {
          "type": "string"
        },
        "qualification": {
          "type": "integer",
          "format": "int32"
        },
        "radallow": {
          "type": "integer",
          "format": "byte"
        },
        "radlistorder": {
          "type": "string"
        },
        "radnoprintdoctor": {
          "type": "integer",
          "format": "byte"
        },
        "radrequestform": {
          "type": "string"
        },
        "radtransport": {
          "type": "integer",
          "format": "int32"
        },
        "recentAddition": {
          "type": "boolean"
        },
        "recordmerged": {
          "type": "string",
          "format": "date-time"
        },
        "regionno": {
          "type": "integer",
          "format": "int32"
        },
        "reqdoccode": {
          "type": "string"
        },
        "reqdocpracno": {
          "type": "integer",
          "format": "int32"
        },
        "reqdoctorno": {
          "type": "integer",
          "format": "int32"
        },
        "rptemail": {
          "type": "integer",
          "format": "byte"
        },
        "rptfax": {
          "type": "integer",
          "format": "byte"
        },
        "rptformat": {
          "type": "integer",
          "format": "byte"
        },
        "rpthlink": {
          "type": "integer",
          "format": "byte"
        },
        "rptmail": {
          "type": "integer",
          "format": "byte"
        },
        "rptmailnum": {
          "type": "integer",
          "format": "byte"
        },
        "rptpatient": {
          "type": "integer",
          "format": "byte"
        },
        "rptpatientnum": {
          "type": "integer",
          "format": "byte"
        },
        "shortname": {
          "type": "string"
        },
        "source": {
          "type": "string"
        },
        "speciality": {
          "type": "integer",
          "format": "int32"
        },
        "street1": {
          "type": "string"
        },
        "street1_2": {
          "type": "string"
        },
        "street2": {
          "type": "string"
        },
        "street2_2": {
          "type": "string"
        },
        "street3": {
          "type": "string"
        },
        "suburb": {
          "type": "string"
        },
        "suburb_2": {
          "type": "string"
        },
        "title": {
          "type": "string"
        },
        "usepracdelivery": {
          "type": "integer",
          "format": "byte"
        },
        "userCreated": {
          "type": "string"
        },
        "userLastModified": {
          "type": "string"
        },
        "userno": {
          "type": "integer",
          "format": "int32"
        },
        "usertf": {
          "type": "integer",
          "format": "byte"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/BaseRequestParams"
        }
      ]
    },
    "APIResponseOfAddOrUpdateReferringDoctorResult": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "data": {
          "$ref": "#/definitions/AddOrUpdateReferringDoctorResult"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ProvideErrorMessage"
        }
      ]
    },
    "AddOrUpdateReferringDoctorResult": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "id"
      ],
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ProvideErrorMessage"
        }
      ]
    },
    "AddNewRequest": {
      "type": "object",
      "additionalProperties": false,
      "allOf": [
        {
          "$ref": "#/definitions/AddNewRequestParams"
        }
      ]
    },
    "AddNewRequestParams": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "patientID"
      ],
      "properties": {
        "patientID": {
          "type": "integer",
          "format": "int32"
        },
        "departmentID": {
          "type": "integer",
          "format": "int32"
        },
        "requester": {
          "$ref": "#/definitions/RequestingPersonInfo"
        },
        "clinicalNotes": {
          "type": "string"
        },
        "priority": {
          "type": "string"
        },
        "priorityReason": {
          "type": "string"
        },
        "bookingTypes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/RequestAbleBookingType"
          }
        },
        "indications": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/IndicationsInfo"
          }
        },
        "copyTo": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CopyToDoctorInfo"
          }
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/CorrelatableRequestParams"
        }
      ]
    },
    "RequestingPersonInfo": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "userID": {
          "type": "string"
        },
        "providerNumber": {
          "type": "string"
        },
        "surname": {
          "type": "string"
        },
        "givennames": {
          "type": "string"
        }
      }
    },
    "IndicationsInfo": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "indication_ID"
      ],
      "properties": {
        "indication_ID": {
          "type": "integer",
          "format": "int64"
        },
        "severity": {
          "type": "string"
        }
      }
    },
    "CopyToDoctorInfo": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "referringDoctorID"
      ],
      "properties": {
        "referringDoctorID": {
          "type": "integer",
          "format": "int32"
        },
        "providerNumber": {
          "type": "string"
        }
      }
    },
    "APIResponseOfAddNewRequestResult": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "data": {
          "$ref": "#/definitions/AddNewRequestResult"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ProvideErrorMessage"
        }
      ]
    },
    "AddNewRequestResult": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "incomingOrder_ID",
        "bookingTriage_ID",
        "occasionOfService_ID"
      ],
      "properties": {
        "incomingOrder_ID": {
          "type": "integer",
          "format": "int64"
        },
        "bookingTriage_ID": {
          "type": "integer",
          "format": "int64"
        },
        "occasionOfService_ID": {
          "type": "integer",
          "format": "int64"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ProvideErrorMessage"
        }
      ]
    },
    "FindRequest": {
      "type": "object",
      "additionalProperties": false,
      "allOf": [
        {
          "$ref": "#/definitions/FindRequestParams"
        }
      ]
    },
    "FindRequestParams": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "includeEntriesCreatedDaysAgo"
      ],
      "properties": {
        "patient_ID": {
          "type": "integer",
          "format": "int32"
        },
        "department_ID": {
          "type": "integer",
          "format": "int32"
        },
        "userCreated": {
          "type": "string"
        },
        "includeEntriesCreatedDaysAgo": {
          "type": "integer",
          "format": "int32"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/CorrelatableRequestParams"
        }
      ]
    },
    "APIResponseOfFindRequestResult": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "data": {
          "$ref": "#/definitions/FindRequestResult"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ProvideErrorMessage"
        }
      ]
    },
    "FindRequestResult": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "results": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TriageBookingDataItem"
          }
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ProvideErrorMessage"
        }
      ]
    },
    "TriageBookingDataItem": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "dateCreated"
      ],
      "properties": {
        "triage_ID": {
          "type": "integer",
          "format": "int32"
        },
        "patient": {
          "$ref": "#/definitions/PatientDataItem"
        },
        "department": {
          "$ref": "#/definitions/DepartmentDataItem"
        },
        "triageBookingNotes": {
          "type": "string"
        },
        "userCreated": {
          "type": "string"
        },
        "dateCreated": {
          "type": "string",
          "format": "date-time"
        },
        "bookingStatus": {
          "type": "string"
        },
        "triageWorkflowStep": {
          "type": "string"
        }
      }
    },
    "PatientDataItem": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "patient_ID"
      ],
      "properties": {
        "patient_ID": {
          "type": "integer",
          "format": "int64"
        },
        "firstName": {
          "type": "string"
        },
        "surname": {
          "type": "string"
        },
        "primaryMRN": {
          "type": "string"
        },
        "dateOfBirth": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "APIResponseOfRoleDOOf": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/RoleDO"
          }
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ProvideErrorMessage"
        }
      ]
    },
    "GetStaffForRolesLocationsRequest": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "roleNames": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "locationIds": {
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int32"
          }
        }
      }
    },
    "APIResponseOfListOfStaffDO": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/StaffDO"
          }
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ProvideErrorMessage"
        }
      ]
    },
    "StaffDO": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "staffId",
        "rosterHours",
        "numSessions"
      ],
      "properties": {
        "staffId": {
          "type": "integer",
          "format": "int32"
        },
        "staffName": {
          "type": "string"
        },
        "displayColour": {
          "type": "string"
        },
        "staffRoles": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/StaffRoleDO"
          }
        },
        "rosterHours": {
          "type": "number",
          "format": "double"
        },
        "numSessions": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "StaffRoleDO": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "roleId",
        "defaultLocation"
      ],
      "properties": {
        "roleId": {
          "type": "integer",
          "format": "int32"
        },
        "roleName": {
          "type": "string"
        },
        "defaultLocation": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "APIResponseOfRosterTemplateInit": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "data": {
          "$ref": "#/definitions/RosterTemplateInit"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ProvideErrorMessage"
        }
      ]
    },
    "RosterTemplateInit": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "templateSets": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/RosterTemplateSetDO"
          }
        },
        "sessions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SessionDO"
          }
        },
        "locationRooms": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/LocationRoomDO"
          }
        },
        "doctors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/DoctorDO"
          }
        },
        "bookingRoles": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/BookingRoleDO"
          }
        },
        "staff": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/StaffDO"
          }
        }
      }
    },
    "RosterTemplateSetDO": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "id",
        "cycleLength",
        "dateCreated",
        "dateLastModified"
      ],
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "templateSetName": {
          "type": "string"
        },
        "cycleLength": {
          "type": "integer",
          "format": "int32"
        },
        "weeks": {
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int32"
          }
        },
        "userCreated": {
          "type": "string"
        },
        "dateCreated": {
          "type": "string",
          "format": "date-time"
        },
        "userLastModified": {
          "type": "string"
        },
        "dateLastModified": {
          "type": "string",
          "format": "date-time"
        },
        "userLastRun": {
          "type": "string"
        },
        "dateLastRun": {
          "type": "string",
          "format": "date-time"
        },
        "lastRunFrom": {
          "type": "string",
          "format": "date-time"
        },
        "lastRunTo": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "SessionDO": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "sessionId",
        "startHour",
        "startMinutes",
        "endHour",
        "endMinutes"
      ],
      "properties": {
        "sessionId": {
          "type": "integer",
          "format": "int32"
        },
        "startHour": {
          "type": "integer",
          "format": "int32"
        },
        "startMinutes": {
          "type": "integer",
          "format": "int32"
        },
        "endHour": {
          "type": "integer",
          "format": "int32"
        },
        "endMinutes": {
          "type": "integer",
          "format": "int32"
        },
        "displayName": {
          "type": "string"
        }
      }
    },
    "BookingRoleDO": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "staffNumber",
        "roleId"
      ],
      "properties": {
        "staffNumber": {
          "type": "integer",
          "format": "int32"
        },
        "roleId": {
          "type": "integer",
          "format": "int32"
        },
        "displayName": {
          "type": "string"
        },
        "staff": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/StaffDO"
          }
        }
      }
    },
    "APIResponseOfListOfRosterTemplateDO": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/RosterTemplateDO"
          }
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ProvideErrorMessage"
        }
      ]
    },
    "RosterTemplateDO": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "templateId",
        "isDoctor",
        "locationId",
        "roomId",
        "startDate",
        "endDate",
        "trueStartDate",
        "trueEndDate",
        "sessionId",
        "deleted",
        "edited"
      ],
      "properties": {
        "templateId": {
          "type": "integer",
          "format": "int32"
        },
        "doctorId": {
          "type": "integer",
          "format": "int32"
        },
        "staffId": {
          "type": "integer",
          "format": "int32"
        },
        "roleId": {
          "type": "integer",
          "format": "int32"
        },
        "roleName": {
          "type": "string"
        },
        "isDoctor": {
          "type": "boolean"
        },
        "staffName": {
          "type": "string"
        },
        "locationId": {
          "type": "integer",
          "format": "int32"
        },
        "roomId": {
          "type": "integer",
          "format": "int32"
        },
        "locationRoomName": {
          "type": "string"
        },
        "startDate": {
          "type": "string",
          "format": "date-time"
        },
        "endDate": {
          "type": "string",
          "format": "date-time"
        },
        "trueStartDate": {
          "type": "string",
          "format": "date-time"
        },
        "trueEndDate": {
          "type": "string",
          "format": "date-time"
        },
        "sessionId": {
          "type": "integer",
          "format": "int32"
        },
        "deleted": {
          "type": "boolean"
        },
        "edited": {
          "type": "boolean"
        },
        "newId": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "APIResponseOfRosterTemplateSetDO": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "data": {
          "$ref": "#/definitions/RosterTemplateSetDO"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ProvideErrorMessage"
        }
      ]
    },
    "RosterTemplatesSaveRequest": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "userPkId",
        "templateSetId"
      ],
      "properties": {
        "templates": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/RosterTemplateDO"
          }
        },
        "deletedTemplates": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/RosterTemplateDO"
          }
        },
        "userPkId": {
          "type": "string",
          "format": "guid"
        },
        "templateSetId": {
          "type": "integer",
          "format": "int32"
        },
        "sessions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SessionDO"
          }
        }
      }
    },
    "APIResponseOfRosterTemplatesSaveResult": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "data": {
          "$ref": "#/definitions/RosterTemplatesSaveResult"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ProvideErrorMessage"
        }
      ]
    },
    "RosterTemplatesSaveResult": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "rosterTemplateSet": {
          "$ref": "#/definitions/RosterTemplateSetDO"
        }
      }
    },
    "APIResponseOfRosterBookingDO": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "data": {
          "$ref": "#/definitions/RosterBookingDO"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ProvideErrorMessage"
        }
      ]
    },
    "RosterBookingDO": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "roster_ID",
        "startTime",
        "endTime",
        "duration"
      ],
      "properties": {
        "roster_ID": {
          "type": "integer",
          "format": "int32"
        },
        "startTime": {
          "type": "string",
          "format": "date-time"
        },
        "endTime": {
          "type": "string",
          "format": "date-time"
        },
        "duration": {
          "type": "integer",
          "format": "int32"
        },
        "location": {
          "type": "string"
        },
        "room": {
          "type": "string"
        },
        "doctor": {
          "type": "string"
        },
        "staff": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "RetrieveDataForToken": {
      "type": "object",
      "additionalProperties": false,
      "allOf": [
        {
          "$ref": "#/definitions/RetrieveDataForTokenRequest"
        }
      ]
    },
    "RetrieveDataForTokenRequest": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "token": {
          "type": "string"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/CorrelatableRequestParams"
        }
      ]
    },
    "APIResponseOfRetrieveDataForTokenResult": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "data": {
          "$ref": "#/definitions/RetrieveDataForTokenResult"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ProvideErrorMessage"
        }
      ]
    },
    "RetrieveDataForTokenResult": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "lastBillingLocation",
        "userPkId",
        "licenseUserId",
        "roleId",
        "doctorId",
        "userDashboardId",
        "inAdminMode"
      ],
      "properties": {
        "sessionQueueName": {
          "type": "string"
        },
        "username": {
          "type": "string"
        },
        "lastBillingLocation": {
          "type": "integer",
          "format": "int32"
        },
        "userPkId": {
          "type": "string",
          "format": "guid"
        },
        "licenseUserId": {
          "type": "integer",
          "format": "int64"
        },
        "roleId": {
          "type": "integer",
          "format": "int32"
        },
        "doctorId": {
          "type": "integer",
          "format": "int32"
        },
        "doctorDisplayName": {
          "type": "string"
        },
        "userDashboardId": {
          "type": "integer",
          "format": "int32"
        },
        "userDisplayName": {
          "type": "string"
        },
        "stompDetails": {
          "$ref": "#/definitions/StompDetails"
        },
        "baseHealthTrackApiUrl": {
          "type": "string"
        },
        "inAdminMode": {
          "type": "boolean"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ProvideErrorMessage"
        }
      ]
    },
    "StompDetails": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "url": {
          "type": "string"
        },
        "user": {
          "type": "string"
        },
        "password": {
          "type": "string"
        },
        "vHost": {
          "type": "string"
        }
      }
    },
    "AddOrUpdateTask": {
      "type": "object",
      "additionalProperties": false,
      "allOf": [
        {
          "$ref": "#/definitions/AddOrUpdateTaskParams"
        }
      ]
    },
    "AddOrUpdateTaskParams": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "deleted"
      ],
      "properties": {
        "task_ID": {
          "type": "integer",
          "format": "int64"
        },
        "assignedTo": {
          "type": "string"
        },
        "booking_ID": {
          "type": "integer",
          "format": "int32"
        },
        "comments": {
          "type": "string"
        },
        "company_ID": {
          "type": "integer",
          "format": "int32"
        },
        "completeBy": {
          "type": "string"
        },
        "completeDate": {
          "type": "string",
          "format": "date-time"
        },
        "createdBy": {
          "type": "string"
        },
        "creationDate": {
          "type": "string",
          "format": "date-time"
        },
        "delegatedTo": {
          "type": "string"
        },
        "deleted": {
          "type": "boolean"
        },
        "deletionDate": {
          "type": "string",
          "format": "date-time"
        },
        "deletionNote": {
          "type": "integer",
          "format": "int32"
        },
        "deletionReason": {
          "type": "integer",
          "format": "int32"
        },
        "deletionUser": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "dueDate": {
          "type": "string",
          "format": "date-time"
        },
        "inProgressBy": {
          "type": "string"
        },
        "inProgressDate": {
          "type": "string",
          "format": "date-time"
        },
        "lastAssignedTo": {
          "type": "string"
        },
        "meta_ID": {
          "type": "integer",
          "format": "int64"
        },
        "mR_ID": {
          "type": "integer",
          "format": "int64"
        },
        "name": {
          "type": "string"
        },
        "originator_ID": {
          "type": "integer",
          "format": "int32"
        },
        "patient_ID": {
          "type": "integer",
          "format": "int32"
        },
        "perscription_ID": {
          "type": "integer",
          "format": "int32"
        },
        "priority": {
          "type": "integer",
          "format": "byte"
        },
        "referral_ID": {
          "type": "integer",
          "format": "int32"
        },
        "startDate": {
          "type": "string",
          "format": "date-time"
        },
        "status": {
          "type": "integer",
          "format": "int32"
        },
        "taskType_ID": {
          "type": "integer",
          "format": "byte"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/BaseRequestParams"
        }
      ]
    },
    "APIResponseOfAddOrUpdateTaskResult": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "data": {
          "$ref": "#/definitions/AddOrUpdateTaskResult"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ProvideErrorMessage"
        }
      ]
    },
    "AddOrUpdateTaskResult": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "task_ID"
      ],
      "properties": {
        "task_ID": {
          "type": "integer",
          "format": "int64"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ProvideErrorMessage"
        }
      ]
    },
    "APIResponseOfTriageBookingDO": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "data": {
          "$ref": "#/definitions/TriageBookingDO"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ProvideErrorMessage"
        }
      ]
    },
    "TriageBookingDO": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "patientId",
        "bookingDate"
      ],
      "properties": {
        "patientId": {
          "type": "integer",
          "format": "int32"
        },
        "workflowStep": {
          "type": "string"
        },
        "locationId": {
          "type": "integer",
          "format": "int32"
        },
        "purposes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/BookingTypeDO"
          }
        },
        "options": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TriageOptionDO"
          }
        },
        "notes": {
          "type": "string"
        },
        "referral": {
          "$ref": "#/definitions/TriageReferralDO"
        },
        "bookedDoctorId": {
          "type": "integer",
          "format": "int32"
        },
        "associateId": {
          "type": "integer",
          "format": "int32"
        },
        "bookingDate": {
          "type": "string",
          "format": "date-time"
        },
        "purpose": {
          "type": "string"
        },
        "appointments": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TriageBookingAppointmentDO"
          }
        }
      }
    },
    "BookingTypeDO": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "display": {
          "type": "string"
        },
        "bookingCode": {
          "type": "string"
        }
      }
    },
    "TriageOptionDO": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "index",
        "weight"
      ],
      "properties": {
        "name": {
          "type": "string"
        },
        "index": {
          "type": "integer",
          "format": "int32"
        },
        "weight": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "TriageReferralDO": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "patientId",
        "fromDate",
        "toDate",
        "referralId"
      ],
      "properties": {
        "patientId": {
          "type": "integer",
          "format": "int32"
        },
        "fromDate": {
          "type": "string",
          "format": "date-time"
        },
        "toDate": {
          "type": "string",
          "format": "date-time"
        },
        "referringDoctor": {
          "$ref": "#/definitions/DoctorDO"
        },
        "referralId": {
          "type": "integer",
          "format": "int32"
        },
        "purpose": {
          "type": "string"
        },
        "typeCode": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      }
    },
    "TriageBookingAppointmentDO": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "appointmentId",
        "triageBookingId",
        "locationId",
        "startDate",
        "endDate",
        "doctorId"
      ],
      "properties": {
        "appointmentId": {
          "type": "integer",
          "format": "int32"
        },
        "triageBookingId": {
          "type": "integer",
          "format": "int32"
        },
        "locationId": {
          "type": "integer",
          "format": "int32"
        },
        "startDate": {
          "type": "string",
          "format": "date-time"
        },
        "endDate": {
          "type": "string",
          "format": "date-time"
        },
        "bookingType": {
          "type": "string"
        },
        "doctorId": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "APIResponseOfListOfBookingTypeDO": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/BookingTypeDO"
          }
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ProvideErrorMessage"
        }
      ]
    },
    "APIResponseOfListOfTriageOptionDO": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TriageOptionDO"
          }
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ProvideErrorMessage"
        }
      ]
    },
    "APIResponseOfListOfTriageReferralDO": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TriageReferralDO"
          }
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ProvideErrorMessage"
        }
      ]
    },
    "APIResponseOfListOfLocationWithDoctors": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/LocationWithDoctors"
          }
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ProvideErrorMessage"
        }
      ]
    },
    "LocationWithDoctors": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "locationId"
      ],
      "properties": {
        "locationId": {
          "type": "integer",
          "format": "int32"
        },
        "locationName": {
          "type": "string"
        },
        "locationDoctors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/DoctorDO"
          }
        }
      }
    },
    "APIResponseOfTriageBookingAppointmentDO": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "data": {
          "$ref": "#/definitions/TriageBookingAppointmentDO"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ProvideErrorMessage"
        }
      ]
    },
    "AddOrUpdateTriageBooking": {
      "type": "object",
      "additionalProperties": false,
      "allOf": [
        {
          "$ref": "#/definitions/AddOrUpdateTriageBookingParams"
        }
      ]
    },
    "AddOrUpdateTriageBookingParams": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "triage_ID",
        "patient_ID",
        "dateTimeStart",
        "dateTimeEnd",
        "duration",
        "deleted",
        "triageIncrement"
      ],
      "properties": {
        "triage_ID": {
          "type": "integer",
          "format": "int32"
        },
        "patient_ID": {
          "type": "integer",
          "format": "int32"
        },
        "dateTimeStart": {
          "type": "string",
          "format": "date-time"
        },
        "dateTimeEnd": {
          "type": "string",
          "format": "date-time"
        },
        "duration": {
          "type": "integer",
          "format": "int32"
        },
        "bookingType": {
          "type": "string"
        },
        "triageStatus": {
          "type": "string"
        },
        "location_ID": {
          "type": "integer",
          "format": "int32"
        },
        "room_ID": {
          "type": "integer",
          "format": "int32"
        },
        "drIDBooked": {
          "type": "integer",
          "format": "int32"
        },
        "note_ID": {
          "type": "integer",
          "format": "int32"
        },
        "provNum_ID": {
          "type": "integer",
          "format": "int32"
        },
        "associate": {
          "type": "integer",
          "format": "int32"
        },
        "triageOptions": {
          "type": "integer",
          "format": "int64"
        },
        "dateTimeArrived": {
          "type": "string",
          "format": "date-time"
        },
        "userArrived": {
          "type": "string"
        },
        "deleted": {
          "type": "boolean"
        },
        "deletionDate": {
          "type": "string",
          "format": "date-time"
        },
        "deletionUser": {
          "type": "string"
        },
        "userCreated": {
          "type": "string"
        },
        "dateCreated": {
          "type": "string",
          "format": "date-time"
        },
        "userLastModified": {
          "type": "string"
        },
        "dateLastModified": {
          "type": "string",
          "format": "date-time"
        },
        "triageIncrement": {
          "type": "integer",
          "format": "int64"
        },
        "workflowStep": {
          "type": "string"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/BaseRequestParams"
        }
      ]
    },
    "APIResponseOfAddOrUpdateTriageBookingResult": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "data": {
          "$ref": "#/definitions/AddOrUpdateTriageBookingResult"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ProvideErrorMessage"
        }
      ]
    },
    "AddOrUpdateTriageBookingResult": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "triage_ID"
      ],
      "properties": {
        "triage_ID": {
          "type": "integer",
          "format": "int32"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ProvideErrorMessage"
        }
      ]
    },
    "APIResponseOfGetWindowLayoutResponse": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "data": {
          "$ref": "#/definitions/GetWindowLayoutResponse"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ProvideErrorMessage"
        }
      ]
    },
    "GetWindowLayoutResponse": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "found"
      ],
      "properties": {
        "found": {
          "type": "boolean"
        },
        "layoutInformation": {
          "$ref": "#/definitions/LayoutInfo"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ProvideErrorMessage"
        }
      ]
    },
    "LayoutInfo": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "location",
        "size",
        "formWindowState"
      ],
      "properties": {
        "location": {
          "$ref": "#/definitions/Point"
        },
        "size": {
          "$ref": "#/definitions/Size"
        },
        "formWindowState": {
          "$ref": "#/definitions/FormWindowState"
        }
      }
    },
    "Point": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "x",
        "y"
      ],
      "properties": {
        "x": {
          "type": "integer",
          "format": "int32"
        },
        "y": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "Size": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "width",
        "height"
      ],
      "properties": {
        "width": {
          "type": "integer",
          "format": "int32"
        },
        "height": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "FormWindowState": {
      "type": "integer",
      "description": "",
      "x-enumNames": [
        "Normal",
        "Minimized",
        "Maximized"
      ],
      "enum": [
        0,
        1,
        2
      ]
    },
    "AddOrUpdateWindowLayout": {
      "type": "object",
      "additionalProperties": false,
      "allOf": [
        {
          "$ref": "#/definitions/AddOrUpdateWindowLayoutRequest"
        }
      ]
    },
    "AddOrUpdateWindowLayoutRequest": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "token": {
          "type": "string"
        },
        "url": {
          "type": "string"
        },
        "screenPrefix": {
          "type": "string"
        },
        "layoutInformation": {
          "$ref": "#/definitions/LayoutInfo"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/CorrelatableRequestParams"
        }
      ]
    },
    "APIResponseOfAddOrUpdateWindowLayoutResponse": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "data": {
          "$ref": "#/definitions/AddOrUpdateWindowLayoutResponse"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ProvideErrorMessage"
        }
      ]
    },
    "AddOrUpdateWindowLayoutResponse": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "saved"
      ],
      "properties": {
        "saved": {
          "type": "boolean"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ProvideErrorMessage"
        }
      ]
    }
  }
}